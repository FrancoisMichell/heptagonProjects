(*link pros slides: https://drive.google.com/open?id=1QGEjtj41JJPet6rVrFoiDohjFCYRYAhd7RuK-l4HRhs*)

node light_source ( c1, c2, sw : bool ) returns ( light_source_on : int )
	let
		automaton
			state Off do
				light_source_on = 0;
				unless (c1 & sw) or not c2 then On

			state On do
				light_source_on = 1;
				unless (c1 & sw) or not c2 then Off
		end
	tel

node door ( c : bool ) returns ( door_open : bool )
	let
	    automaton
		    state Closed do
				door_open = false;
			    unless not c then Open
		    state Open do
				door_open = true;
			    unless not c then Closed
	    end
	tel

node closet ( c : bool ) returns ( closet_open : bool )
	let
		automaton
			state Locked do
				closet_open = false;
				unless not c then Open
			state Open do
				closet_open = true;
				unless c then Locked
		end
	tel

node person ( arrived : bool ) returns ( presence : bool )
	let
		automaton
			state Not_Present do
				presence = false;
				unless arrived then Present
			state Present do
				presence = true;
				unless arrived then Not_Present
		end
	tel

node computer ( c : bool ) returns ( computer_on : bool )
	let
		automaton
			state Off do
				computer_on = false;
				unless not c then On
			state On do
				computer_on = true;
				unless not c then Off
		end
	tel

node window ( c : bool ) returns ( window_open : bool )
	let
		automaton
			state Closed do
				window_open = false;
				unless not c then Open
				
			state Open do
				window_open = true;
				unless c then Closed
				
		end
	tel

node air_conditioner ( c1, c2 : bool ) returns ( air_state : int )
	let
		automaton
			state Off do
				air_state = 0;
				unless c1 then Min
					| not c2 then Max
			state Min do
				air_state = 1;
				unless not c1 then Off
					| not c2 then Max
			state Max do
				air_state = 2;
				unless not c1 then Min
					| not c2 then Off
		end
	tel

node day_shift (change : bool) returns ( night : bool)
	let
		automaton
			state Dia do
				night = false
				unless change then Noite
			state Noite do
				night = true
				unless change then Dia
		end
	tel

node controller( change_shift, worker, cleaner, light_switch, blind_switch: bool)
	
	returns (night, door_open, worker_presence, cleaner_presence, pc_on, window_open, 
	closet_open: bool; light_status, blind_status, air_status : int;)
  	
  	contract
		var rule1, rule2, rule3, rule4, rule5, rule6 : bool;

		let
			rule1 = not ((worker_presence or cleaner_presence) & night) or (light_status = 1 & blind_status = 0);
		    rule2 = not ((worker_presence or cleaner_presence) & not night) or (light_status = 1 or blind_status = 1);

		    rule3 = not (not worker_presence & not cleaner_presence) or 
		    	(not pc_on & air_status = 0 & light_status = 0 & blind_status = 0 & not closet_open);
		    
		    rule4 = not (worker_presence) or pc_on;

		    rule5 = not (not night & (pc_on & light_status = 1) or (worker_presence & cleaner_presence)) or air_status = 2;
		    rule6 = not (cleaner_presence) or closet_open;
		tel
    enforce (rule1 & rule2 & rule3 & rule4 & rule5 & rule6 )
    with ( c_door, c_pc, c_window, c_air_1, c_air_2, c_closet,  c_light_1, c_light_2, c_blind_1, c_blind_2 : bool )

  	let
  		night = inlined day_shift (change_shift);
		door_open = inlined door (c_door);
		closet_open = inlined closet (c_closet);
		worker_presence = inlined person (worker);
		cleaner_presence = inlined person (cleaner);
		pc_on = inlined computer (c_pc);
		window_open = inlined window (c_window);
		air_status = inlined air_conditioner (c_air_1, c_air_2);
  		light_status = inlined light_source (light_switch, c_light_1, c_light_2);
  		blind_status = inlined light_source (blind_switch, c_blind_1, c_blind_2);
	tel
