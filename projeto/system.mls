type st_18 = St_18_Noite|St_18_Dia
type st_17 = St_17_Open|St_17_Closed
type st_16 = St_16_Open|St_16_Locked
type st_15 = St_15_Present|St_15_Not_Present
type st_14 = St_14_Present|St_14_Not_Present
type st_13 = St_13_On|St_13_Off
type st_12 = St_12_Open|St_12_Closed
type st_11 = St_11_Off_fail|St_11_Off|St_11_Min_fail|St_11_Min|
  St_11_Max_fail|St_11_Max
type st_10 = St_10_On_fail|St_10_On|St_10_Off_fail|St_10_Off
type st_9 = St_9_On_fail|St_9_On|St_9_Off_fail|St_9_Off
type st_8 = St_8_Funcionando|St_8_Falha
type st_7 = St_7_Noite|St_7_Dia
type st_6 = St_6_Off_fail|St_6_Off|St_6_Min_fail|St_6_Min|St_6_Max_fail|
  St_6_Max
type st_5 = St_5_Open|St_5_Closed
type st_4 = St_4_On|St_4_Off
type st_3 = St_3_Present|St_3_Not_Present
type st_2 = St_2_Open|St_2_Locked
type st_1 = St_1_Open|St_1_Closed
type st = St_On_fail|St_On|St_Off_fail|St_Off
node light_source(c1 : bool; c2 : bool; sw : bool; failed_recovered : bool)
returns (light_source_status : int)
var v_317 : bool; v_316 : bool; v_315 : bool; v_314 : bool; v_313 : bool;
    v_312 : bool; v_311 : int; v_310 : int; ns_St_On_fail_2_0 : bool;
    ns_St_On_fail_2_1 : bool; ns_St_On_2_0 : bool; ns_St_On_2_1 : bool;
    ns_St_Off_fail_2_0 : bool; ns_St_Off_fail_2_1 : bool;
    ns_St_Off_2_0 : bool; ns_St_Off_2_1 : bool; ck_1_2_0 : bool;
    ck_1_2_1 : bool; nr_St_On_fail : bool; ns_St_On_fail_2 : bool;
    ns_St_On_fail_1 : bool; light_source_status_St_On_fail : int;
    nr_St_On : bool; ns_St_On_2 : bool; ns_St_On_1 : bool;
    light_source_status_St_On : int; nr_St_Off_fail : bool;
    ns_St_Off_fail_2 : bool; ns_St_Off_fail_1 : bool;
    light_source_status_St_Off_fail : int; nr_St_Off : bool;
    ns_St_Off_2 : bool; ns_St_Off_1 : bool; light_source_status_St_Off : int;
    ck_1_2 : bool; ck_1_1 : bool; v_18_2_0 : bool; v_18_2_1 : bool;
    v_19 : bool; v_18_2 : bool; v_18_1 : bool; v_17 : bool; v_16 : bool;
    v_15 : bool; v_13_2_0 : bool; v_13_2_1 : bool; v_14 : bool;
    v_13_2 : bool; v_13_1 : bool; v_12 : bool; v_11 : bool; v_10 : bool;
    v_8_2_0 : bool; v_8_2_1 : bool; v_9 : bool; v_8_2 : bool; v_8_1 : bool;
    v_7 : bool; v_6 : bool; v_5 : bool; v_3_2_0 : bool; v_3_2_1 : bool;
    v_4 : bool; v_3_2 : bool; v_3_1 : bool; v_2 : bool; v_1 : bool; v : bool;
    v_325 : bool; v_324 : bool; v_323 : bool; v_322 : bool; v_321 : bool;
    v_320 : bool; v_319 : bool; v_318 : bool; s_St_On_fail_2_0 : bool;
    s_St_On_fail_2_1 : bool; s_St_On_2_0 : bool; s_St_On_2_1 : bool;
    s_St_Off_fail_2_0 : bool; s_St_Off_fail_2_1 : bool; s_St_Off_2_0 : bool;
    s_St_Off_2_1 : bool; ck_2_0 : bool; ck_2_1 : bool; r_St_On_fail : bool;
    s_St_On_fail_2 : bool; s_St_On_fail_1 : bool; r_St_On : bool;
    s_St_On_2 : bool; s_St_On_1 : bool; r_St_Off_fail : bool;
    s_St_Off_fail_2 : bool; s_St_Off_fail_1 : bool; r_St_Off : bool;
    s_St_Off_2 : bool; s_St_Off_1 : bool; ck_2 : bool; ck_1_3 : bool;
    s_2_0 : bool; s_2_1 : bool; ns_2_0 : bool; ns_2_1 : bool; s_2 : bool;
    s_1 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_1_1 = s_1;
  ck_1_2 = s_2;
  light_source_status_St_Off = 0;
  nr_St_Off = false;
  ns_St_Off_1 = true;
  ns_St_Off_2 = true;
  light_source_status_St_Off_fail = 2;
  nr_St_Off_fail = false;
  ns_St_Off_fail_1 = true;
  ns_St_Off_fail_2 = false;
  light_source_status_St_On = 1;
  nr_St_On = false;
  ns_St_On_1 = false;
  ns_St_On_2 = true;
  light_source_status_St_On_fail = 3;
  nr_St_On_fail = false;
  ns_St_On_fail_1 = false;
  ns_St_On_fail_2 = false;
  v_310 =
    merge ck_1_2_1
      (true -> light_source_status_St_Off)
      (false -> light_source_status_St_Off_fail);
  v_311 =
    merge ck_1_2_0
      (true -> light_source_status_St_On)
      (false -> light_source_status_St_On_fail);
  light_source_status = merge ck_1_1 (true -> v_310)(false -> v_311);
  v_312 = merge ck_1_2_1 (true -> ns_St_Off_1)(false -> ns_St_Off_fail_1);
  v_313 = merge ck_1_2_1 (true -> ns_St_Off_2)(false -> ns_St_Off_fail_2);
  v_314 = merge ck_1_2_0 (true -> ns_St_On_1)(false -> ns_St_On_fail_1);
  v_315 = merge ck_1_2_0 (true -> ns_St_On_2)(false -> ns_St_On_fail_2);
  ns_1 = merge ck_1_1 (true -> v_312)(false -> v_314);
  ns_2 = merge ck_1_1 (true -> v_313)(false -> v_315);
  v_316 = merge ck_1_2_1 (true -> nr_St_Off)(false -> nr_St_Off_fail);
  v_317 = merge ck_1_2_0 (true -> nr_St_On)(false -> nr_St_On_fail);
  nr = merge ck_1_1 (true -> v_316)(false -> v_317);
  ck_1_2_1 = (ck_1_2 when true(ck_1_1));
  ck_1_2_0 = (ck_1_2 when false(ck_1_1));
  ns_St_Off_2_1 = (ns_St_Off_2 when true(ns_St_Off_1));
  ns_St_Off_2_0 = (ns_St_Off_2 when false(ns_St_Off_1));
  ns_St_Off_fail_2_1 = (ns_St_Off_fail_2 when true(ns_St_Off_fail_1));
  ns_St_Off_fail_2_0 = (ns_St_Off_fail_2 when false(ns_St_Off_fail_1));
  ns_St_On_2_1 = (ns_St_On_2 when true(ns_St_On_1));
  ns_St_On_2_0 = (ns_St_On_2 when false(ns_St_On_1));
  ns_St_On_fail_2_1 = (ns_St_On_fail_2 when true(ns_St_On_fail_1));
  ns_St_On_fail_2_0 = (ns_St_On_fail_2 when false(ns_St_On_fail_1));
  v_318 = true fby ns_1;
  v_319 = true fby ns_2;
  ck_1_3 = v_318;
  ck_2 = v_319;
  r_St_Off = if v_17 then true else v_19;
  s_St_Off_1 = if v_17 then false else v_18_1;
  s_St_Off_2 = if v_17 then true else v_18_2;
  v_19 =
    if ((failed_recovered when true(ck_1_3)) when true(ck_2_1))
    then true
    else ((pnr when true(ck_1_3)) when true(ck_2_1));
  v_18_1 =
    if ((failed_recovered when true(ck_1_3)) when true(ck_2_1))
    then true
    else true;
  v_18_2 =
    if ((failed_recovered when true(ck_1_3)) when true(ck_2_1))
    then false
    else true;
  v_17 = (v_15 or v_16);
  v_16 = not(((c2 when true(ck_1_3)) when true(ck_2_1)));
  v_15 =
    (((c1 when true(ck_1_3)) when true(ck_2_1)) &
     ((sw when true(ck_1_3)) when true(ck_2_1)));
  v_18_2_1 = (v_18_2 when true(v_18_1));
  v_18_2_0 = (v_18_2 when false(v_18_1));
  r_St_Off_fail = if v_12 then true else v_14;
  s_St_Off_fail_1 = if v_12 then false else v_13_1;
  s_St_Off_fail_2 = if v_12 then false else v_13_2;
  v_14 =
    if ((failed_recovered when true(ck_1_3)) when false(ck_2_1))
    then true
    else ((pnr when true(ck_1_3)) when false(ck_2_1));
  v_13_1 =
    if ((failed_recovered when true(ck_1_3)) when false(ck_2_1))
    then true
    else true;
  v_13_2 =
    if ((failed_recovered when true(ck_1_3)) when false(ck_2_1))
    then true
    else false;
  v_12 = (v_10 or v_11);
  v_11 = not(((c2 when true(ck_1_3)) when false(ck_2_1)));
  v_10 =
    (((c1 when true(ck_1_3)) when false(ck_2_1)) &
     ((sw when true(ck_1_3)) when false(ck_2_1)));
  v_13_2_1 = (v_13_2 when true(v_13_1));
  v_13_2_0 = (v_13_2 when false(v_13_1));
  r_St_On = if v_7 then true else v_9;
  s_St_On_1 = if v_7 then true else v_8_1;
  s_St_On_2 = if v_7 then true else v_8_2;
  v_9 =
    if ((failed_recovered when false(ck_1_3)) when true(ck_2_0))
    then true
    else ((pnr when false(ck_1_3)) when true(ck_2_0));
  v_8_1 =
    if ((failed_recovered when false(ck_1_3)) when true(ck_2_0))
    then false
    else false;
  v_8_2 =
    if ((failed_recovered when false(ck_1_3)) when true(ck_2_0))
    then false
    else true;
  v_7 = (v_5 or v_6);
  v_6 = not(((c2 when false(ck_1_3)) when true(ck_2_0)));
  v_5 =
    (((c1 when false(ck_1_3)) when true(ck_2_0)) &
     ((sw when false(ck_1_3)) when true(ck_2_0)));
  v_8_2_1 = (v_8_2 when true(v_8_1));
  v_8_2_0 = (v_8_2 when false(v_8_1));
  r_St_On_fail = if v_2 then true else v_4;
  s_St_On_fail_1 = if v_2 then true else v_3_1;
  s_St_On_fail_2 = if v_2 then false else v_3_2;
  v_4 =
    if ((failed_recovered when false(ck_1_3)) when false(ck_2_0))
    then true
    else ((pnr when false(ck_1_3)) when false(ck_2_0));
  v_3_1 =
    if ((failed_recovered when false(ck_1_3)) when false(ck_2_0))
    then false
    else false;
  v_3_2 =
    if ((failed_recovered when false(ck_1_3)) when false(ck_2_0))
    then true
    else false;
  v_2 = (v or v_1);
  v_1 = not(((c2 when false(ck_1_3)) when false(ck_2_0)));
  v =
    (((c1 when false(ck_1_3)) when false(ck_2_0)) &
     ((sw when false(ck_1_3)) when false(ck_2_0)));
  v_3_2_1 = (v_3_2 when true(v_3_1));
  v_3_2_0 = (v_3_2 when false(v_3_1));
  v_320 = merge ck_2_1 (true -> s_St_Off_1)(false -> s_St_Off_fail_1);
  v_321 = merge ck_2_1 (true -> s_St_Off_2)(false -> s_St_Off_fail_2);
  v_322 = merge ck_2_0 (true -> s_St_On_1)(false -> s_St_On_fail_1);
  v_323 = merge ck_2_0 (true -> s_St_On_2)(false -> s_St_On_fail_2);
  s_1 = merge ck_1_3 (true -> v_320)(false -> v_322);
  s_2 = merge ck_1_3 (true -> v_321)(false -> v_323);
  v_324 = merge ck_2_1 (true -> r_St_Off)(false -> r_St_Off_fail);
  v_325 = merge ck_2_0 (true -> r_St_On)(false -> r_St_On_fail);
  r = merge ck_1_3 (true -> v_324)(false -> v_325);
  ck_2_1 = (ck_2 when true(ck_1_3));
  ck_2_0 = (ck_2 when false(ck_1_3));
  s_St_Off_2_1 = (s_St_Off_2 when true(s_St_Off_1));
  s_St_Off_2_0 = (s_St_Off_2 when false(s_St_Off_1));
  s_St_Off_fail_2_1 = (s_St_Off_fail_2 when true(s_St_Off_fail_1));
  s_St_Off_fail_2_0 = (s_St_Off_fail_2 when false(s_St_Off_fail_1));
  s_St_On_2_1 = (s_St_On_2 when true(s_St_On_1));
  s_St_On_2_0 = (s_St_On_2 when false(s_St_On_1));
  s_St_On_fail_2_1 = (s_St_On_fail_2 when true(s_St_On_fail_1));
  s_St_On_fail_2_0 = (s_St_On_fail_2 when false(s_St_On_fail_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1))
tel

node door(c : bool) returns (door_open : bool)
var nr_St_1_Open : bool; ns_St_1_Open_1 : bool; door_open_St_1_Open : bool;
    nr_St_1_Closed : bool; ns_St_1_Closed_1 : bool;
    door_open_St_1_Closed : bool; ck_2_1 : bool; v_20 : bool; v : bool;
    r_St_1_Open : bool; s_St_1_Open_1 : bool; r_St_1_Closed : bool;
    s_St_1_Closed_1 : bool; ck_1 : bool; s_1 : bool; ns_1 : bool; r : bool;
    nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_2_1 = s_1;
  door_open_St_1_Closed = false;
  nr_St_1_Closed = false;
  ns_St_1_Closed_1 = true;
  door_open_St_1_Open = true;
  nr_St_1_Open = false;
  ns_St_1_Open_1 = false;
  door_open =
    merge ck_2_1
      (true -> door_open_St_1_Closed)(false -> door_open_St_1_Open);
  ns_1 = merge ck_2_1 (true -> ns_St_1_Closed_1)(false -> ns_St_1_Open_1);
  nr = merge ck_2_1 (true -> nr_St_1_Closed)(false -> nr_St_1_Open);
  ck_1 = true fby ns_1;
  r_St_1_Closed = if v_20 then true else (pnr when true(ck_1));
  s_St_1_Closed_1 = if v_20 then false else true;
  v_20 = not((c when true(ck_1)));
  r_St_1_Open = if v then true else (pnr when false(ck_1));
  s_St_1_Open_1 = if v then true else false;
  v = not((c when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_1_Closed_1)(false -> s_St_1_Open_1);
  r = merge ck_1 (true -> r_St_1_Closed)(false -> r_St_1_Open)
tel

node closet(c : bool) returns (closet_open : bool)
var nr_St_2_Open : bool; ns_St_2_Open_1 : bool; closet_open_St_2_Open : bool;
    nr_St_2_Locked : bool; ns_St_2_Locked_1 : bool;
    closet_open_St_2_Locked : bool; ck_3_1 : bool; v : bool;
    r_St_2_Open : bool; s_St_2_Open_1 : bool; r_St_2_Locked : bool;
    s_St_2_Locked_1 : bool; ck_1 : bool; s_1 : bool; ns_1 : bool; r : bool;
    nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_3_1 = s_1;
  closet_open_St_2_Locked = false;
  nr_St_2_Locked = false;
  ns_St_2_Locked_1 = true;
  closet_open_St_2_Open = true;
  nr_St_2_Open = false;
  ns_St_2_Open_1 = false;
  closet_open =
    merge ck_3_1
      (true -> closet_open_St_2_Locked)(false -> closet_open_St_2_Open);
  ns_1 = merge ck_3_1 (true -> ns_St_2_Locked_1)(false -> ns_St_2_Open_1);
  nr = merge ck_3_1 (true -> nr_St_2_Locked)(false -> nr_St_2_Open);
  ck_1 = true fby ns_1;
  r_St_2_Locked = if v then true else (pnr when true(ck_1));
  s_St_2_Locked_1 = if v then false else true;
  v = not((c when true(ck_1)));
  r_St_2_Open = if (c when false(ck_1)) then true else (pnr when false(ck_1));
  s_St_2_Open_1 = if (c when false(ck_1)) then true else false;
  s_1 = merge ck_1 (true -> s_St_2_Locked_1)(false -> s_St_2_Open_1);
  r = merge ck_1 (true -> r_St_2_Locked)(false -> r_St_2_Open)
tel

node person(arrived : bool) returns (presence : bool)
var nr_St_3_Present : bool; ns_St_3_Present_1 : bool;
    presence_St_3_Present : bool; nr_St_3_Not_Present : bool;
    ns_St_3_Not_Present_1 : bool; presence_St_3_Not_Present : bool;
    ck_4_1 : bool; r_St_3_Present : bool; s_St_3_Present_1 : bool;
    r_St_3_Not_Present : bool; s_St_3_Not_Present_1 : bool; ck_1 : bool;
    s_1 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_4_1 = s_1;
  presence_St_3_Not_Present = false;
  nr_St_3_Not_Present = false;
  ns_St_3_Not_Present_1 = true;
  presence_St_3_Present = true;
  nr_St_3_Present = false;
  ns_St_3_Present_1 = false;
  presence =
    merge ck_4_1
      (true -> presence_St_3_Not_Present)(false -> presence_St_3_Present);
  ns_1 =
    merge ck_4_1 (true -> ns_St_3_Not_Present_1)(false -> ns_St_3_Present_1);
  nr = merge ck_4_1 (true -> nr_St_3_Not_Present)(false -> nr_St_3_Present);
  ck_1 = true fby ns_1;
  r_St_3_Not_Present =
    if (arrived when true(ck_1)) then true else (pnr when true(ck_1));
  s_St_3_Not_Present_1 = if (arrived when true(ck_1)) then false else true;
  r_St_3_Present =
    if (arrived when false(ck_1)) then true else (pnr when false(ck_1));
  s_St_3_Present_1 = if (arrived when false(ck_1)) then true else false;
  s_1 = merge ck_1 (true -> s_St_3_Not_Present_1)(false -> s_St_3_Present_1);
  r = merge ck_1 (true -> r_St_3_Not_Present)(false -> r_St_3_Present)
tel

node computer(c : bool) returns (computer_on : bool)
var nr_St_4_On : bool; ns_St_4_On_1 : bool; computer_on_St_4_On : bool;
    nr_St_4_Off : bool; ns_St_4_Off_1 : bool; computer_on_St_4_Off : bool;
    ck_5_1 : bool; v : bool; r_St_4_On : bool; s_St_4_On_1 : bool;
    r_St_4_Off : bool; s_St_4_Off_1 : bool; ck_1 : bool; s_1 : bool;
    ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_5_1 = s_1;
  computer_on_St_4_Off = false;
  nr_St_4_Off = false;
  ns_St_4_Off_1 = true;
  computer_on_St_4_On = true;
  nr_St_4_On = false;
  ns_St_4_On_1 = false;
  computer_on =
    merge ck_5_1 (true -> computer_on_St_4_Off)(false -> computer_on_St_4_On);
  ns_1 = merge ck_5_1 (true -> ns_St_4_Off_1)(false -> ns_St_4_On_1);
  nr = merge ck_5_1 (true -> nr_St_4_Off)(false -> nr_St_4_On);
  ck_1 = true fby ns_1;
  r_St_4_Off = if (c when true(ck_1)) then true else (pnr when true(ck_1));
  s_St_4_Off_1 = if (c when true(ck_1)) then false else true;
  r_St_4_On = if v then true else (pnr when false(ck_1));
  s_St_4_On_1 = if v then true else false;
  v = not((c when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_4_Off_1)(false -> s_St_4_On_1);
  r = merge ck_1 (true -> r_St_4_Off)(false -> r_St_4_On)
tel

node window(c : bool) returns (window_open : bool)
var nr_St_5_Open : bool; ns_St_5_Open_1 : bool; window_open_St_5_Open : bool;
    nr_St_5_Closed : bool; ns_St_5_Closed_1 : bool;
    window_open_St_5_Closed : bool; ck_6_1 : bool; v : bool;
    r_St_5_Open : bool; s_St_5_Open_1 : bool; r_St_5_Closed : bool;
    s_St_5_Closed_1 : bool; ck_1 : bool; s_1 : bool; ns_1 : bool; r : bool;
    nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_6_1 = s_1;
  window_open_St_5_Closed = false;
  nr_St_5_Closed = false;
  ns_St_5_Closed_1 = true;
  window_open_St_5_Open = true;
  nr_St_5_Open = false;
  ns_St_5_Open_1 = false;
  window_open =
    merge ck_6_1
      (true -> window_open_St_5_Closed)(false -> window_open_St_5_Open);
  ns_1 = merge ck_6_1 (true -> ns_St_5_Closed_1)(false -> ns_St_5_Open_1);
  nr = merge ck_6_1 (true -> nr_St_5_Closed)(false -> nr_St_5_Open);
  ck_1 = true fby ns_1;
  r_St_5_Closed = if v then true else (pnr when true(ck_1));
  s_St_5_Closed_1 = if v then false else true;
  v = not((c when true(ck_1)));
  r_St_5_Open = if (c when false(ck_1)) then true else (pnr when false(ck_1));
  s_St_5_Open_1 = if (c when false(ck_1)) then true else false;
  s_1 = merge ck_1 (true -> s_St_5_Closed_1)(false -> s_St_5_Open_1);
  r = merge ck_1 (true -> r_St_5_Closed)(false -> r_St_5_Open)
tel

node air_conditioner(c1 : bool; c2 : bool; failed_recovered : bool)
returns (air_status : int)
var v_355 : bool; v_354 : bool; v_353 : bool; v_352 : bool; v_351 : bool;
    v_350 : bool; v_349 : bool; v_348 : bool; v_347 : bool; v_346 : bool;
    v_345 : bool; v_344 : bool; v_343 : bool; v_342 : bool; v_341 : bool;
    v_340 : bool; v_339 : bool; v_338 : bool; v_337 : bool; v_336 : bool;
    v_335 : bool; v_334 : bool; v_333 : bool; v_332 : bool; v_331 : int;
    v_330 : int; v_329 : int; v_328 : int; v_327 : int; v_326 : int;
    ns_St_6_Max_fail_2_0 : bool; ns_St_6_Max_fail_3_0_0 : bool;
    ns_St_6_Max_fail_3_0_1 : bool; ns_St_6_Max_fail_2_1 : bool;
    ns_St_6_Max_fail_3_1_0 : bool; ns_St_6_Max_fail_3_1_1 : bool;
    ns_St_6_Max_2_0 : bool; ns_St_6_Max_3_0_0 : bool;
    ns_St_6_Max_3_0_1 : bool; ns_St_6_Max_2_1 : bool;
    ns_St_6_Max_3_1_0 : bool; ns_St_6_Max_3_1_1 : bool;
    ns_St_6_Min_fail_2_0 : bool; ns_St_6_Min_fail_3_0_0 : bool;
    ns_St_6_Min_fail_3_0_1 : bool; ns_St_6_Min_fail_2_1 : bool;
    ns_St_6_Min_fail_3_1_0 : bool; ns_St_6_Min_fail_3_1_1 : bool;
    ns_St_6_Min_2_0 : bool; ns_St_6_Min_3_0_0 : bool;
    ns_St_6_Min_3_0_1 : bool; ns_St_6_Min_2_1 : bool;
    ns_St_6_Min_3_1_0 : bool; ns_St_6_Min_3_1_1 : bool;
    ns_St_6_Off_fail_2_0 : bool; ns_St_6_Off_fail_3_0_0 : bool;
    ns_St_6_Off_fail_3_0_1 : bool; ns_St_6_Off_fail_2_1 : bool;
    ns_St_6_Off_fail_3_1_0 : bool; ns_St_6_Off_fail_3_1_1 : bool;
    ns_St_6_Off_2_0 : bool; ns_St_6_Off_3_0_0 : bool;
    ns_St_6_Off_3_0_1 : bool; ns_St_6_Off_2_1 : bool;
    ns_St_6_Off_3_1_0 : bool; ns_St_6_Off_3_1_1 : bool; ck_7_2_0 : bool;
    ck_7_3_0_0 : bool; ck_7_3_0_1 : bool; ck_7_2_1 : bool; ck_7_3_1_0 : bool;
    ck_7_3_1_1 : bool; nr_St_6_Max_fail : bool; ns_St_6_Max_fail_3 : bool;
    ns_St_6_Max_fail_2 : bool; ns_St_6_Max_fail_1 : bool;
    air_status_St_6_Max_fail : int; nr_St_6_Max : bool; ns_St_6_Max_3 : bool;
    ns_St_6_Max_2 : bool; ns_St_6_Max_1 : bool; air_status_St_6_Max : int;
    nr_St_6_Min_fail : bool; ns_St_6_Min_fail_3 : bool;
    ns_St_6_Min_fail_2 : bool; ns_St_6_Min_fail_1 : bool;
    air_status_St_6_Min_fail : int; nr_St_6_Min : bool; ns_St_6_Min_3 : bool;
    ns_St_6_Min_2 : bool; ns_St_6_Min_1 : bool; air_status_St_6_Min : int;
    nr_St_6_Off_fail : bool; ns_St_6_Off_fail_3 : bool;
    ns_St_6_Off_fail_2 : bool; ns_St_6_Off_fail_1 : bool;
    air_status_St_6_Off_fail : int; nr_St_6_Off : bool; ns_St_6_Off_3 : bool;
    ns_St_6_Off_2 : bool; ns_St_6_Off_1 : bool; air_status_St_6_Off : int;
    ck_7_3 : bool; ck_7_2 : bool; ck_7_1 : bool; v_52_2_0 : bool;
    v_52_3_0_0 : bool; v_52_3_0_1 : bool; v_52_2_1 : bool; v_52_3_1_0 : bool;
    v_52_3_1_1 : bool; v_50_2_0 : bool; v_50_3_0_0 : bool; v_50_3_0_1 : bool;
    v_50_2_1 : bool; v_50_3_1_0 : bool; v_50_3_1_1 : bool; v_53 : bool;
    v_52_3 : bool; v_52_2 : bool; v_52_1 : bool; v_51 : bool; v_50_3 : bool;
    v_50_2 : bool; v_50_1 : bool; v_49 : bool; v_47_2_0 : bool;
    v_47_3_0_0 : bool; v_47_3_0_1 : bool; v_47_2_1 : bool; v_47_3_1_0 : bool;
    v_47_3_1_1 : bool; v_45_2_0 : bool; v_45_3_0_0 : bool; v_45_3_0_1 : bool;
    v_45_2_1 : bool; v_45_3_1_0 : bool; v_45_3_1_1 : bool; v_48 : bool;
    v_47_3 : bool; v_47_2 : bool; v_47_1 : bool; v_46 : bool; v_45_3 : bool;
    v_45_2 : bool; v_45_1 : bool; v_44 : bool; v_42_2_0 : bool;
    v_42_3_0_0 : bool; v_42_3_0_1 : bool; v_42_2_1 : bool; v_42_3_1_0 : bool;
    v_42_3_1_1 : bool; v_40_2_0 : bool; v_40_3_0_0 : bool; v_40_3_0_1 : bool;
    v_40_2_1 : bool; v_40_3_1_0 : bool; v_40_3_1_1 : bool; v_43 : bool;
    v_42_3 : bool; v_42_2 : bool; v_42_1 : bool; v_41 : bool; v_40_3 : bool;
    v_40_2 : bool; v_40_1 : bool; v_39 : bool; v_38 : bool; v_36_2_0 : bool;
    v_36_3_0_0 : bool; v_36_3_0_1 : bool; v_36_2_1 : bool; v_36_3_1_0 : bool;
    v_36_3_1_1 : bool; v_34_2_0 : bool; v_34_3_0_0 : bool; v_34_3_0_1 : bool;
    v_34_2_1 : bool; v_34_3_1_0 : bool; v_34_3_1_1 : bool; v_37 : bool;
    v_36_3 : bool; v_36_2 : bool; v_36_1 : bool; v_35 : bool; v_34_3 : bool;
    v_34_2 : bool; v_34_1 : bool; v_33 : bool; v_32 : bool; v_30_2_0 : bool;
    v_30_3_0_0 : bool; v_30_3_0_1 : bool; v_30_2_1 : bool; v_30_3_1_0 : bool;
    v_30_3_1_1 : bool; v_28_2_0 : bool; v_28_3_0_0 : bool; v_28_3_0_1 : bool;
    v_28_2_1 : bool; v_28_3_1_0 : bool; v_28_3_1_1 : bool; v_31 : bool;
    v_30_3 : bool; v_30_2 : bool; v_30_1 : bool; v_29 : bool; v_28_3 : bool;
    v_28_2 : bool; v_28_1 : bool; v_27 : bool; v_26 : bool; v_24_2_0 : bool;
    v_24_3_0_0 : bool; v_24_3_0_1 : bool; v_24_2_1 : bool; v_24_3_1_0 : bool;
    v_24_3_1_1 : bool; v_22_2_0 : bool; v_22_3_0_0 : bool; v_22_3_0_1 : bool;
    v_22_2_1 : bool; v_22_3_1_0 : bool; v_22_3_1_1 : bool; v_25 : bool;
    v_24_3 : bool; v_24_2 : bool; v_24_1 : bool; v_23 : bool; v_22_3 : bool;
    v_22_2 : bool; v_22_1 : bool; v_21 : bool; v : bool; v_382 : bool;
    v_381 : bool; v_380 : bool; v_379 : bool; v_378 : bool; v_377 : bool;
    v_376 : bool; v_375 : bool; v_374 : bool; v_373 : bool; v_372 : bool;
    v_371 : bool; v_370 : bool; v_369 : bool; v_368 : bool; v_367 : bool;
    v_366 : bool; v_365 : bool; v_364 : bool; v_363 : bool; v_362 : bool;
    v_361 : bool; v_360 : bool; v_359 : bool; v_358 : bool; v_357 : bool;
    v_356 : bool; s_St_6_Max_fail_2_0 : bool; s_St_6_Max_fail_3_0_0 : bool;
    s_St_6_Max_fail_3_0_1 : bool; s_St_6_Max_fail_2_1 : bool;
    s_St_6_Max_fail_3_1_0 : bool; s_St_6_Max_fail_3_1_1 : bool;
    s_St_6_Max_2_0 : bool; s_St_6_Max_3_0_0 : bool; s_St_6_Max_3_0_1 : bool;
    s_St_6_Max_2_1 : bool; s_St_6_Max_3_1_0 : bool; s_St_6_Max_3_1_1 : bool;
    s_St_6_Min_fail_2_0 : bool; s_St_6_Min_fail_3_0_0 : bool;
    s_St_6_Min_fail_3_0_1 : bool; s_St_6_Min_fail_2_1 : bool;
    s_St_6_Min_fail_3_1_0 : bool; s_St_6_Min_fail_3_1_1 : bool;
    s_St_6_Min_2_0 : bool; s_St_6_Min_3_0_0 : bool; s_St_6_Min_3_0_1 : bool;
    s_St_6_Min_2_1 : bool; s_St_6_Min_3_1_0 : bool; s_St_6_Min_3_1_1 : bool;
    s_St_6_Off_fail_2_0 : bool; s_St_6_Off_fail_3_0_0 : bool;
    s_St_6_Off_fail_3_0_1 : bool; s_St_6_Off_fail_2_1 : bool;
    s_St_6_Off_fail_3_1_0 : bool; s_St_6_Off_fail_3_1_1 : bool;
    s_St_6_Off_2_0 : bool; s_St_6_Off_3_0_0 : bool; s_St_6_Off_3_0_1 : bool;
    s_St_6_Off_2_1 : bool; s_St_6_Off_3_1_0 : bool; s_St_6_Off_3_1_1 : bool;
    ck_2_0 : bool; ck_3_0_0 : bool; ck_3_0_1 : bool; ck_2_1 : bool;
    ck_3_1_0 : bool; ck_3_1_1 : bool; r_St_6_Max_fail : bool;
    s_St_6_Max_fail_3 : bool; s_St_6_Max_fail_2 : bool;
    s_St_6_Max_fail_1 : bool; r_St_6_Max : bool; s_St_6_Max_3 : bool;
    s_St_6_Max_2 : bool; s_St_6_Max_1 : bool; r_St_6_Min_fail : bool;
    s_St_6_Min_fail_3 : bool; s_St_6_Min_fail_2 : bool;
    s_St_6_Min_fail_1 : bool; r_St_6_Min : bool; s_St_6_Min_3 : bool;
    s_St_6_Min_2 : bool; s_St_6_Min_1 : bool; r_St_6_Off_fail : bool;
    s_St_6_Off_fail_3 : bool; s_St_6_Off_fail_2 : bool;
    s_St_6_Off_fail_1 : bool; r_St_6_Off : bool; s_St_6_Off_3 : bool;
    s_St_6_Off_2 : bool; s_St_6_Off_1 : bool; ck_3 : bool; ck_2 : bool;
    ck_1 : bool; s_2_0 : bool; s_3_0_0 : bool; s_3_0_1 : bool; s_2_1 : bool;
    s_3_1_0 : bool; s_3_1_1 : bool; ns_2_0 : bool; ns_3_0_0 : bool;
    ns_3_0_1 : bool; ns_2_1 : bool; ns_3_1_0 : bool; ns_3_1_1 : bool;
    s_3 : bool; s_2 : bool; s_1 : bool; ns_3 : bool; ns_2 : bool;
    ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_7_1 = s_1;
  ck_7_2 = s_2;
  ck_7_3 = s_3;
  air_status_St_6_Off = 0;
  nr_St_6_Off = false;
  ns_St_6_Off_1 = false;
  ns_St_6_Off_2 = true;
  ns_St_6_Off_3 = false;
  air_status_St_6_Off_fail = 3;
  nr_St_6_Off_fail = false;
  ns_St_6_Off_fail_1 = false;
  ns_St_6_Off_fail_2 = false;
  ns_St_6_Off_fail_3 = false;
  air_status_St_6_Min = 1;
  nr_St_6_Min = false;
  ns_St_6_Min_1 = true;
  ns_St_6_Min_2 = false;
  ns_St_6_Min_3 = false;
  air_status_St_6_Min_fail = 4;
  nr_St_6_Min_fail = false;
  ns_St_6_Min_fail_1 = false;
  ns_St_6_Min_fail_2 = true;
  ns_St_6_Min_fail_3 = true;
  air_status_St_6_Max = 2;
  nr_St_6_Max = false;
  ns_St_6_Max_1 = true;
  ns_St_6_Max_2 = true;
  ns_St_6_Max_3 = true;
  air_status_St_6_Max_fail = 5;
  nr_St_6_Max_fail = false;
  ns_St_6_Max_fail_1 = true;
  ns_St_6_Max_fail_2 = true;
  ns_St_6_Max_fail_3 = false;
  v_326 =
    merge ck_7_3_1_1
      (true -> air_status_St_6_Max)(false -> air_status_St_6_Max_fail);
  v_327 =
    merge ck_7_3_1_0
      (true -> 
        (((0 when true(ck_7_1)) when false(ck_7_2_1)) when true(ck_7_3_1_0)))
      (false -> air_status_St_6_Min);
  v_328 = merge ck_7_2_1 (true -> v_326)(false -> v_327);
  v_329 =
    merge ck_7_3_0_1
      (true -> air_status_St_6_Min_fail)(false -> air_status_St_6_Off);
  v_330 =
    merge ck_7_3_0_0
      (true -> 
        (((0 when false(ck_7_1)) when false(ck_7_2_0)) when true(ck_7_3_0_0)))
      (false -> air_status_St_6_Off_fail);
  v_331 = merge ck_7_2_0 (true -> v_329)(false -> v_330);
  air_status = merge ck_7_1 (true -> v_328)(false -> v_331);
  v_332 =
    merge ck_7_3_1_1 (true -> ns_St_6_Max_1)(false -> ns_St_6_Max_fail_1);
  v_333 =
    merge ck_7_3_1_1 (true -> ns_St_6_Max_2)(false -> ns_St_6_Max_fail_2);
  v_334 =
    merge ck_7_3_1_1 (true -> ns_St_6_Max_3)(false -> ns_St_6_Max_fail_3);
  v_335 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> ns_St_6_Min_1);
  v_336 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> ns_St_6_Min_2);
  v_337 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> ns_St_6_Min_3);
  v_338 =
    merge ck_7_3_0_1 (true -> ns_St_6_Min_fail_1)(false -> ns_St_6_Off_1);
  v_339 =
    merge ck_7_3_0_1 (true -> ns_St_6_Min_fail_2)(false -> ns_St_6_Off_2);
  v_340 =
    merge ck_7_3_0_1 (true -> ns_St_6_Min_fail_3)(false -> ns_St_6_Off_3);
  v_341 =
    merge ck_7_3_0_0
      (true -> 
        (((true when false(ck_7_1)) when false(ck_7_2_0))
          when true(ck_7_3_0_0)))
      (false -> ns_St_6_Off_fail_1);
  v_342 =
    merge ck_7_3_0_0
      (true -> 
        (((true when false(ck_7_1)) when false(ck_7_2_0))
          when true(ck_7_3_0_0)))
      (false -> ns_St_6_Off_fail_2);
  v_343 =
    merge ck_7_3_0_0
      (true -> 
        (((true when false(ck_7_1)) when false(ck_7_2_0))
          when true(ck_7_3_0_0)))
      (false -> ns_St_6_Off_fail_3);
  v_344 = merge ck_7_2_1 (true -> v_332)(false -> v_335);
  v_345 = merge ck_7_2_1 (true -> v_333)(false -> v_336);
  v_346 = merge ck_7_2_1 (true -> v_334)(false -> v_337);
  v_347 = merge ck_7_2_0 (true -> v_338)(false -> v_341);
  v_348 = merge ck_7_2_0 (true -> v_339)(false -> v_342);
  v_349 = merge ck_7_2_0 (true -> v_340)(false -> v_343);
  ns_1 = merge ck_7_1 (true -> v_344)(false -> v_347);
  ns_2 = merge ck_7_1 (true -> v_345)(false -> v_348);
  ns_3 = merge ck_7_1 (true -> v_346)(false -> v_349);
  v_350 = merge ck_7_3_1_1 (true -> nr_St_6_Max)(false -> nr_St_6_Max_fail);
  v_351 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> nr_St_6_Min);
  v_352 = merge ck_7_2_1 (true -> v_350)(false -> v_351);
  v_353 = merge ck_7_3_0_1 (true -> nr_St_6_Min_fail)(false -> nr_St_6_Off);
  v_354 =
    merge ck_7_3_0_0
      (true -> 
        (((true when false(ck_7_1)) when false(ck_7_2_0))
          when true(ck_7_3_0_0)))
      (false -> nr_St_6_Off_fail);
  v_355 = merge ck_7_2_0 (true -> v_353)(false -> v_354);
  nr = merge ck_7_1 (true -> v_352)(false -> v_355);
  ck_7_3_1_1 = ((ck_7_3 when true(ck_7_1)) when true(ck_7_2_1));
  ck_7_3_1_0 = ((ck_7_3 when true(ck_7_1)) when false(ck_7_2_1));
  ck_7_2_1 = (ck_7_2 when true(ck_7_1));
  ck_7_3_0_1 = ((ck_7_3 when false(ck_7_1)) when true(ck_7_2_0));
  ck_7_3_0_0 = ((ck_7_3 when false(ck_7_1)) when false(ck_7_2_0));
  ck_7_2_0 = (ck_7_2 when false(ck_7_1));
  ns_St_6_Off_3_1_1 =
    ((ns_St_6_Off_3 when true(ns_St_6_Off_1)) when true(ns_St_6_Off_2_1));
  ns_St_6_Off_3_1_0 =
    ((ns_St_6_Off_3 when true(ns_St_6_Off_1)) when false(ns_St_6_Off_2_1));
  ns_St_6_Off_2_1 = (ns_St_6_Off_2 when true(ns_St_6_Off_1));
  ns_St_6_Off_3_0_1 =
    ((ns_St_6_Off_3 when false(ns_St_6_Off_1)) when true(ns_St_6_Off_2_0));
  ns_St_6_Off_3_0_0 =
    ((ns_St_6_Off_3 when false(ns_St_6_Off_1)) when false(ns_St_6_Off_2_0));
  ns_St_6_Off_2_0 = (ns_St_6_Off_2 when false(ns_St_6_Off_1));
  ns_St_6_Off_fail_3_1_1 =
    ((ns_St_6_Off_fail_3 when true(ns_St_6_Off_fail_1))
      when true(ns_St_6_Off_fail_2_1));
  ns_St_6_Off_fail_3_1_0 =
    ((ns_St_6_Off_fail_3 when true(ns_St_6_Off_fail_1))
      when false(ns_St_6_Off_fail_2_1));
  ns_St_6_Off_fail_2_1 = (ns_St_6_Off_fail_2 when true(ns_St_6_Off_fail_1));
  ns_St_6_Off_fail_3_0_1 =
    ((ns_St_6_Off_fail_3 when false(ns_St_6_Off_fail_1))
      when true(ns_St_6_Off_fail_2_0));
  ns_St_6_Off_fail_3_0_0 =
    ((ns_St_6_Off_fail_3 when false(ns_St_6_Off_fail_1))
      when false(ns_St_6_Off_fail_2_0));
  ns_St_6_Off_fail_2_0 = (ns_St_6_Off_fail_2 when false(ns_St_6_Off_fail_1));
  ns_St_6_Min_3_1_1 =
    ((ns_St_6_Min_3 when true(ns_St_6_Min_1)) when true(ns_St_6_Min_2_1));
  ns_St_6_Min_3_1_0 =
    ((ns_St_6_Min_3 when true(ns_St_6_Min_1)) when false(ns_St_6_Min_2_1));
  ns_St_6_Min_2_1 = (ns_St_6_Min_2 when true(ns_St_6_Min_1));
  ns_St_6_Min_3_0_1 =
    ((ns_St_6_Min_3 when false(ns_St_6_Min_1)) when true(ns_St_6_Min_2_0));
  ns_St_6_Min_3_0_0 =
    ((ns_St_6_Min_3 when false(ns_St_6_Min_1)) when false(ns_St_6_Min_2_0));
  ns_St_6_Min_2_0 = (ns_St_6_Min_2 when false(ns_St_6_Min_1));
  ns_St_6_Min_fail_3_1_1 =
    ((ns_St_6_Min_fail_3 when true(ns_St_6_Min_fail_1))
      when true(ns_St_6_Min_fail_2_1));
  ns_St_6_Min_fail_3_1_0 =
    ((ns_St_6_Min_fail_3 when true(ns_St_6_Min_fail_1))
      when false(ns_St_6_Min_fail_2_1));
  ns_St_6_Min_fail_2_1 = (ns_St_6_Min_fail_2 when true(ns_St_6_Min_fail_1));
  ns_St_6_Min_fail_3_0_1 =
    ((ns_St_6_Min_fail_3 when false(ns_St_6_Min_fail_1))
      when true(ns_St_6_Min_fail_2_0));
  ns_St_6_Min_fail_3_0_0 =
    ((ns_St_6_Min_fail_3 when false(ns_St_6_Min_fail_1))
      when false(ns_St_6_Min_fail_2_0));
  ns_St_6_Min_fail_2_0 = (ns_St_6_Min_fail_2 when false(ns_St_6_Min_fail_1));
  ns_St_6_Max_3_1_1 =
    ((ns_St_6_Max_3 when true(ns_St_6_Max_1)) when true(ns_St_6_Max_2_1));
  ns_St_6_Max_3_1_0 =
    ((ns_St_6_Max_3 when true(ns_St_6_Max_1)) when false(ns_St_6_Max_2_1));
  ns_St_6_Max_2_1 = (ns_St_6_Max_2 when true(ns_St_6_Max_1));
  ns_St_6_Max_3_0_1 =
    ((ns_St_6_Max_3 when false(ns_St_6_Max_1)) when true(ns_St_6_Max_2_0));
  ns_St_6_Max_3_0_0 =
    ((ns_St_6_Max_3 when false(ns_St_6_Max_1)) when false(ns_St_6_Max_2_0));
  ns_St_6_Max_2_0 = (ns_St_6_Max_2 when false(ns_St_6_Max_1));
  ns_St_6_Max_fail_3_1_1 =
    ((ns_St_6_Max_fail_3 when true(ns_St_6_Max_fail_1))
      when true(ns_St_6_Max_fail_2_1));
  ns_St_6_Max_fail_3_1_0 =
    ((ns_St_6_Max_fail_3 when true(ns_St_6_Max_fail_1))
      when false(ns_St_6_Max_fail_2_1));
  ns_St_6_Max_fail_2_1 = (ns_St_6_Max_fail_2 when true(ns_St_6_Max_fail_1));
  ns_St_6_Max_fail_3_0_1 =
    ((ns_St_6_Max_fail_3 when false(ns_St_6_Max_fail_1))
      when true(ns_St_6_Max_fail_2_0));
  ns_St_6_Max_fail_3_0_0 =
    ((ns_St_6_Max_fail_3 when false(ns_St_6_Max_fail_1))
      when false(ns_St_6_Max_fail_2_0));
  ns_St_6_Max_fail_2_0 = (ns_St_6_Max_fail_2 when false(ns_St_6_Max_fail_1));
  v_356 = false fby ns_1;
  v_357 = true fby ns_2;
  v_358 = false fby ns_3;
  ck_1 = v_356;
  ck_2 = v_357;
  ck_3 = v_358;
  r_St_6_Off =
    if (((c1 when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else v_53;
  s_St_6_Off_1 =
    if (((c1 when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else v_52_1;
  s_St_6_Off_2 =
    if (((c1 when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then false
    else v_52_2;
  s_St_6_Off_3 =
    if (((c1 when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then false
    else v_52_3;
  v_53 = if v_49 then true else v_51;
  v_52_1 = if v_49 then true else v_50_1;
  v_52_2 = if v_49 then true else v_50_2;
  v_52_3 = if v_49 then true else v_50_3;
  v_51 =
    if (((failed_recovered when false(ck_1)) when true(ck_2_0))
         when false(ck_3_0_1))
    then true
    else (((pnr when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1));
  v_50_1 =
    if (((failed_recovered when false(ck_1)) when true(ck_2_0))
         when false(ck_3_0_1))
    then false
    else false;
  v_50_2 =
    if (((failed_recovered when false(ck_1)) when true(ck_2_0))
         when false(ck_3_0_1))
    then false
    else true;
  v_50_3 =
    if (((failed_recovered when false(ck_1)) when true(ck_2_0))
         when false(ck_3_0_1))
    then false
    else false;
  v_49 =
    not((((c2 when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1)));
  v_50_3_1_1 = ((v_50_3 when true(v_50_1)) when true(v_50_2_1));
  v_50_3_1_0 = ((v_50_3 when true(v_50_1)) when false(v_50_2_1));
  v_50_2_1 = (v_50_2 when true(v_50_1));
  v_50_3_0_1 = ((v_50_3 when false(v_50_1)) when true(v_50_2_0));
  v_50_3_0_0 = ((v_50_3 when false(v_50_1)) when false(v_50_2_0));
  v_50_2_0 = (v_50_2 when false(v_50_1));
  v_52_3_1_1 = ((v_52_3 when true(v_52_1)) when true(v_52_2_1));
  v_52_3_1_0 = ((v_52_3 when true(v_52_1)) when false(v_52_2_1));
  v_52_2_1 = (v_52_2 when true(v_52_1));
  v_52_3_0_1 = ((v_52_3 when false(v_52_1)) when true(v_52_2_0));
  v_52_3_0_0 = ((v_52_3 when false(v_52_1)) when false(v_52_2_0));
  v_52_2_0 = (v_52_2 when false(v_52_1));
  r_St_6_Off_fail =
    if (((c1 when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else v_48;
  s_St_6_Off_fail_1 =
    if (((c1 when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then false
    else v_47_1;
  s_St_6_Off_fail_2 =
    if (((c1 when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else v_47_2;
  s_St_6_Off_fail_3 =
    if (((c1 when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else v_47_3;
  v_48 = if v_44 then true else v_46;
  v_47_1 = if v_44 then true else v_45_1;
  v_47_2 = if v_44 then true else v_45_2;
  v_47_3 = if v_44 then false else v_45_3;
  v_46 =
    if (((failed_recovered when false(ck_1)) when false(ck_2_0))
         when false(ck_3_0_0))
    then true
    else (((pnr when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0));
  v_45_1 =
    if (((failed_recovered when false(ck_1)) when false(ck_2_0))
         when false(ck_3_0_0))
    then false
    else false;
  v_45_2 =
    if (((failed_recovered when false(ck_1)) when false(ck_2_0))
         when false(ck_3_0_0))
    then true
    else false;
  v_45_3 =
    if (((failed_recovered when false(ck_1)) when false(ck_2_0))
         when false(ck_3_0_0))
    then false
    else false;
  v_44 =
    not((((c2 when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)));
  v_45_3_1_1 = ((v_45_3 when true(v_45_1)) when true(v_45_2_1));
  v_45_3_1_0 = ((v_45_3 when true(v_45_1)) when false(v_45_2_1));
  v_45_2_1 = (v_45_2 when true(v_45_1));
  v_45_3_0_1 = ((v_45_3 when false(v_45_1)) when true(v_45_2_0));
  v_45_3_0_0 = ((v_45_3 when false(v_45_1)) when false(v_45_2_0));
  v_45_2_0 = (v_45_2 when false(v_45_1));
  v_47_3_1_1 = ((v_47_3 when true(v_47_1)) when true(v_47_2_1));
  v_47_3_1_0 = ((v_47_3 when true(v_47_1)) when false(v_47_2_1));
  v_47_2_1 = (v_47_2 when true(v_47_1));
  v_47_3_0_1 = ((v_47_3 when false(v_47_1)) when true(v_47_2_0));
  v_47_3_0_0 = ((v_47_3 when false(v_47_1)) when false(v_47_2_0));
  v_47_2_0 = (v_47_2 when false(v_47_1));
  r_St_6_Min = if v_38 then true else v_43;
  s_St_6_Min_1 = if v_38 then false else v_42_1;
  s_St_6_Min_2 = if v_38 then true else v_42_2;
  s_St_6_Min_3 = if v_38 then false else v_42_3;
  v_43 = if v_39 then true else v_41;
  v_42_1 = if v_39 then true else v_40_1;
  v_42_2 = if v_39 then true else v_40_2;
  v_42_3 = if v_39 then true else v_40_3;
  v_41 =
    if (((failed_recovered when true(ck_1)) when false(ck_2_1))
         when false(ck_3_1_0))
    then true
    else (((pnr when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0));
  v_40_1 =
    if (((failed_recovered when true(ck_1)) when false(ck_2_1))
         when false(ck_3_1_0))
    then false
    else true;
  v_40_2 =
    if (((failed_recovered when true(ck_1)) when false(ck_2_1))
         when false(ck_3_1_0))
    then true
    else false;
  v_40_3 =
    if (((failed_recovered when true(ck_1)) when false(ck_2_1))
         when false(ck_3_1_0))
    then true
    else false;
  v_39 =
    not((((c2 when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)));
  v_38 =
    not((((c1 when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)));
  v_40_3_1_1 = ((v_40_3 when true(v_40_1)) when true(v_40_2_1));
  v_40_3_1_0 = ((v_40_3 when true(v_40_1)) when false(v_40_2_1));
  v_40_2_1 = (v_40_2 when true(v_40_1));
  v_40_3_0_1 = ((v_40_3 when false(v_40_1)) when true(v_40_2_0));
  v_40_3_0_0 = ((v_40_3 when false(v_40_1)) when false(v_40_2_0));
  v_40_2_0 = (v_40_2 when false(v_40_1));
  v_42_3_1_1 = ((v_42_3 when true(v_42_1)) when true(v_42_2_1));
  v_42_3_1_0 = ((v_42_3 when true(v_42_1)) when false(v_42_2_1));
  v_42_2_1 = (v_42_2 when true(v_42_1));
  v_42_3_0_1 = ((v_42_3 when false(v_42_1)) when true(v_42_2_0));
  v_42_3_0_0 = ((v_42_3 when false(v_42_1)) when false(v_42_2_0));
  v_42_2_0 = (v_42_2 when false(v_42_1));
  r_St_6_Min_fail = if v_32 then true else v_37;
  s_St_6_Min_fail_1 = if v_32 then false else v_36_1;
  s_St_6_Min_fail_2 = if v_32 then false else v_36_2;
  s_St_6_Min_fail_3 = if v_32 then false else v_36_3;
  v_37 = if v_33 then true else v_35;
  v_36_1 = if v_33 then true else v_34_1;
  v_36_2 = if v_33 then true else v_34_2;
  v_36_3 = if v_33 then false else v_34_3;
  v_35 =
    if (((failed_recovered when false(ck_1)) when true(ck_2_0))
         when true(ck_3_0_1))
    then true
    else (((pnr when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1));
  v_34_1 =
    if (((failed_recovered when false(ck_1)) when true(ck_2_0))
         when true(ck_3_0_1))
    then true
    else false;
  v_34_2 =
    if (((failed_recovered when false(ck_1)) when true(ck_2_0))
         when true(ck_3_0_1))
    then false
    else true;
  v_34_3 =
    if (((failed_recovered when false(ck_1)) when true(ck_2_0))
         when true(ck_3_0_1))
    then false
    else true;
  v_33 = not((((c2 when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1)));
  v_32 = not((((c1 when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1)));
  v_34_3_1_1 = ((v_34_3 when true(v_34_1)) when true(v_34_2_1));
  v_34_3_1_0 = ((v_34_3 when true(v_34_1)) when false(v_34_2_1));
  v_34_2_1 = (v_34_2 when true(v_34_1));
  v_34_3_0_1 = ((v_34_3 when false(v_34_1)) when true(v_34_2_0));
  v_34_3_0_0 = ((v_34_3 when false(v_34_1)) when false(v_34_2_0));
  v_34_2_0 = (v_34_2 when false(v_34_1));
  v_36_3_1_1 = ((v_36_3 when true(v_36_1)) when true(v_36_2_1));
  v_36_3_1_0 = ((v_36_3 when true(v_36_1)) when false(v_36_2_1));
  v_36_2_1 = (v_36_2 when true(v_36_1));
  v_36_3_0_1 = ((v_36_3 when false(v_36_1)) when true(v_36_2_0));
  v_36_3_0_0 = ((v_36_3 when false(v_36_1)) when false(v_36_2_0));
  v_36_2_0 = (v_36_2 when false(v_36_1));
  r_St_6_Max = if v_26 then true else v_31;
  s_St_6_Max_1 = if v_26 then true else v_30_1;
  s_St_6_Max_2 = if v_26 then false else v_30_2;
  s_St_6_Max_3 = if v_26 then false else v_30_3;
  v_31 = if v_27 then true else v_29;
  v_30_1 = if v_27 then false else v_28_1;
  v_30_2 = if v_27 then true else v_28_2;
  v_30_3 = if v_27 then false else v_28_3;
  v_29 =
    if (((failed_recovered when true(ck_1)) when true(ck_2_1))
         when true(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1));
  v_28_1 =
    if (((failed_recovered when true(ck_1)) when true(ck_2_1))
         when true(ck_3_1_1))
    then true
    else true;
  v_28_2 =
    if (((failed_recovered when true(ck_1)) when true(ck_2_1))
         when true(ck_3_1_1))
    then true
    else true;
  v_28_3 =
    if (((failed_recovered when true(ck_1)) when true(ck_2_1))
         when true(ck_3_1_1))
    then false
    else true;
  v_27 = not((((c2 when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1)));
  v_26 = not((((c1 when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1)));
  v_28_3_1_1 = ((v_28_3 when true(v_28_1)) when true(v_28_2_1));
  v_28_3_1_0 = ((v_28_3 when true(v_28_1)) when false(v_28_2_1));
  v_28_2_1 = (v_28_2 when true(v_28_1));
  v_28_3_0_1 = ((v_28_3 when false(v_28_1)) when true(v_28_2_0));
  v_28_3_0_0 = ((v_28_3 when false(v_28_1)) when false(v_28_2_0));
  v_28_2_0 = (v_28_2 when false(v_28_1));
  v_30_3_1_1 = ((v_30_3 when true(v_30_1)) when true(v_30_2_1));
  v_30_3_1_0 = ((v_30_3 when true(v_30_1)) when false(v_30_2_1));
  v_30_2_1 = (v_30_2 when true(v_30_1));
  v_30_3_0_1 = ((v_30_3 when false(v_30_1)) when true(v_30_2_0));
  v_30_3_0_0 = ((v_30_3 when false(v_30_1)) when false(v_30_2_0));
  v_30_2_0 = (v_30_2 when false(v_30_1));
  r_St_6_Max_fail = if v then true else v_25;
  s_St_6_Max_fail_1 = if v then false else v_24_1;
  s_St_6_Max_fail_2 = if v then true else v_24_2;
  s_St_6_Max_fail_3 = if v then true else v_24_3;
  v_25 = if v_21 then true else v_23;
  v_24_1 = if v_21 then false else v_22_1;
  v_24_2 = if v_21 then false else v_22_2;
  v_24_3 = if v_21 then false else v_22_3;
  v_23 =
    if (((failed_recovered when true(ck_1)) when true(ck_2_1))
         when false(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1));
  v_22_1 =
    if (((failed_recovered when true(ck_1)) when true(ck_2_1))
         when false(ck_3_1_1))
    then true
    else true;
  v_22_2 =
    if (((failed_recovered when true(ck_1)) when true(ck_2_1))
         when false(ck_3_1_1))
    then true
    else true;
  v_22_3 =
    if (((failed_recovered when true(ck_1)) when true(ck_2_1))
         when false(ck_3_1_1))
    then true
    else false;
  v_21 = not((((c2 when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1)));
  v = not((((c1 when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1)));
  v_22_3_1_1 = ((v_22_3 when true(v_22_1)) when true(v_22_2_1));
  v_22_3_1_0 = ((v_22_3 when true(v_22_1)) when false(v_22_2_1));
  v_22_2_1 = (v_22_2 when true(v_22_1));
  v_22_3_0_1 = ((v_22_3 when false(v_22_1)) when true(v_22_2_0));
  v_22_3_0_0 = ((v_22_3 when false(v_22_1)) when false(v_22_2_0));
  v_22_2_0 = (v_22_2 when false(v_22_1));
  v_24_3_1_1 = ((v_24_3 when true(v_24_1)) when true(v_24_2_1));
  v_24_3_1_0 = ((v_24_3 when true(v_24_1)) when false(v_24_2_1));
  v_24_2_1 = (v_24_2 when true(v_24_1));
  v_24_3_0_1 = ((v_24_3 when false(v_24_1)) when true(v_24_2_0));
  v_24_3_0_0 = ((v_24_3 when false(v_24_1)) when false(v_24_2_0));
  v_24_2_0 = (v_24_2 when false(v_24_1));
  v_359 = merge ck_3_1_1 (true -> s_St_6_Max_1)(false -> s_St_6_Max_fail_1);
  v_360 = merge ck_3_1_1 (true -> s_St_6_Max_2)(false -> s_St_6_Max_fail_2);
  v_361 = merge ck_3_1_1 (true -> s_St_6_Max_3)(false -> s_St_6_Max_fail_3);
  v_362 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_6_Min_1);
  v_363 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_6_Min_2);
  v_364 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_6_Min_3);
  v_365 = merge ck_3_0_1 (true -> s_St_6_Min_fail_1)(false -> s_St_6_Off_1);
  v_366 = merge ck_3_0_1 (true -> s_St_6_Min_fail_2)(false -> s_St_6_Off_2);
  v_367 = merge ck_3_0_1 (true -> s_St_6_Min_fail_3)(false -> s_St_6_Off_3);
  v_368 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_6_Off_fail_1);
  v_369 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_6_Off_fail_2);
  v_370 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_6_Off_fail_3);
  v_371 = merge ck_2_1 (true -> v_359)(false -> v_362);
  v_372 = merge ck_2_1 (true -> v_360)(false -> v_363);
  v_373 = merge ck_2_1 (true -> v_361)(false -> v_364);
  v_374 = merge ck_2_0 (true -> v_365)(false -> v_368);
  v_375 = merge ck_2_0 (true -> v_366)(false -> v_369);
  v_376 = merge ck_2_0 (true -> v_367)(false -> v_370);
  s_1 = merge ck_1 (true -> v_371)(false -> v_374);
  s_2 = merge ck_1 (true -> v_372)(false -> v_375);
  s_3 = merge ck_1 (true -> v_373)(false -> v_376);
  v_377 = merge ck_3_1_1 (true -> r_St_6_Max)(false -> r_St_6_Max_fail);
  v_378 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> r_St_6_Min);
  v_379 = merge ck_2_1 (true -> v_377)(false -> v_378);
  v_380 = merge ck_3_0_1 (true -> r_St_6_Min_fail)(false -> r_St_6_Off);
  v_381 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> r_St_6_Off_fail);
  v_382 = merge ck_2_0 (true -> v_380)(false -> v_381);
  r = merge ck_1 (true -> v_379)(false -> v_382);
  ck_3_1_1 = ((ck_3 when true(ck_1)) when true(ck_2_1));
  ck_3_1_0 = ((ck_3 when true(ck_1)) when false(ck_2_1));
  ck_2_1 = (ck_2 when true(ck_1));
  ck_3_0_1 = ((ck_3 when false(ck_1)) when true(ck_2_0));
  ck_3_0_0 = ((ck_3 when false(ck_1)) when false(ck_2_0));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_6_Off_3_1_1 =
    ((s_St_6_Off_3 when true(s_St_6_Off_1)) when true(s_St_6_Off_2_1));
  s_St_6_Off_3_1_0 =
    ((s_St_6_Off_3 when true(s_St_6_Off_1)) when false(s_St_6_Off_2_1));
  s_St_6_Off_2_1 = (s_St_6_Off_2 when true(s_St_6_Off_1));
  s_St_6_Off_3_0_1 =
    ((s_St_6_Off_3 when false(s_St_6_Off_1)) when true(s_St_6_Off_2_0));
  s_St_6_Off_3_0_0 =
    ((s_St_6_Off_3 when false(s_St_6_Off_1)) when false(s_St_6_Off_2_0));
  s_St_6_Off_2_0 = (s_St_6_Off_2 when false(s_St_6_Off_1));
  s_St_6_Off_fail_3_1_1 =
    ((s_St_6_Off_fail_3 when true(s_St_6_Off_fail_1))
      when true(s_St_6_Off_fail_2_1));
  s_St_6_Off_fail_3_1_0 =
    ((s_St_6_Off_fail_3 when true(s_St_6_Off_fail_1))
      when false(s_St_6_Off_fail_2_1));
  s_St_6_Off_fail_2_1 = (s_St_6_Off_fail_2 when true(s_St_6_Off_fail_1));
  s_St_6_Off_fail_3_0_1 =
    ((s_St_6_Off_fail_3 when false(s_St_6_Off_fail_1))
      when true(s_St_6_Off_fail_2_0));
  s_St_6_Off_fail_3_0_0 =
    ((s_St_6_Off_fail_3 when false(s_St_6_Off_fail_1))
      when false(s_St_6_Off_fail_2_0));
  s_St_6_Off_fail_2_0 = (s_St_6_Off_fail_2 when false(s_St_6_Off_fail_1));
  s_St_6_Min_3_1_1 =
    ((s_St_6_Min_3 when true(s_St_6_Min_1)) when true(s_St_6_Min_2_1));
  s_St_6_Min_3_1_0 =
    ((s_St_6_Min_3 when true(s_St_6_Min_1)) when false(s_St_6_Min_2_1));
  s_St_6_Min_2_1 = (s_St_6_Min_2 when true(s_St_6_Min_1));
  s_St_6_Min_3_0_1 =
    ((s_St_6_Min_3 when false(s_St_6_Min_1)) when true(s_St_6_Min_2_0));
  s_St_6_Min_3_0_0 =
    ((s_St_6_Min_3 when false(s_St_6_Min_1)) when false(s_St_6_Min_2_0));
  s_St_6_Min_2_0 = (s_St_6_Min_2 when false(s_St_6_Min_1));
  s_St_6_Min_fail_3_1_1 =
    ((s_St_6_Min_fail_3 when true(s_St_6_Min_fail_1))
      when true(s_St_6_Min_fail_2_1));
  s_St_6_Min_fail_3_1_0 =
    ((s_St_6_Min_fail_3 when true(s_St_6_Min_fail_1))
      when false(s_St_6_Min_fail_2_1));
  s_St_6_Min_fail_2_1 = (s_St_6_Min_fail_2 when true(s_St_6_Min_fail_1));
  s_St_6_Min_fail_3_0_1 =
    ((s_St_6_Min_fail_3 when false(s_St_6_Min_fail_1))
      when true(s_St_6_Min_fail_2_0));
  s_St_6_Min_fail_3_0_0 =
    ((s_St_6_Min_fail_3 when false(s_St_6_Min_fail_1))
      when false(s_St_6_Min_fail_2_0));
  s_St_6_Min_fail_2_0 = (s_St_6_Min_fail_2 when false(s_St_6_Min_fail_1));
  s_St_6_Max_3_1_1 =
    ((s_St_6_Max_3 when true(s_St_6_Max_1)) when true(s_St_6_Max_2_1));
  s_St_6_Max_3_1_0 =
    ((s_St_6_Max_3 when true(s_St_6_Max_1)) when false(s_St_6_Max_2_1));
  s_St_6_Max_2_1 = (s_St_6_Max_2 when true(s_St_6_Max_1));
  s_St_6_Max_3_0_1 =
    ((s_St_6_Max_3 when false(s_St_6_Max_1)) when true(s_St_6_Max_2_0));
  s_St_6_Max_3_0_0 =
    ((s_St_6_Max_3 when false(s_St_6_Max_1)) when false(s_St_6_Max_2_0));
  s_St_6_Max_2_0 = (s_St_6_Max_2 when false(s_St_6_Max_1));
  s_St_6_Max_fail_3_1_1 =
    ((s_St_6_Max_fail_3 when true(s_St_6_Max_fail_1))
      when true(s_St_6_Max_fail_2_1));
  s_St_6_Max_fail_3_1_0 =
    ((s_St_6_Max_fail_3 when true(s_St_6_Max_fail_1))
      when false(s_St_6_Max_fail_2_1));
  s_St_6_Max_fail_2_1 = (s_St_6_Max_fail_2 when true(s_St_6_Max_fail_1));
  s_St_6_Max_fail_3_0_1 =
    ((s_St_6_Max_fail_3 when false(s_St_6_Max_fail_1))
      when true(s_St_6_Max_fail_2_0));
  s_St_6_Max_fail_3_0_0 =
    ((s_St_6_Max_fail_3 when false(s_St_6_Max_fail_1))
      when false(s_St_6_Max_fail_2_0));
  s_St_6_Max_fail_2_0 = (s_St_6_Max_fail_2 when false(s_St_6_Max_fail_1));
  ns_3_1_1 = ((ns_3 when true(ns_1)) when true(ns_2_1));
  ns_3_1_0 = ((ns_3 when true(ns_1)) when false(ns_2_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_3_0_1 = ((ns_3 when false(ns_1)) when true(ns_2_0));
  ns_3_0_0 = ((ns_3 when false(ns_1)) when false(ns_2_0));
  ns_2_0 = (ns_2 when false(ns_1));
  s_3_1_1 = ((s_3 when true(s_1)) when true(s_2_1));
  s_3_1_0 = ((s_3 when true(s_1)) when false(s_2_1));
  s_2_1 = (s_2 when true(s_1));
  s_3_0_1 = ((s_3 when false(s_1)) when true(s_2_0));
  s_3_0_0 = ((s_3 when false(s_1)) when false(s_2_0));
  s_2_0 = (s_2 when false(s_1))
tel

node day_shift(change : bool) returns (night : bool)
var nr_St_7_Noite : bool; ns_St_7_Noite_1 : bool; night_St_7_Noite : bool;
    nr_St_7_Dia : bool; ns_St_7_Dia_1 : bool; night_St_7_Dia : bool;
    ck_8_1 : bool; r_St_7_Noite : bool; s_St_7_Noite_1 : bool;
    r_St_7_Dia : bool; s_St_7_Dia_1 : bool; ck_1 : bool; s_1 : bool;
    ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_8_1 = s_1;
  night_St_7_Dia = false;
  nr_St_7_Dia = false;
  ns_St_7_Dia_1 = true;
  night_St_7_Noite = true;
  nr_St_7_Noite = false;
  ns_St_7_Noite_1 = false;
  night = merge ck_8_1 (true -> night_St_7_Dia)(false -> night_St_7_Noite);
  ns_1 = merge ck_8_1 (true -> ns_St_7_Dia_1)(false -> ns_St_7_Noite_1);
  nr = merge ck_8_1 (true -> nr_St_7_Dia)(false -> nr_St_7_Noite);
  ck_1 = true fby ns_1;
  r_St_7_Dia =
    if (change when true(ck_1)) then true else (pnr when true(ck_1));
  s_St_7_Dia_1 = if (change when true(ck_1)) then false else true;
  r_St_7_Noite =
    if (change when false(ck_1)) then true else (pnr when false(ck_1));
  s_St_7_Noite_1 = if (change when false(ck_1)) then true else false;
  s_1 = merge ck_1 (true -> s_St_7_Dia_1)(false -> s_St_7_Noite_1);
  r = merge ck_1 (true -> r_St_7_Dia)(false -> r_St_7_Noite)
tel

node fail(failed_recovered : bool) returns (failed : bool)
var nr_St_8_Falha : bool; ns_St_8_Falha_1 : bool; failed_St_8_Falha : bool;
    nr_St_8_Funcionando : bool; ns_St_8_Funcionando_1 : bool;
    failed_St_8_Funcionando : bool; ck_9_1 : bool; r_St_8_Falha : bool;
    s_St_8_Falha_1 : bool; r_St_8_Funcionando : bool;
    s_St_8_Funcionando_1 : bool; ck_1 : bool; s_1 : bool; ns_1 : bool;
    r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_9_1 = s_1;
  failed_St_8_Funcionando = false;
  nr_St_8_Funcionando = false;
  ns_St_8_Funcionando_1 = false;
  failed_St_8_Falha = true;
  nr_St_8_Falha = false;
  ns_St_8_Falha_1 = true;
  failed =
    merge ck_9_1
      (true -> failed_St_8_Falha)(false -> failed_St_8_Funcionando);
  ns_1 =
    merge ck_9_1 (true -> ns_St_8_Falha_1)(false -> ns_St_8_Funcionando_1);
  nr = merge ck_9_1 (true -> nr_St_8_Falha)(false -> nr_St_8_Funcionando);
  ck_1 = false fby ns_1;
  r_St_8_Funcionando =
    if (failed_recovered when false(ck_1))
    then true
    else (pnr when false(ck_1));
  s_St_8_Funcionando_1 =
    if (failed_recovered when false(ck_1)) then true else false;
  r_St_8_Falha =
    if (failed_recovered when true(ck_1))
    then true
    else (pnr when true(ck_1));
  s_St_8_Falha_1 = if (failed_recovered when true(ck_1)) then false else true;
  s_1 = merge ck_1 (true -> s_St_8_Falha_1)(false -> s_St_8_Funcionando_1);
  r = merge ck_1 (true -> r_St_8_Falha)(false -> r_St_8_Funcionando)
tel

node controller(change_shift : bool; worker : bool; cleaner : bool;
                 air_failed_recovered : bool; light_switch : bool;
                 light_failed_recovered : bool; blind_switch : bool;
                 blind_failed_recovered : bool)
returns (night : bool; door_open : bool; worker_presence : bool;
          cleaner_presence : bool; pc_on : bool; window_open : bool;
          closet_open : bool; air_status : int; light_status : int;
          blind_status : int)
contract
  var rule15 : bool; rule14 : bool; rule13 : bool; rule12 : bool;
      rule11 : bool; rule10 : bool; rule9 : bool; rule8 : bool; rule7 : bool;
      rule6 : bool; rule5 : bool; rule4 : bool; rule3 : bool; rule2 : bool;
      rule1 : bool; v : bool; v_54 : bool; v_55 : bool; v_56 : bool;
      v_57 : bool; v_58 : bool; v_59 : bool; v_60 : bool; v_61 : bool;
      v_62 : bool; v_63 : bool; v_64 : bool; v_65 : bool; v_66 : bool;
      v_67 : bool; v_68 : bool; v_69 : bool; v_70 : bool; v_71 : bool;
      v_72 : bool; v_73 : bool; v_74 : bool; v_75 : bool; v_76 : bool;
      v_77 : bool; v_78 : bool; v_79 : bool; v_80 : bool; v_81 : bool;
      v_82 : bool; v_83 : bool; v_84 : bool; v_85 : bool; v_86 : bool;
      v_87 : bool; v_88 : bool; v_89 : bool; v_90 : bool; v_91 : bool;
      v_92 : bool; v_93 : bool; v_94 : bool; v_95 : bool; v_96 : bool;
      v_97 : bool; v_98 : bool; v_99 : bool; v_100 : bool; v_101 : bool;
      v_102 : bool; v_103 : bool; v_104 : bool; v_105 : bool; v_106 : bool;
      v_107 : bool; v_108 : bool; v_109 : bool; v_110 : bool; v_111 : bool;
      v_112 : bool; v_113 : bool; v_114 : bool; v_115 : bool; v_116 : bool;
      v_117 : bool; v_118 : bool; v_119 : bool; v_120 : bool; v_121 : bool;
      v_122 : bool; v_123 : bool; v_124 : bool; v_125 : bool; v_126 : bool;
      v_127 : bool; v_128 : bool; v_129 : bool; v_130 : bool; v_131 : bool;
      v_132 : bool; v_133 : bool; v_134 : bool; v_135 : bool; v_136 : bool;
      v_137 : bool; v_138 : bool; v_139 : bool; v_140 : bool; v_141 : bool;
      v_142 : bool; v_143 : bool; v_144 : bool; v_145 : bool; v_146 : bool;
      v_147 : bool; v_148 : bool; v_149 : bool; v_150 : bool; v_151 : bool;
      v_152 : bool; v_153 : bool; v_154 : bool; v_155 : bool; v_156 : bool;
      v_157 : bool; v_158 : bool; v_159 : bool; v_160 : bool; v_161 : bool;
      v_162 : bool; v_163 : bool; v_164 : bool; v_165 : bool; v_166 : bool;
      v_167 : bool; v_168 : bool; v_169 : bool; v_170 : bool; v_171 : bool;
      v_172 : bool; v_173 : bool; v_174 : bool; v_175 : bool; v_176 : bool;
      v_177 : bool; v_178 : bool; v_179 : bool; v_180 : bool; v_181 : bool;
      v_182 : bool; v_183 : bool; v_184 : bool; v_185 : bool; v_186 : bool;
      v_187 : bool; v_188 : bool; v_189 : bool; v_190 : bool; v_191 : bool;
      v_192 : bool; v_193 : bool; v_194 : bool; v_195 : bool; v_196 : bool;
      v_197 : bool; v_198 : bool; v_199 : bool; v_200 : bool; v_201 : bool;
      v_202 : bool; v_203 : bool; v_204 : bool; v_205 : bool; v_206 : bool;
      v_207 : bool; v_208 : bool; v_209 : bool; v_210 : bool; v_211 : bool;
      v_212 : bool; v_213 : bool; v_214 : bool; v_215 : bool; v_216 : bool;
      v_217 : bool; v_218 : bool; v_219 : bool; v_220 : bool; v_221 : bool;
      v_222 : bool; v_223 : bool; v_224 : bool; v_225 : bool; v_226 : bool;
      v_227 : bool; v_228 : bool; v_229 : bool; v_230 : bool;
  let
    v = (worker_presence or cleaner_presence);
    v_54 = not(night);
    v_55 = (v & v_54);
    v_56 = (blind_status < 2);
    v_57 = (v_55 & v_56);
    v_58 = not(v_57);
    v_59 = (light_status = 1);
    v_60 = (blind_status = 1);
    v_61 = (v_59 or v_60);
    rule15 = (v_58 or v_61);
    v_62 = (worker_presence or cleaner_presence);
    v_63 = not(night);
    v_64 = (v_62 & v_63);
    v_65 = (air_status > 2);
    v_66 = (v_64 & v_65);
    v_67 = (blind_status > 1);
    v_68 = (v_66 & v_67);
    v_69 = not(v_68);
    rule14 = (v_69 or door_open);
    v_70 = (worker_presence or cleaner_presence);
    v_71 = not(night);
    v_72 = (v_70 & v_71);
    v_73 = (air_status > 2);
    v_74 = (v_72 & v_73);
    v_75 = (blind_status < 2);
    v_76 = (v_74 & v_75);
    v_77 = not(v_76);
    v_78 = (blind_status = 1);
    v_79 = (window_open & v_78);
    v_80 = (v_79 & door_open);
    rule13 = (v_77 or v_80);
    v_81 = (worker_presence or cleaner_presence);
    v_82 = not(night);
    v_83 = (v_81 & v_82);
    v_84 = (light_status < 2);
    v_85 = (v_83 & v_84);
    v_86 = not(v_85);
    v_87 = (light_status = 1);
    rule12 = (v_86 or v_87);
    v_88 = (air_status < 3);
    v_89 = (cleaner_presence & v_88);
    v_90 = not(v_89);
    v_91 = not(pc_on);
    v_92 = (v_91 & closet_open);
    v_93 = (air_status = 1);
    v_94 = (v_92 & v_93);
    rule11 = (v_90 or v_94);
    v_95 = not(night);
    v_96 = (v_95 & pc_on);
    v_97 = (light_status = 1);
    v_98 = not(v_97);
    v_99 = (v_96 & v_98);
    v_100 = not(window_open);
    v_101 = (v_99 & v_100);
    v_102 = (air_status < 3);
    v_103 = (v_101 & v_102);
    v_104 = not(v_103);
    v_105 = (air_status = 1);
    rule10 = (v_104 or v_105);
    v_106 = not(night);
    v_107 = (v_106 & pc_on);
    v_108 = (light_status = 1);
    v_109 = (v_107 & v_108);
    v_110 = not(window_open);
    v_111 = (v_109 & v_110);
    v_112 = (air_status < 3);
    v_113 = (v_111 & v_112);
    v_114 = not(v_113);
    v_115 = (air_status = 2);
    rule9 = (v_114 or v_115);
    v_116 = not(worker_presence);
    v_117 = not(cleaner_presence);
    v_118 = (v_116 & v_117);
    v_119 = not(night);
    v_120 = (v_118 & v_119);
    v_121 = not(v_120);
    v_122 = not(pc_on);
    v_123 = not(window_open);
    v_124 = (v_122 & v_123);
    v_125 = (light_status = 1);
    v_126 = not(v_125);
    v_127 = (v_124 & v_126);
    v_128 = (blind_status = 1);
    v_129 = not(v_128);
    v_130 = (v_127 & v_129);
    v_131 = (air_status = 1);
    v_132 = not(v_131);
    v_133 = (v_130 & v_132);
    rule8 = (v_121 or v_133);
    v_134 = not(worker_presence);
    v_135 = not(cleaner_presence);
    v_136 = (v_134 & v_135);
    v_137 = (v_136 & night);
    v_138 = not(v_137);
    v_139 = not(pc_on);
    v_140 = not(window_open);
    v_141 = (v_139 & v_140);
    v_142 = (light_status = 1);
    v_143 = not(v_142);
    v_144 = (v_141 & v_143);
    v_145 = (blind_status = 1);
    v_146 = not(v_145);
    v_147 = (v_144 & v_146);
    v_148 = (air_status = 1);
    v_149 = not(v_148);
    v_150 = (v_147 & v_149);
    rule7 = (v_138 or v_150);
    v_151 = (worker_presence or cleaner_presence);
    v_152 = (v_151 & night);
    v_153 = (light_status > 1);
    v_154 = (v_152 & v_153);
    v_155 = (air_status > 2);
    v_156 = (v_154 & v_155);
    v_157 = (blind_status > 1);
    v_158 = (v_156 & v_157);
    v_159 = not(v_158);
    v_160 = (window_open & door_open);
    rule6 = (v_159 or v_160);
    v_161 = (worker_presence or cleaner_presence);
    v_162 = (v_161 & night);
    v_163 = (light_status > 1);
    v_164 = (v_162 & v_163);
    v_165 = (air_status > 2);
    v_166 = (v_164 & v_165);
    v_167 = (blind_status < 2);
    v_168 = (v_166 & v_167);
    v_169 = not(v_168);
    v_170 = (blind_status = 1);
    v_171 = (window_open & v_170);
    v_172 = (v_171 & door_open);
    rule5 = (v_169 or v_172);
    v_173 = (worker_presence or cleaner_presence);
    v_174 = (v_173 & night);
    v_175 = (light_status > 1);
    v_176 = (v_174 & v_175);
    v_177 = (air_status < 3);
    v_178 = (v_176 & v_177);
    v_179 = (blind_status < 2);
    v_180 = (v_178 & v_179);
    v_181 = not(v_180);
    v_182 = (blind_status = 1);
    v_183 = (air_status = 1);
    v_184 = (v_182 & v_183);
    rule4 = (v_181 or v_184);
    v_185 = (worker_presence or cleaner_presence);
    v_186 = (v_185 & night);
    v_187 = (light_status < 2);
    v_188 = (v_186 & v_187);
    v_189 = (air_status > 2);
    v_190 = (v_188 & v_189);
    v_191 = (blind_status > 1);
    v_192 = (v_190 & v_191);
    v_193 = not(v_192);
    v_194 = (window_open & door_open);
    rule3 = (v_193 or v_194);
    v_195 = (worker_presence or cleaner_presence);
    v_196 = (v_195 & night);
    v_197 = (light_status < 2);
    v_198 = (v_196 & v_197);
    v_199 = (air_status > 2);
    v_200 = (v_198 & v_199);
    v_201 = (blind_status < 2);
    v_202 = (v_200 & v_201);
    v_203 = not(v_202);
    v_204 = (blind_status = 1);
    v_205 = (window_open & v_204);
    v_206 = (v_205 & door_open);
    rule2 = (v_203 or v_206);
    v_207 = (worker_presence or cleaner_presence);
    v_208 = (v_207 & night);
    v_209 = (light_status < 2);
    v_210 = (v_208 & v_209);
    v_211 = (air_status < 3);
    v_212 = (v_210 & v_211);
    v_213 = not(v_212);
    v_214 = (light_status = 1);
    v_215 = (air_status = 1);
    v_216 = (v_214 & v_215);
    rule1 = (v_213 or v_216);
    v_217 = (rule1 & rule2);
    v_218 = (v_217 & rule3);
    v_219 = (v_218 & rule4);
    v_220 = (v_219 & rule5);
    v_221 = (v_220 & rule6);
    v_222 = (v_221 & rule7);
    v_223 = (v_222 & rule8);
    v_224 = (v_223 & rule9);
    v_225 = (v_224 & rule10);
    v_226 = (v_225 & rule11);
    v_227 = (v_226 & rule12);
    v_228 = (v_227 & rule13);
    v_229 = (v_228 & rule14);
    v_230 = (v_229 & rule15)
  tel
  assume true@ enforce v_230]
                 with (c_blind_2 : bool; c_blind_1 : bool; c_light_2 : bool;
                        c_light_1 : bool; c_closet : bool; c_air_2 : bool;
                        c_air_1 : bool; c_window : bool; c_pc : bool;
                        c_door : bool)
                 var v_390 : bool; v_389 : bool; v_388 : bool; v_387 : bool;
                     v_386 : bool; v_385 : bool; v_384 : int; v_383 : int;
                     ns_St_9_On_fail_2_0 : bool; ns_St_9_On_fail_2_1 : bool;
                     ns_St_9_On_2_0 : bool; ns_St_9_On_2_1 : bool;
                     ns_St_9_Off_fail_2_0 : bool;
                     ns_St_9_Off_fail_2_1 : bool; ns_St_9_Off_2_0 : bool;
                     ns_St_9_Off_2_1 : bool; ck_28_2_0 : bool;
                     ck_28_2_1 : bool; nr_St_9_On_fail : bool;
                     ns_St_9_On_fail_2 : bool; ns_St_9_On_fail_1 : bool;
                     light_source_status_1_St_9_On_fail : int;
                     nr_St_9_On : bool; ns_St_9_On_2 : bool;
                     ns_St_9_On_1 : bool;
                     light_source_status_1_St_9_On : int;
                     nr_St_9_Off_fail : bool; ns_St_9_Off_fail_2 : bool;
                     ns_St_9_Off_fail_1 : bool;
                     light_source_status_1_St_9_Off_fail : int;
                     nr_St_9_Off : bool; ns_St_9_Off_2 : bool;
                     ns_St_9_Off_1 : bool;
                     light_source_status_1_St_9_Off : int; ck_28_2 : bool;
                     ck_28_1 : bool; v_308_2_0 : bool; v_308_2_1 : bool;
                     v_309 : bool; v_308_2 : bool; v_308_1 : bool;
                     v_307 : bool; v_306 : bool; v_305 : bool;
                     v_303_2_0 : bool; v_303_2_1 : bool; v_304 : bool;
                     v_303_2 : bool; v_303_1 : bool; v_302 : bool;
                     v_301 : bool; v_300 : bool; v_298_2_0 : bool;
                     v_298_2_1 : bool; v_299 : bool; v_298_2 : bool;
                     v_298_1 : bool; v_297 : bool; v_296 : bool;
                     v_295 : bool; v_293_2_0 : bool; v_293_2_1 : bool;
                     v_294 : bool; v_293_2 : bool; v_293_1 : bool;
                     v_292 : bool; v_291 : bool; v_290 : bool; v_398 : bool;
                     v_397 : bool; v_396 : bool; v_395 : bool; v_394 : bool;
                     v_393 : bool; v_392 : bool; v_391 : bool;
                     s_St_9_On_fail_2_0 : bool; s_St_9_On_fail_2_1 : bool;
                     s_St_9_On_2_0 : bool; s_St_9_On_2_1 : bool;
                     s_St_9_Off_fail_2_0 : bool; s_St_9_Off_fail_2_1 : bool;
                     s_St_9_Off_2_0 : bool; s_St_9_Off_2_1 : bool;
                     ck_27_2_0 : bool; ck_27_2_1 : bool;
                     r_St_9_On_fail : bool; s_St_9_On_fail_2 : bool;
                     s_St_9_On_fail_1 : bool; r_St_9_On : bool;
                     s_St_9_On_2 : bool; s_St_9_On_1 : bool;
                     r_St_9_Off_fail : bool; s_St_9_Off_fail_2 : bool;
                     s_St_9_Off_fail_1 : bool; r_St_9_Off : bool;
                     s_St_9_Off_2 : bool; s_St_9_Off_1 : bool;
                     ck_27_2 : bool; ck_27_1 : bool; v_406 : bool;
                     v_405 : bool; v_404 : bool; v_403 : bool; v_402 : bool;
                     v_401 : bool; v_400 : int; v_399 : int;
                     ns_1_St_10_On_fail_2_0 : bool;
                     ns_1_St_10_On_fail_2_1 : bool; ns_1_St_10_On_2_0 : bool;
                     ns_1_St_10_On_2_1 : bool;
                     ns_1_St_10_Off_fail_2_0 : bool;
                     ns_1_St_10_Off_fail_2_1 : bool;
                     ns_1_St_10_Off_2_0 : bool; ns_1_St_10_Off_2_1 : bool;
                     ck_26_2_0 : bool; ck_26_2_1 : bool;
                     nr_1_St_10_On_fail : bool; ns_1_St_10_On_fail_2 : bool;
                     ns_1_St_10_On_fail_1 : bool;
                     light_source_status_St_10_On_fail : int;
                     nr_1_St_10_On : bool; ns_1_St_10_On_2 : bool;
                     ns_1_St_10_On_1 : bool;
                     light_source_status_St_10_On : int;
                     nr_1_St_10_Off_fail : bool;
                     ns_1_St_10_Off_fail_2 : bool;
                     ns_1_St_10_Off_fail_1 : bool;
                     light_source_status_St_10_Off_fail : int;
                     nr_1_St_10_Off : bool; ns_1_St_10_Off_2 : bool;
                     ns_1_St_10_Off_1 : bool;
                     light_source_status_St_10_Off : int; ck_26_2 : bool;
                     ck_26_1 : bool; v_288_2_0 : bool; v_288_2_1 : bool;
                     v_289 : bool; v_288_2 : bool; v_288_1 : bool;
                     v_287 : bool; v_286 : bool; v_285 : bool;
                     v_283_2_0 : bool; v_283_2_1 : bool; v_284 : bool;
                     v_283_2 : bool; v_283_1 : bool; v_282 : bool;
                     v_281 : bool; v_280 : bool; v_278_2_0 : bool;
                     v_278_2_1 : bool; v_279 : bool; v_278_2 : bool;
                     v_278_1 : bool; v_277 : bool; v_276 : bool;
                     v_275 : bool; v_273_2_0 : bool; v_273_2_1 : bool;
                     v_274 : bool; v_273_2 : bool; v_273_1 : bool;
                     v_272 : bool; v_271 : bool; v_270 : bool; v_414 : bool;
                     v_413 : bool; v_412 : bool; v_411 : bool; v_410 : bool;
                     v_409 : bool; v_408 : bool; v_407 : bool;
                     s_1_St_10_On_fail_2_0 : bool;
                     s_1_St_10_On_fail_2_1 : bool; s_1_St_10_On_2_0 : bool;
                     s_1_St_10_On_2_1 : bool; s_1_St_10_Off_fail_2_0 : bool;
                     s_1_St_10_Off_fail_2_1 : bool; s_1_St_10_Off_2_0 : bool;
                     s_1_St_10_Off_2_1 : bool; ck_25_2_0 : bool;
                     ck_25_2_1 : bool; r_1_St_10_On_fail : bool;
                     s_1_St_10_On_fail_2 : bool; s_1_St_10_On_fail_1 : bool;
                     r_1_St_10_On : bool; s_1_St_10_On_2 : bool;
                     s_1_St_10_On_1 : bool; r_1_St_10_Off_fail : bool;
                     s_1_St_10_Off_fail_2 : bool;
                     s_1_St_10_Off_fail_1 : bool; r_1_St_10_Off : bool;
                     s_1_St_10_Off_2 : bool; s_1_St_10_Off_1 : bool;
                     ck_25_2 : bool; ck_25_1 : bool; v_444 : bool;
                     v_443 : bool; v_442 : bool; v_441 : bool; v_440 : bool;
                     v_439 : bool; v_438 : bool; v_437 : bool; v_436 : bool;
                     v_435 : bool; v_434 : bool; v_433 : bool; v_432 : bool;
                     v_431 : bool; v_430 : bool; v_429 : bool; v_428 : bool;
                     v_427 : bool; v_426 : bool; v_425 : bool; v_424 : bool;
                     v_423 : bool; v_422 : bool; v_421 : bool; v_420 : int;
                     v_419 : int; v_418 : int; v_417 : int; v_416 : int;
                     v_415 : int; ns_2_St_11_Max_fail_2_0 : bool;
                     ns_2_St_11_Max_fail_3_0_0 : bool;
                     ns_2_St_11_Max_fail_3_0_1 : bool;
                     ns_2_St_11_Max_fail_2_1 : bool;
                     ns_2_St_11_Max_fail_3_1_0 : bool;
                     ns_2_St_11_Max_fail_3_1_1 : bool;
                     ns_2_St_11_Max_2_0 : bool; ns_2_St_11_Max_3_0_0 : bool;
                     ns_2_St_11_Max_3_0_1 : bool; ns_2_St_11_Max_2_1 : bool;
                     ns_2_St_11_Max_3_1_0 : bool;
                     ns_2_St_11_Max_3_1_1 : bool;
                     ns_2_St_11_Min_fail_2_0 : bool;
                     ns_2_St_11_Min_fail_3_0_0 : bool;
                     ns_2_St_11_Min_fail_3_0_1 : bool;
                     ns_2_St_11_Min_fail_2_1 : bool;
                     ns_2_St_11_Min_fail_3_1_0 : bool;
                     ns_2_St_11_Min_fail_3_1_1 : bool;
                     ns_2_St_11_Min_2_0 : bool; ns_2_St_11_Min_3_0_0 : bool;
                     ns_2_St_11_Min_3_0_1 : bool; ns_2_St_11_Min_2_1 : bool;
                     ns_2_St_11_Min_3_1_0 : bool;
                     ns_2_St_11_Min_3_1_1 : bool;
                     ns_2_St_11_Off_fail_2_0 : bool;
                     ns_2_St_11_Off_fail_3_0_0 : bool;
                     ns_2_St_11_Off_fail_3_0_1 : bool;
                     ns_2_St_11_Off_fail_2_1 : bool;
                     ns_2_St_11_Off_fail_3_1_0 : bool;
                     ns_2_St_11_Off_fail_3_1_1 : bool;
                     ns_2_St_11_Off_2_0 : bool; ns_2_St_11_Off_3_0_0 : bool;
                     ns_2_St_11_Off_3_0_1 : bool; ns_2_St_11_Off_2_1 : bool;
                     ns_2_St_11_Off_3_1_0 : bool;
                     ns_2_St_11_Off_3_1_1 : bool; ck_24_2_0 : bool;
                     ck_24_3_0_0 : bool; ck_24_3_0_1 : bool;
                     ck_24_2_1 : bool; ck_24_3_1_0 : bool;
                     ck_24_3_1_1 : bool; nr_2_St_11_Max_fail : bool;
                     ns_2_St_11_Max_fail_3 : bool;
                     ns_2_St_11_Max_fail_2 : bool;
                     ns_2_St_11_Max_fail_1 : bool;
                     air_status_1_St_11_Max_fail : int;
                     nr_2_St_11_Max : bool; ns_2_St_11_Max_3 : bool;
                     ns_2_St_11_Max_2 : bool; ns_2_St_11_Max_1 : bool;
                     air_status_1_St_11_Max : int;
                     nr_2_St_11_Min_fail : bool;
                     ns_2_St_11_Min_fail_3 : bool;
                     ns_2_St_11_Min_fail_2 : bool;
                     ns_2_St_11_Min_fail_1 : bool;
                     air_status_1_St_11_Min_fail : int;
                     nr_2_St_11_Min : bool; ns_2_St_11_Min_3 : bool;
                     ns_2_St_11_Min_2 : bool; ns_2_St_11_Min_1 : bool;
                     air_status_1_St_11_Min : int;
                     nr_2_St_11_Off_fail : bool;
                     ns_2_St_11_Off_fail_3 : bool;
                     ns_2_St_11_Off_fail_2 : bool;
                     ns_2_St_11_Off_fail_1 : bool;
                     air_status_1_St_11_Off_fail : int;
                     nr_2_St_11_Off : bool; ns_2_St_11_Off_3 : bool;
                     ns_2_St_11_Off_2 : bool; ns_2_St_11_Off_1 : bool;
                     air_status_1_St_11_Off : int; ck_24_3 : bool;
                     ck_24_2 : bool; ck_24_1 : bool; v_268_2_0 : bool;
                     v_268_3_0_0 : bool; v_268_3_0_1 : bool;
                     v_268_2_1 : bool; v_268_3_1_0 : bool;
                     v_268_3_1_1 : bool; v_266_2_0 : bool;
                     v_266_3_0_0 : bool; v_266_3_0_1 : bool;
                     v_266_2_1 : bool; v_266_3_1_0 : bool;
                     v_266_3_1_1 : bool; v_269 : bool; v_268_3 : bool;
                     v_268_2 : bool; v_268_1 : bool; v_267 : bool;
                     v_266_3 : bool; v_266_2 : bool; v_266_1 : bool;
                     v_265 : bool; v_263_2_0 : bool; v_263_3_0_0 : bool;
                     v_263_3_0_1 : bool; v_263_2_1 : bool;
                     v_263_3_1_0 : bool; v_263_3_1_1 : bool;
                     v_261_2_0 : bool; v_261_3_0_0 : bool;
                     v_261_3_0_1 : bool; v_261_2_1 : bool;
                     v_261_3_1_0 : bool; v_261_3_1_1 : bool; v_264 : bool;
                     v_263_3 : bool; v_263_2 : bool; v_263_1 : bool;
                     v_262 : bool; v_261_3 : bool; v_261_2 : bool;
                     v_261_1 : bool; v_260 : bool; v_258_2_0 : bool;
                     v_258_3_0_0 : bool; v_258_3_0_1 : bool;
                     v_258_2_1 : bool; v_258_3_1_0 : bool;
                     v_258_3_1_1 : bool; v_256_2_0 : bool;
                     v_256_3_0_0 : bool; v_256_3_0_1 : bool;
                     v_256_2_1 : bool; v_256_3_1_0 : bool;
                     v_256_3_1_1 : bool; v_259 : bool; v_258_3 : bool;
                     v_258_2 : bool; v_258_1 : bool; v_257 : bool;
                     v_256_3 : bool; v_256_2 : bool; v_256_1 : bool;
                     v_255 : bool; v_254 : bool; v_252_2_0 : bool;
                     v_252_3_0_0 : bool; v_252_3_0_1 : bool;
                     v_252_2_1 : bool; v_252_3_1_0 : bool;
                     v_252_3_1_1 : bool; v_250_2_0 : bool;
                     v_250_3_0_0 : bool; v_250_3_0_1 : bool;
                     v_250_2_1 : bool; v_250_3_1_0 : bool;
                     v_250_3_1_1 : bool; v_253 : bool; v_252_3 : bool;
                     v_252_2 : bool; v_252_1 : bool; v_251 : bool;
                     v_250_3 : bool; v_250_2 : bool; v_250_1 : bool;
                     v_249 : bool; v_248 : bool; v_246_2_0 : bool;
                     v_246_3_0_0 : bool; v_246_3_0_1 : bool;
                     v_246_2_1 : bool; v_246_3_1_0 : bool;
                     v_246_3_1_1 : bool; v_244_2_0 : bool;
                     v_244_3_0_0 : bool; v_244_3_0_1 : bool;
                     v_244_2_1 : bool; v_244_3_1_0 : bool;
                     v_244_3_1_1 : bool; v_247 : bool; v_246_3 : bool;
                     v_246_2 : bool; v_246_1 : bool; v_245 : bool;
                     v_244_3 : bool; v_244_2 : bool; v_244_1 : bool;
                     v_243 : bool; v_242 : bool; v_240_2_0 : bool;
                     v_240_3_0_0 : bool; v_240_3_0_1 : bool;
                     v_240_2_1 : bool; v_240_3_1_0 : bool;
                     v_240_3_1_1 : bool; v_238_2_0 : bool;
                     v_238_3_0_0 : bool; v_238_3_0_1 : bool;
                     v_238_2_1 : bool; v_238_3_1_0 : bool;
                     v_238_3_1_1 : bool; v_241 : bool; v_240_3 : bool;
                     v_240_2 : bool; v_240_1 : bool; v_239 : bool;
                     v_238_3 : bool; v_238_2 : bool; v_238_1 : bool;
                     v_237 : bool; v_236 : bool; v_471 : bool; v_470 : bool;
                     v_469 : bool; v_468 : bool; v_467 : bool; v_466 : bool;
                     v_465 : bool; v_464 : bool; v_463 : bool; v_462 : bool;
                     v_461 : bool; v_460 : bool; v_459 : bool; v_458 : bool;
                     v_457 : bool; v_456 : bool; v_455 : bool; v_454 : bool;
                     v_453 : bool; v_452 : bool; v_451 : bool; v_450 : bool;
                     v_449 : bool; v_448 : bool; v_447 : bool; v_446 : bool;
                     v_445 : bool; s_2_St_11_Max_fail_2_0 : bool;
                     s_2_St_11_Max_fail_3_0_0 : bool;
                     s_2_St_11_Max_fail_3_0_1 : bool;
                     s_2_St_11_Max_fail_2_1 : bool;
                     s_2_St_11_Max_fail_3_1_0 : bool;
                     s_2_St_11_Max_fail_3_1_1 : bool;
                     s_2_St_11_Max_2_0 : bool; s_2_St_11_Max_3_0_0 : bool;
                     s_2_St_11_Max_3_0_1 : bool; s_2_St_11_Max_2_1 : bool;
                     s_2_St_11_Max_3_1_0 : bool; s_2_St_11_Max_3_1_1 : bool;
                     s_2_St_11_Min_fail_2_0 : bool;
                     s_2_St_11_Min_fail_3_0_0 : bool;
                     s_2_St_11_Min_fail_3_0_1 : bool;
                     s_2_St_11_Min_fail_2_1 : bool;
                     s_2_St_11_Min_fail_3_1_0 : bool;
                     s_2_St_11_Min_fail_3_1_1 : bool;
                     s_2_St_11_Min_2_0 : bool; s_2_St_11_Min_3_0_0 : bool;
                     s_2_St_11_Min_3_0_1 : bool; s_2_St_11_Min_2_1 : bool;
                     s_2_St_11_Min_3_1_0 : bool; s_2_St_11_Min_3_1_1 : bool;
                     s_2_St_11_Off_fail_2_0 : bool;
                     s_2_St_11_Off_fail_3_0_0 : bool;
                     s_2_St_11_Off_fail_3_0_1 : bool;
                     s_2_St_11_Off_fail_2_1 : bool;
                     s_2_St_11_Off_fail_3_1_0 : bool;
                     s_2_St_11_Off_fail_3_1_1 : bool;
                     s_2_St_11_Off_2_0 : bool; s_2_St_11_Off_3_0_0 : bool;
                     s_2_St_11_Off_3_0_1 : bool; s_2_St_11_Off_2_1 : bool;
                     s_2_St_11_Off_3_1_0 : bool; s_2_St_11_Off_3_1_1 : bool;
                     ck_23_2_0 : bool; ck_23_3_0_0 : bool;
                     ck_23_3_0_1 : bool; ck_23_2_1 : bool;
                     ck_23_3_1_0 : bool; ck_23_3_1_1 : bool;
                     r_2_St_11_Max_fail : bool; s_2_St_11_Max_fail_3 : bool;
                     s_2_St_11_Max_fail_2 : bool;
                     s_2_St_11_Max_fail_1 : bool; r_2_St_11_Max : bool;
                     s_2_St_11_Max_3 : bool; s_2_St_11_Max_2 : bool;
                     s_2_St_11_Max_1 : bool; r_2_St_11_Min_fail : bool;
                     s_2_St_11_Min_fail_3 : bool;
                     s_2_St_11_Min_fail_2 : bool;
                     s_2_St_11_Min_fail_1 : bool; r_2_St_11_Min : bool;
                     s_2_St_11_Min_3 : bool; s_2_St_11_Min_2 : bool;
                     s_2_St_11_Min_1 : bool; r_2_St_11_Off_fail : bool;
                     s_2_St_11_Off_fail_3 : bool;
                     s_2_St_11_Off_fail_2 : bool;
                     s_2_St_11_Off_fail_1 : bool; r_2_St_11_Off : bool;
                     s_2_St_11_Off_3 : bool; s_2_St_11_Off_2 : bool;
                     s_2_St_11_Off_1 : bool; ck_23_3 : bool; ck_23_2 : bool;
                     ck_23_1 : bool; nr_3_St_12_Open : bool;
                     ns_3_St_12_Open_1 : bool;
                     window_open_1_St_12_Open : bool;
                     nr_3_St_12_Closed : bool; ns_3_St_12_Closed_1 : bool;
                     window_open_1_St_12_Closed : bool; ck_22_1 : bool;
                     v_235 : bool; r_3_St_12_Open : bool;
                     s_3_St_12_Open_1 : bool; r_3_St_12_Closed : bool;
                     s_3_St_12_Closed_1 : bool; ck_21_1 : bool;
                     nr_4_St_13_On : bool; ns_4_St_13_On_1 : bool;
                     computer_on_St_13_On : bool; nr_4_St_13_Off : bool;
                     ns_4_St_13_Off_1 : bool; computer_on_St_13_Off : bool;
                     ck_20_1 : bool; v_234 : bool; r_4_St_13_On : bool;
                     s_4_St_13_On_1 : bool; r_4_St_13_Off : bool;
                     s_4_St_13_Off_1 : bool; ck_19_1 : bool;
                     nr_5_St_14_Present : bool; ns_5_St_14_Present_1 : bool;
                     presence_1_St_14_Present : bool;
                     nr_5_St_14_Not_Present : bool;
                     ns_5_St_14_Not_Present_1 : bool;
                     presence_1_St_14_Not_Present : bool; ck_18_1 : bool;
                     r_5_St_14_Present : bool; s_5_St_14_Present_1 : bool;
                     r_5_St_14_Not_Present : bool;
                     s_5_St_14_Not_Present_1 : bool; ck_17_1 : bool;
                     nr_6_St_15_Present : bool; ns_6_St_15_Present_1 : bool;
                     presence_St_15_Present : bool;
                     nr_6_St_15_Not_Present : bool;
                     ns_6_St_15_Not_Present_1 : bool;
                     presence_St_15_Not_Present : bool; ck_16_1 : bool;
                     r_6_St_15_Present : bool; s_6_St_15_Present_1 : bool;
                     r_6_St_15_Not_Present : bool;
                     s_6_St_15_Not_Present_1 : bool; ck_15_1 : bool;
                     nr_7_St_16_Open : bool; ns_7_St_16_Open_1 : bool;
                     closet_open_1_St_16_Open : bool;
                     nr_7_St_16_Locked : bool; ns_7_St_16_Locked_1 : bool;
                     closet_open_1_St_16_Locked : bool; ck_14_1 : bool;
                     v_233 : bool; r_7_St_16_Open : bool;
                     s_7_St_16_Open_1 : bool; r_7_St_16_Locked : bool;
                     s_7_St_16_Locked_1 : bool; ck_13_1 : bool;
                     nr_8_St_17_Open : bool; ns_8_St_17_Open_1 : bool;
                     door_open_1_St_17_Open : bool; nr_8_St_17_Closed : bool;
                     ns_8_St_17_Closed_1 : bool;
                     door_open_1_St_17_Closed : bool; ck_12_1 : bool;
                     v_232 : bool; v_231 : bool; r_8_St_17_Open : bool;
                     s_8_St_17_Open_1 : bool; r_8_St_17_Closed : bool;
                     s_8_St_17_Closed_1 : bool; ck_11_1 : bool;
                     nr_9_St_18_Noite : bool; ns_9_St_18_Noite_1 : bool;
                     night_1_St_18_Noite : bool; nr_9_St_18_Dia : bool;
                     ns_9_St_18_Dia_1 : bool; night_1_St_18_Dia : bool;
                     ck_10_1 : bool; r_9_St_18_Noite : bool;
                     s_9_St_18_Noite_1 : bool; r_9_St_18_Dia : bool;
                     s_9_St_18_Dia_1 : bool; ck_1 : bool; s_2_2_0 : bool;
                     s_2_3_0_0 : bool; s_2_3_0_1 : bool; s_2_2_1 : bool;
                     s_2_3_1_0 : bool; s_2_3_1_1 : bool; ns_2_2_0 : bool;
                     ns_2_3_0_0 : bool; ns_2_3_0_1 : bool; ns_2_2_1 : bool;
                     ns_2_3_1_0 : bool; ns_2_3_1_1 : bool; s_1_2_0 : bool;
                     s_1_2_1 : bool; ns_1_2_0 : bool; ns_1_2_1 : bool;
                     s_2_4_0 : bool; s_2_4_1 : bool; ns_2_4_0 : bool;
                     ns_2_4_1 : bool; s_9_1 : bool; ns_9_1 : bool;
                     r_9 : bool; nr_9 : bool; pnr_9 : bool; s_8_1 : bool;
                     ns_8_1 : bool; r_8 : bool; nr_8 : bool; pnr_8 : bool;
                     s_7_1 : bool; ns_7_1 : bool; r_7 : bool; nr_7 : bool;
                     pnr_7 : bool; s_6_1 : bool; ns_6_1 : bool; r_6 : bool;
                     nr_6 : bool; pnr_6 : bool; s_5_1 : bool; ns_5_1 : bool;
                     r_5 : bool; nr_5 : bool; pnr_5 : bool; s_4_1 : bool;
                     ns_4_1 : bool; r_4 : bool; nr_4 : bool; pnr_4 : bool;
                     s_3_1 : bool; ns_3_1 : bool; r_3 : bool; nr_3 : bool;
                     pnr_3 : bool; s_2_3 : bool; s_2_2 : bool; s_2_1 : bool;
                     ns_2_3 : bool; ns_2_2 : bool; ns_2_1 : bool; r_2 : bool;
                     nr_2 : bool; pnr_2 : bool; s_1_2 : bool; s_1_1 : bool;
                     ns_1_2 : bool; ns_1_1 : bool; r_1 : bool; nr_1 : bool;
                     pnr_1 : bool; s_2_4 : bool; s_1_3 : bool; ns_2_4 : bool;
                     ns_1_3 : bool; r : bool; nr : bool; pnr : bool;
                     c1_2 : bool; c2_2 : bool; sw_1 : bool;
                     failed_recovered_2 : bool; light_source_status_1 : int;
                     c1_1 : bool; c2_1 : bool; sw : bool;
                     failed_recovered_1 : bool; light_source_status : int;
                     c1 : bool; c2 : bool; failed_recovered : bool;
                     air_status_1 : int; c_3 : bool; window_open_1 : bool;
                     c_2 : bool; computer_on : bool; arrived_1 : bool;
                     presence_1 : bool; arrived : bool; presence : bool;
                     c_1 : bool; closet_open_1 : bool; c : bool;
                     door_open_1 : bool; change : bool; night_1 : bool;
  let
    c1_2 = blind_switch;
    c2_2 = c_blind_1;
    sw_1 = c_blind_2;
    failed_recovered_2 = blind_failed_recovered;
    pnr = false fby nr;
    ck_28_1 = s_1_3;
    ck_28_2 = s_2_4;
    light_source_status_1_St_9_Off = 0;
    nr_St_9_Off = false;
    ns_St_9_Off_1 = true;
    ns_St_9_Off_2 = true;
    light_source_status_1_St_9_Off_fail = 2;
    nr_St_9_Off_fail = false;
    ns_St_9_Off_fail_1 = true;
    ns_St_9_Off_fail_2 = false;
    light_source_status_1_St_9_On = 1;
    nr_St_9_On = false;
    ns_St_9_On_1 = false;
    ns_St_9_On_2 = true;
    light_source_status_1_St_9_On_fail = 3;
    nr_St_9_On_fail = false;
    ns_St_9_On_fail_1 = false;
    ns_St_9_On_fail_2 = false;
    v_383 =
      merge ck_28_2_1
        (true -> light_source_status_1_St_9_Off)
        (false -> light_source_status_1_St_9_Off_fail);
    v_384 =
      merge ck_28_2_0
        (true -> light_source_status_1_St_9_On)
        (false -> light_source_status_1_St_9_On_fail);
    light_source_status_1 = merge ck_28_1 (true -> v_383)(false -> v_384);
    v_385 =
      merge ck_28_2_1 (true -> ns_St_9_Off_1)(false -> ns_St_9_Off_fail_1);
    v_386 =
      merge ck_28_2_1 (true -> ns_St_9_Off_2)(false -> ns_St_9_Off_fail_2);
    v_387 =
      merge ck_28_2_0 (true -> ns_St_9_On_1)(false -> ns_St_9_On_fail_1);
    v_388 =
      merge ck_28_2_0 (true -> ns_St_9_On_2)(false -> ns_St_9_On_fail_2);
    ns_1_3 = merge ck_28_1 (true -> v_385)(false -> v_387);
    ns_2_4 = merge ck_28_1 (true -> v_386)(false -> v_388);
    v_389 = merge ck_28_2_1 (true -> nr_St_9_Off)(false -> nr_St_9_Off_fail);
    v_390 = merge ck_28_2_0 (true -> nr_St_9_On)(false -> nr_St_9_On_fail);
    nr = merge ck_28_1 (true -> v_389)(false -> v_390);
    ck_28_2_1 = (ck_28_2 when true(ck_28_1));
    ck_28_2_0 = (ck_28_2 when false(ck_28_1));
    ns_St_9_Off_2_1 = (ns_St_9_Off_2 when true(ns_St_9_Off_1));
    ns_St_9_Off_2_0 = (ns_St_9_Off_2 when false(ns_St_9_Off_1));
    ns_St_9_Off_fail_2_1 = (ns_St_9_Off_fail_2 when true(ns_St_9_Off_fail_1));
    ns_St_9_Off_fail_2_0 =
      (ns_St_9_Off_fail_2 when false(ns_St_9_Off_fail_1));
    ns_St_9_On_2_1 = (ns_St_9_On_2 when true(ns_St_9_On_1));
    ns_St_9_On_2_0 = (ns_St_9_On_2 when false(ns_St_9_On_1));
    ns_St_9_On_fail_2_1 = (ns_St_9_On_fail_2 when true(ns_St_9_On_fail_1));
    ns_St_9_On_fail_2_0 = (ns_St_9_On_fail_2 when false(ns_St_9_On_fail_1));
    v_391 = true fby ns_1_3;
    v_392 = true fby ns_2_4;
    ck_27_1 = v_391;
    ck_27_2 = v_392;
    r_St_9_Off = if v_307 then true else v_309;
    s_St_9_Off_1 = if v_307 then false else v_308_1;
    s_St_9_Off_2 = if v_307 then true else v_308_2;
    v_309 =
      if ((failed_recovered_2 when true(ck_27_1)) when true(ck_27_2_1))
      then true
      else ((pnr when true(ck_27_1)) when true(ck_27_2_1));
    v_308_1 =
      if ((failed_recovered_2 when true(ck_27_1)) when true(ck_27_2_1))
      then true
      else true;
    v_308_2 =
      if ((failed_recovered_2 when true(ck_27_1)) when true(ck_27_2_1))
      then false
      else true;
    v_307 = (v_305 or v_306);
    v_306 = not(((c2_2 when true(ck_27_1)) when true(ck_27_2_1)));
    v_305 =
      (((c1_2 when true(ck_27_1)) when true(ck_27_2_1)) &
       ((sw_1 when true(ck_27_1)) when true(ck_27_2_1)));
    v_308_2_1 = (v_308_2 when true(v_308_1));
    v_308_2_0 = (v_308_2 when false(v_308_1));
    r_St_9_Off_fail = if v_302 then true else v_304;
    s_St_9_Off_fail_1 = if v_302 then false else v_303_1;
    s_St_9_Off_fail_2 = if v_302 then false else v_303_2;
    v_304 =
      if ((failed_recovered_2 when true(ck_27_1)) when false(ck_27_2_1))
      then true
      else ((pnr when true(ck_27_1)) when false(ck_27_2_1));
    v_303_1 =
      if ((failed_recovered_2 when true(ck_27_1)) when false(ck_27_2_1))
      then true
      else true;
    v_303_2 =
      if ((failed_recovered_2 when true(ck_27_1)) when false(ck_27_2_1))
      then true
      else false;
    v_302 = (v_300 or v_301);
    v_301 = not(((c2_2 when true(ck_27_1)) when false(ck_27_2_1)));
    v_300 =
      (((c1_2 when true(ck_27_1)) when false(ck_27_2_1)) &
       ((sw_1 when true(ck_27_1)) when false(ck_27_2_1)));
    v_303_2_1 = (v_303_2 when true(v_303_1));
    v_303_2_0 = (v_303_2 when false(v_303_1));
    r_St_9_On = if v_297 then true else v_299;
    s_St_9_On_1 = if v_297 then true else v_298_1;
    s_St_9_On_2 = if v_297 then true else v_298_2;
    v_299 =
      if ((failed_recovered_2 when false(ck_27_1)) when true(ck_27_2_0))
      then true
      else ((pnr when false(ck_27_1)) when true(ck_27_2_0));
    v_298_1 =
      if ((failed_recovered_2 when false(ck_27_1)) when true(ck_27_2_0))
      then false
      else false;
    v_298_2 =
      if ((failed_recovered_2 when false(ck_27_1)) when true(ck_27_2_0))
      then false
      else true;
    v_297 = (v_295 or v_296);
    v_296 = not(((c2_2 when false(ck_27_1)) when true(ck_27_2_0)));
    v_295 =
      (((c1_2 when false(ck_27_1)) when true(ck_27_2_0)) &
       ((sw_1 when false(ck_27_1)) when true(ck_27_2_0)));
    v_298_2_1 = (v_298_2 when true(v_298_1));
    v_298_2_0 = (v_298_2 when false(v_298_1));
    r_St_9_On_fail = if v_292 then true else v_294;
    s_St_9_On_fail_1 = if v_292 then true else v_293_1;
    s_St_9_On_fail_2 = if v_292 then false else v_293_2;
    v_294 =
      if ((failed_recovered_2 when false(ck_27_1)) when false(ck_27_2_0))
      then true
      else ((pnr when false(ck_27_1)) when false(ck_27_2_0));
    v_293_1 =
      if ((failed_recovered_2 when false(ck_27_1)) when false(ck_27_2_0))
      then false
      else false;
    v_293_2 =
      if ((failed_recovered_2 when false(ck_27_1)) when false(ck_27_2_0))
      then true
      else false;
    v_292 = (v_290 or v_291);
    v_291 = not(((c2_2 when false(ck_27_1)) when false(ck_27_2_0)));
    v_290 =
      (((c1_2 when false(ck_27_1)) when false(ck_27_2_0)) &
       ((sw_1 when false(ck_27_1)) when false(ck_27_2_0)));
    v_293_2_1 = (v_293_2 when true(v_293_1));
    v_293_2_0 = (v_293_2 when false(v_293_1));
    v_393 =
      merge ck_27_2_1 (true -> s_St_9_Off_1)(false -> s_St_9_Off_fail_1);
    v_394 =
      merge ck_27_2_1 (true -> s_St_9_Off_2)(false -> s_St_9_Off_fail_2);
    v_395 = merge ck_27_2_0 (true -> s_St_9_On_1)(false -> s_St_9_On_fail_1);
    v_396 = merge ck_27_2_0 (true -> s_St_9_On_2)(false -> s_St_9_On_fail_2);
    s_1_3 = merge ck_27_1 (true -> v_393)(false -> v_395);
    s_2_4 = merge ck_27_1 (true -> v_394)(false -> v_396);
    v_397 = merge ck_27_2_1 (true -> r_St_9_Off)(false -> r_St_9_Off_fail);
    v_398 = merge ck_27_2_0 (true -> r_St_9_On)(false -> r_St_9_On_fail);
    r = merge ck_27_1 (true -> v_397)(false -> v_398);
    ck_27_2_1 = (ck_27_2 when true(ck_27_1));
    ck_27_2_0 = (ck_27_2 when false(ck_27_1));
    s_St_9_Off_2_1 = (s_St_9_Off_2 when true(s_St_9_Off_1));
    s_St_9_Off_2_0 = (s_St_9_Off_2 when false(s_St_9_Off_1));
    s_St_9_Off_fail_2_1 = (s_St_9_Off_fail_2 when true(s_St_9_Off_fail_1));
    s_St_9_Off_fail_2_0 = (s_St_9_Off_fail_2 when false(s_St_9_Off_fail_1));
    s_St_9_On_2_1 = (s_St_9_On_2 when true(s_St_9_On_1));
    s_St_9_On_2_0 = (s_St_9_On_2 when false(s_St_9_On_1));
    s_St_9_On_fail_2_1 = (s_St_9_On_fail_2 when true(s_St_9_On_fail_1));
    s_St_9_On_fail_2_0 = (s_St_9_On_fail_2 when false(s_St_9_On_fail_1));
    c1_1 = light_switch;
    c2_1 = c_light_1;
    sw = c_light_2;
    failed_recovered_1 = light_failed_recovered;
    pnr_1 = false fby nr_1;
    ck_26_1 = s_1_1;
    ck_26_2 = s_1_2;
    light_source_status_St_10_Off = 0;
    nr_1_St_10_Off = false;
    ns_1_St_10_Off_1 = true;
    ns_1_St_10_Off_2 = true;
    light_source_status_St_10_Off_fail = 2;
    nr_1_St_10_Off_fail = false;
    ns_1_St_10_Off_fail_1 = true;
    ns_1_St_10_Off_fail_2 = false;
    light_source_status_St_10_On = 1;
    nr_1_St_10_On = false;
    ns_1_St_10_On_1 = false;
    ns_1_St_10_On_2 = true;
    light_source_status_St_10_On_fail = 3;
    nr_1_St_10_On_fail = false;
    ns_1_St_10_On_fail_1 = false;
    ns_1_St_10_On_fail_2 = false;
    v_399 =
      merge ck_26_2_1
        (true -> light_source_status_St_10_Off)
        (false -> light_source_status_St_10_Off_fail);
    v_400 =
      merge ck_26_2_0
        (true -> light_source_status_St_10_On)
        (false -> light_source_status_St_10_On_fail);
    light_source_status = merge ck_26_1 (true -> v_399)(false -> v_400);
    v_401 =
      merge ck_26_2_1
        (true -> ns_1_St_10_Off_1)(false -> ns_1_St_10_Off_fail_1);
    v_402 =
      merge ck_26_2_1
        (true -> ns_1_St_10_Off_2)(false -> ns_1_St_10_Off_fail_2);
    v_403 =
      merge ck_26_2_0
        (true -> ns_1_St_10_On_1)(false -> ns_1_St_10_On_fail_1);
    v_404 =
      merge ck_26_2_0
        (true -> ns_1_St_10_On_2)(false -> ns_1_St_10_On_fail_2);
    ns_1_1 = merge ck_26_1 (true -> v_401)(false -> v_403);
    ns_1_2 = merge ck_26_1 (true -> v_402)(false -> v_404);
    v_405 =
      merge ck_26_2_1 (true -> nr_1_St_10_Off)(false -> nr_1_St_10_Off_fail);
    v_406 =
      merge ck_26_2_0 (true -> nr_1_St_10_On)(false -> nr_1_St_10_On_fail);
    nr_1 = merge ck_26_1 (true -> v_405)(false -> v_406);
    ck_26_2_1 = (ck_26_2 when true(ck_26_1));
    ck_26_2_0 = (ck_26_2 when false(ck_26_1));
    ns_1_St_10_Off_2_1 = (ns_1_St_10_Off_2 when true(ns_1_St_10_Off_1));
    ns_1_St_10_Off_2_0 = (ns_1_St_10_Off_2 when false(ns_1_St_10_Off_1));
    ns_1_St_10_Off_fail_2_1 =
      (ns_1_St_10_Off_fail_2 when true(ns_1_St_10_Off_fail_1));
    ns_1_St_10_Off_fail_2_0 =
      (ns_1_St_10_Off_fail_2 when false(ns_1_St_10_Off_fail_1));
    ns_1_St_10_On_2_1 = (ns_1_St_10_On_2 when true(ns_1_St_10_On_1));
    ns_1_St_10_On_2_0 = (ns_1_St_10_On_2 when false(ns_1_St_10_On_1));
    ns_1_St_10_On_fail_2_1 =
      (ns_1_St_10_On_fail_2 when true(ns_1_St_10_On_fail_1));
    ns_1_St_10_On_fail_2_0 =
      (ns_1_St_10_On_fail_2 when false(ns_1_St_10_On_fail_1));
    v_407 = true fby ns_1_1;
    v_408 = true fby ns_1_2;
    ck_25_1 = v_407;
    ck_25_2 = v_408;
    r_1_St_10_Off = if v_287 then true else v_289;
    s_1_St_10_Off_1 = if v_287 then false else v_288_1;
    s_1_St_10_Off_2 = if v_287 then true else v_288_2;
    v_289 =
      if ((failed_recovered_1 when true(ck_25_1)) when true(ck_25_2_1))
      then true
      else ((pnr_1 when true(ck_25_1)) when true(ck_25_2_1));
    v_288_1 =
      if ((failed_recovered_1 when true(ck_25_1)) when true(ck_25_2_1))
      then true
      else true;
    v_288_2 =
      if ((failed_recovered_1 when true(ck_25_1)) when true(ck_25_2_1))
      then false
      else true;
    v_287 = (v_285 or v_286);
    v_286 = not(((c2_1 when true(ck_25_1)) when true(ck_25_2_1)));
    v_285 =
      (((c1_1 when true(ck_25_1)) when true(ck_25_2_1)) &
       ((sw when true(ck_25_1)) when true(ck_25_2_1)));
    v_288_2_1 = (v_288_2 when true(v_288_1));
    v_288_2_0 = (v_288_2 when false(v_288_1));
    r_1_St_10_Off_fail = if v_282 then true else v_284;
    s_1_St_10_Off_fail_1 = if v_282 then false else v_283_1;
    s_1_St_10_Off_fail_2 = if v_282 then false else v_283_2;
    v_284 =
      if ((failed_recovered_1 when true(ck_25_1)) when false(ck_25_2_1))
      then true
      else ((pnr_1 when true(ck_25_1)) when false(ck_25_2_1));
    v_283_1 =
      if ((failed_recovered_1 when true(ck_25_1)) when false(ck_25_2_1))
      then true
      else true;
    v_283_2 =
      if ((failed_recovered_1 when true(ck_25_1)) when false(ck_25_2_1))
      then true
      else false;
    v_282 = (v_280 or v_281);
    v_281 = not(((c2_1 when true(ck_25_1)) when false(ck_25_2_1)));
    v_280 =
      (((c1_1 when true(ck_25_1)) when false(ck_25_2_1)) &
       ((sw when true(ck_25_1)) when false(ck_25_2_1)));
    v_283_2_1 = (v_283_2 when true(v_283_1));
    v_283_2_0 = (v_283_2 when false(v_283_1));
    r_1_St_10_On = if v_277 then true else v_279;
    s_1_St_10_On_1 = if v_277 then true else v_278_1;
    s_1_St_10_On_2 = if v_277 then true else v_278_2;
    v_279 =
      if ((failed_recovered_1 when false(ck_25_1)) when true(ck_25_2_0))
      then true
      else ((pnr_1 when false(ck_25_1)) when true(ck_25_2_0));
    v_278_1 =
      if ((failed_recovered_1 when false(ck_25_1)) when true(ck_25_2_0))
      then false
      else false;
    v_278_2 =
      if ((failed_recovered_1 when false(ck_25_1)) when true(ck_25_2_0))
      then false
      else true;
    v_277 = (v_275 or v_276);
    v_276 = not(((c2_1 when false(ck_25_1)) when true(ck_25_2_0)));
    v_275 =
      (((c1_1 when false(ck_25_1)) when true(ck_25_2_0)) &
       ((sw when false(ck_25_1)) when true(ck_25_2_0)));
    v_278_2_1 = (v_278_2 when true(v_278_1));
    v_278_2_0 = (v_278_2 when false(v_278_1));
    r_1_St_10_On_fail = if v_272 then true else v_274;
    s_1_St_10_On_fail_1 = if v_272 then true else v_273_1;
    s_1_St_10_On_fail_2 = if v_272 then false else v_273_2;
    v_274 =
      if ((failed_recovered_1 when false(ck_25_1)) when false(ck_25_2_0))
      then true
      else ((pnr_1 when false(ck_25_1)) when false(ck_25_2_0));
    v_273_1 =
      if ((failed_recovered_1 when false(ck_25_1)) when false(ck_25_2_0))
      then false
      else false;
    v_273_2 =
      if ((failed_recovered_1 when false(ck_25_1)) when false(ck_25_2_0))
      then true
      else false;
    v_272 = (v_270 or v_271);
    v_271 = not(((c2_1 when false(ck_25_1)) when false(ck_25_2_0)));
    v_270 =
      (((c1_1 when false(ck_25_1)) when false(ck_25_2_0)) &
       ((sw when false(ck_25_1)) when false(ck_25_2_0)));
    v_273_2_1 = (v_273_2 when true(v_273_1));
    v_273_2_0 = (v_273_2 when false(v_273_1));
    v_409 =
      merge ck_25_2_1
        (true -> s_1_St_10_Off_1)(false -> s_1_St_10_Off_fail_1);
    v_410 =
      merge ck_25_2_1
        (true -> s_1_St_10_Off_2)(false -> s_1_St_10_Off_fail_2);
    v_411 =
      merge ck_25_2_0 (true -> s_1_St_10_On_1)(false -> s_1_St_10_On_fail_1);
    v_412 =
      merge ck_25_2_0 (true -> s_1_St_10_On_2)(false -> s_1_St_10_On_fail_2);
    s_1_1 = merge ck_25_1 (true -> v_409)(false -> v_411);
    s_1_2 = merge ck_25_1 (true -> v_410)(false -> v_412);
    v_413 =
      merge ck_25_2_1 (true -> r_1_St_10_Off)(false -> r_1_St_10_Off_fail);
    v_414 =
      merge ck_25_2_0 (true -> r_1_St_10_On)(false -> r_1_St_10_On_fail);
    r_1 = merge ck_25_1 (true -> v_413)(false -> v_414);
    ck_25_2_1 = (ck_25_2 when true(ck_25_1));
    ck_25_2_0 = (ck_25_2 when false(ck_25_1));
    s_1_St_10_Off_2_1 = (s_1_St_10_Off_2 when true(s_1_St_10_Off_1));
    s_1_St_10_Off_2_0 = (s_1_St_10_Off_2 when false(s_1_St_10_Off_1));
    s_1_St_10_Off_fail_2_1 =
      (s_1_St_10_Off_fail_2 when true(s_1_St_10_Off_fail_1));
    s_1_St_10_Off_fail_2_0 =
      (s_1_St_10_Off_fail_2 when false(s_1_St_10_Off_fail_1));
    s_1_St_10_On_2_1 = (s_1_St_10_On_2 when true(s_1_St_10_On_1));
    s_1_St_10_On_2_0 = (s_1_St_10_On_2 when false(s_1_St_10_On_1));
    s_1_St_10_On_fail_2_1 =
      (s_1_St_10_On_fail_2 when true(s_1_St_10_On_fail_1));
    s_1_St_10_On_fail_2_0 =
      (s_1_St_10_On_fail_2 when false(s_1_St_10_On_fail_1));
    c1 = c_air_1;
    c2 = c_air_2;
    failed_recovered = air_failed_recovered;
    pnr_2 = false fby nr_2;
    ck_24_1 = s_2_1;
    ck_24_2 = s_2_2;
    ck_24_3 = s_2_3;
    air_status_1_St_11_Off = 0;
    nr_2_St_11_Off = false;
    ns_2_St_11_Off_1 = false;
    ns_2_St_11_Off_2 = true;
    ns_2_St_11_Off_3 = false;
    air_status_1_St_11_Off_fail = 3;
    nr_2_St_11_Off_fail = false;
    ns_2_St_11_Off_fail_1 = false;
    ns_2_St_11_Off_fail_2 = false;
    ns_2_St_11_Off_fail_3 = false;
    air_status_1_St_11_Min = 1;
    nr_2_St_11_Min = false;
    ns_2_St_11_Min_1 = true;
    ns_2_St_11_Min_2 = false;
    ns_2_St_11_Min_3 = false;
    air_status_1_St_11_Min_fail = 4;
    nr_2_St_11_Min_fail = false;
    ns_2_St_11_Min_fail_1 = false;
    ns_2_St_11_Min_fail_2 = true;
    ns_2_St_11_Min_fail_3 = true;
    air_status_1_St_11_Max = 2;
    nr_2_St_11_Max = false;
    ns_2_St_11_Max_1 = true;
    ns_2_St_11_Max_2 = true;
    ns_2_St_11_Max_3 = true;
    air_status_1_St_11_Max_fail = 5;
    nr_2_St_11_Max_fail = false;
    ns_2_St_11_Max_fail_1 = true;
    ns_2_St_11_Max_fail_2 = true;
    ns_2_St_11_Max_fail_3 = false;
    v_415 =
      merge ck_24_3_1_1
        (true -> air_status_1_St_11_Max)
        (false -> air_status_1_St_11_Max_fail);
    v_416 =
      merge ck_24_3_1_0
        (true -> 
          (((0 when true(ck_24_1)) when false(ck_24_2_1))
            when true(ck_24_3_1_0)))
        (false -> air_status_1_St_11_Min);
    v_417 = merge ck_24_2_1 (true -> v_415)(false -> v_416);
    v_418 =
      merge ck_24_3_0_1
        (true -> air_status_1_St_11_Min_fail)
        (false -> air_status_1_St_11_Off);
    v_419 =
      merge ck_24_3_0_0
        (true -> 
          (((0 when false(ck_24_1)) when false(ck_24_2_0))
            when true(ck_24_3_0_0)))
        (false -> air_status_1_St_11_Off_fail);
    v_420 = merge ck_24_2_0 (true -> v_418)(false -> v_419);
    air_status_1 = merge ck_24_1 (true -> v_417)(false -> v_420);
    v_421 =
      merge ck_24_3_1_1
        (true -> ns_2_St_11_Max_1)(false -> ns_2_St_11_Max_fail_1);
    v_422 =
      merge ck_24_3_1_1
        (true -> ns_2_St_11_Max_2)(false -> ns_2_St_11_Max_fail_2);
    v_423 =
      merge ck_24_3_1_1
        (true -> ns_2_St_11_Max_3)(false -> ns_2_St_11_Max_fail_3);
    v_424 =
      merge ck_24_3_1_0
        (true -> 
          (((true when true(ck_24_1)) when false(ck_24_2_1))
            when true(ck_24_3_1_0)))
        (false -> ns_2_St_11_Min_1);
    v_425 =
      merge ck_24_3_1_0
        (true -> 
          (((true when true(ck_24_1)) when false(ck_24_2_1))
            when true(ck_24_3_1_0)))
        (false -> ns_2_St_11_Min_2);
    v_426 =
      merge ck_24_3_1_0
        (true -> 
          (((true when true(ck_24_1)) when false(ck_24_2_1))
            when true(ck_24_3_1_0)))
        (false -> ns_2_St_11_Min_3);
    v_427 =
      merge ck_24_3_0_1
        (true -> ns_2_St_11_Min_fail_1)(false -> ns_2_St_11_Off_1);
    v_428 =
      merge ck_24_3_0_1
        (true -> ns_2_St_11_Min_fail_2)(false -> ns_2_St_11_Off_2);
    v_429 =
      merge ck_24_3_0_1
        (true -> ns_2_St_11_Min_fail_3)(false -> ns_2_St_11_Off_3);
    v_430 =
      merge ck_24_3_0_0
        (true -> 
          (((true when false(ck_24_1)) when false(ck_24_2_0))
            when true(ck_24_3_0_0)))
        (false -> ns_2_St_11_Off_fail_1);
    v_431 =
      merge ck_24_3_0_0
        (true -> 
          (((true when false(ck_24_1)) when false(ck_24_2_0))
            when true(ck_24_3_0_0)))
        (false -> ns_2_St_11_Off_fail_2);
    v_432 =
      merge ck_24_3_0_0
        (true -> 
          (((true when false(ck_24_1)) when false(ck_24_2_0))
            when true(ck_24_3_0_0)))
        (false -> ns_2_St_11_Off_fail_3);
    v_433 = merge ck_24_2_1 (true -> v_421)(false -> v_424);
    v_434 = merge ck_24_2_1 (true -> v_422)(false -> v_425);
    v_435 = merge ck_24_2_1 (true -> v_423)(false -> v_426);
    v_436 = merge ck_24_2_0 (true -> v_427)(false -> v_430);
    v_437 = merge ck_24_2_0 (true -> v_428)(false -> v_431);
    v_438 = merge ck_24_2_0 (true -> v_429)(false -> v_432);
    ns_2_1 = merge ck_24_1 (true -> v_433)(false -> v_436);
    ns_2_2 = merge ck_24_1 (true -> v_434)(false -> v_437);
    ns_2_3 = merge ck_24_1 (true -> v_435)(false -> v_438);
    v_439 =
      merge ck_24_3_1_1
        (true -> nr_2_St_11_Max)(false -> nr_2_St_11_Max_fail);
    v_440 =
      merge ck_24_3_1_0
        (true -> 
          (((true when true(ck_24_1)) when false(ck_24_2_1))
            when true(ck_24_3_1_0)))
        (false -> nr_2_St_11_Min);
    v_441 = merge ck_24_2_1 (true -> v_439)(false -> v_440);
    v_442 =
      merge ck_24_3_0_1
        (true -> nr_2_St_11_Min_fail)(false -> nr_2_St_11_Off);
    v_443 =
      merge ck_24_3_0_0
        (true -> 
          (((true when false(ck_24_1)) when false(ck_24_2_0))
            when true(ck_24_3_0_0)))
        (false -> nr_2_St_11_Off_fail);
    v_444 = merge ck_24_2_0 (true -> v_442)(false -> v_443);
    nr_2 = merge ck_24_1 (true -> v_441)(false -> v_444);
    ck_24_3_1_1 = ((ck_24_3 when true(ck_24_1)) when true(ck_24_2_1));
    ck_24_3_1_0 = ((ck_24_3 when true(ck_24_1)) when false(ck_24_2_1));
    ck_24_2_1 = (ck_24_2 when true(ck_24_1));
    ck_24_3_0_1 = ((ck_24_3 when false(ck_24_1)) when true(ck_24_2_0));
    ck_24_3_0_0 = ((ck_24_3 when false(ck_24_1)) when false(ck_24_2_0));
    ck_24_2_0 = (ck_24_2 when false(ck_24_1));
    ns_2_St_11_Off_3_1_1 =
      ((ns_2_St_11_Off_3 when true(ns_2_St_11_Off_1))
        when true(ns_2_St_11_Off_2_1));
    ns_2_St_11_Off_3_1_0 =
      ((ns_2_St_11_Off_3 when true(ns_2_St_11_Off_1))
        when false(ns_2_St_11_Off_2_1));
    ns_2_St_11_Off_2_1 = (ns_2_St_11_Off_2 when true(ns_2_St_11_Off_1));
    ns_2_St_11_Off_3_0_1 =
      ((ns_2_St_11_Off_3 when false(ns_2_St_11_Off_1))
        when true(ns_2_St_11_Off_2_0));
    ns_2_St_11_Off_3_0_0 =
      ((ns_2_St_11_Off_3 when false(ns_2_St_11_Off_1))
        when false(ns_2_St_11_Off_2_0));
    ns_2_St_11_Off_2_0 = (ns_2_St_11_Off_2 when false(ns_2_St_11_Off_1));
    ns_2_St_11_Off_fail_3_1_1 =
      ((ns_2_St_11_Off_fail_3 when true(ns_2_St_11_Off_fail_1))
        when true(ns_2_St_11_Off_fail_2_1));
    ns_2_St_11_Off_fail_3_1_0 =
      ((ns_2_St_11_Off_fail_3 when true(ns_2_St_11_Off_fail_1))
        when false(ns_2_St_11_Off_fail_2_1));
    ns_2_St_11_Off_fail_2_1 =
      (ns_2_St_11_Off_fail_2 when true(ns_2_St_11_Off_fail_1));
    ns_2_St_11_Off_fail_3_0_1 =
      ((ns_2_St_11_Off_fail_3 when false(ns_2_St_11_Off_fail_1))
        when true(ns_2_St_11_Off_fail_2_0));
    ns_2_St_11_Off_fail_3_0_0 =
      ((ns_2_St_11_Off_fail_3 when false(ns_2_St_11_Off_fail_1))
        when false(ns_2_St_11_Off_fail_2_0));
    ns_2_St_11_Off_fail_2_0 =
      (ns_2_St_11_Off_fail_2 when false(ns_2_St_11_Off_fail_1));
    ns_2_St_11_Min_3_1_1 =
      ((ns_2_St_11_Min_3 when true(ns_2_St_11_Min_1))
        when true(ns_2_St_11_Min_2_1));
    ns_2_St_11_Min_3_1_0 =
      ((ns_2_St_11_Min_3 when true(ns_2_St_11_Min_1))
        when false(ns_2_St_11_Min_2_1));
    ns_2_St_11_Min_2_1 = (ns_2_St_11_Min_2 when true(ns_2_St_11_Min_1));
    ns_2_St_11_Min_3_0_1 =
      ((ns_2_St_11_Min_3 when false(ns_2_St_11_Min_1))
        when true(ns_2_St_11_Min_2_0));
    ns_2_St_11_Min_3_0_0 =
      ((ns_2_St_11_Min_3 when false(ns_2_St_11_Min_1))
        when false(ns_2_St_11_Min_2_0));
    ns_2_St_11_Min_2_0 = (ns_2_St_11_Min_2 when false(ns_2_St_11_Min_1));
    ns_2_St_11_Min_fail_3_1_1 =
      ((ns_2_St_11_Min_fail_3 when true(ns_2_St_11_Min_fail_1))
        when true(ns_2_St_11_Min_fail_2_1));
    ns_2_St_11_Min_fail_3_1_0 =
      ((ns_2_St_11_Min_fail_3 when true(ns_2_St_11_Min_fail_1))
        when false(ns_2_St_11_Min_fail_2_1));
    ns_2_St_11_Min_fail_2_1 =
      (ns_2_St_11_Min_fail_2 when true(ns_2_St_11_Min_fail_1));
    ns_2_St_11_Min_fail_3_0_1 =
      ((ns_2_St_11_Min_fail_3 when false(ns_2_St_11_Min_fail_1))
        when true(ns_2_St_11_Min_fail_2_0));
    ns_2_St_11_Min_fail_3_0_0 =
      ((ns_2_St_11_Min_fail_3 when false(ns_2_St_11_Min_fail_1))
        when false(ns_2_St_11_Min_fail_2_0));
    ns_2_St_11_Min_fail_2_0 =
      (ns_2_St_11_Min_fail_2 when false(ns_2_St_11_Min_fail_1));
    ns_2_St_11_Max_3_1_1 =
      ((ns_2_St_11_Max_3 when true(ns_2_St_11_Max_1))
        when true(ns_2_St_11_Max_2_1));
    ns_2_St_11_Max_3_1_0 =
      ((ns_2_St_11_Max_3 when true(ns_2_St_11_Max_1))
        when false(ns_2_St_11_Max_2_1));
    ns_2_St_11_Max_2_1 = (ns_2_St_11_Max_2 when true(ns_2_St_11_Max_1));
    ns_2_St_11_Max_3_0_1 =
      ((ns_2_St_11_Max_3 when false(ns_2_St_11_Max_1))
        when true(ns_2_St_11_Max_2_0));
    ns_2_St_11_Max_3_0_0 =
      ((ns_2_St_11_Max_3 when false(ns_2_St_11_Max_1))
        when false(ns_2_St_11_Max_2_0));
    ns_2_St_11_Max_2_0 = (ns_2_St_11_Max_2 when false(ns_2_St_11_Max_1));
    ns_2_St_11_Max_fail_3_1_1 =
      ((ns_2_St_11_Max_fail_3 when true(ns_2_St_11_Max_fail_1))
        when true(ns_2_St_11_Max_fail_2_1));
    ns_2_St_11_Max_fail_3_1_0 =
      ((ns_2_St_11_Max_fail_3 when true(ns_2_St_11_Max_fail_1))
        when false(ns_2_St_11_Max_fail_2_1));
    ns_2_St_11_Max_fail_2_1 =
      (ns_2_St_11_Max_fail_2 when true(ns_2_St_11_Max_fail_1));
    ns_2_St_11_Max_fail_3_0_1 =
      ((ns_2_St_11_Max_fail_3 when false(ns_2_St_11_Max_fail_1))
        when true(ns_2_St_11_Max_fail_2_0));
    ns_2_St_11_Max_fail_3_0_0 =
      ((ns_2_St_11_Max_fail_3 when false(ns_2_St_11_Max_fail_1))
        when false(ns_2_St_11_Max_fail_2_0));
    ns_2_St_11_Max_fail_2_0 =
      (ns_2_St_11_Max_fail_2 when false(ns_2_St_11_Max_fail_1));
    v_445 = false fby ns_2_1;
    v_446 = true fby ns_2_2;
    v_447 = false fby ns_2_3;
    ck_23_1 = v_445;
    ck_23_2 = v_446;
    ck_23_3 = v_447;
    r_2_St_11_Off =
      if (((c1 when false(ck_23_1)) when true(ck_23_2_0))
           when false(ck_23_3_0_1))
      then true
      else v_269;
    s_2_St_11_Off_1 =
      if (((c1 when false(ck_23_1)) when true(ck_23_2_0))
           when false(ck_23_3_0_1))
      then true
      else v_268_1;
    s_2_St_11_Off_2 =
      if (((c1 when false(ck_23_1)) when true(ck_23_2_0))
           when false(ck_23_3_0_1))
      then false
      else v_268_2;
    s_2_St_11_Off_3 =
      if (((c1 when false(ck_23_1)) when true(ck_23_2_0))
           when false(ck_23_3_0_1))
      then false
      else v_268_3;
    v_269 = if v_265 then true else v_267;
    v_268_1 = if v_265 then true else v_266_1;
    v_268_2 = if v_265 then true else v_266_2;
    v_268_3 = if v_265 then true else v_266_3;
    v_267 =
      if (((failed_recovered when false(ck_23_1)) when true(ck_23_2_0))
           when false(ck_23_3_0_1))
      then true
      else (((pnr_2 when false(ck_23_1)) when true(ck_23_2_0))
             when false(ck_23_3_0_1))
        ;
    v_266_1 =
      if (((failed_recovered when false(ck_23_1)) when true(ck_23_2_0))
           when false(ck_23_3_0_1))
      then false
      else false;
    v_266_2 =
      if (((failed_recovered when false(ck_23_1)) when true(ck_23_2_0))
           when false(ck_23_3_0_1))
      then false
      else true;
    v_266_3 =
      if (((failed_recovered when false(ck_23_1)) when true(ck_23_2_0))
           when false(ck_23_3_0_1))
      then false
      else false;
    v_265 =
      not
      ((((c2 when false(ck_23_1)) when true(ck_23_2_0))
         when false(ck_23_3_0_1)))
        ;
    v_266_3_1_1 = ((v_266_3 when true(v_266_1)) when true(v_266_2_1));
    v_266_3_1_0 = ((v_266_3 when true(v_266_1)) when false(v_266_2_1));
    v_266_2_1 = (v_266_2 when true(v_266_1));
    v_266_3_0_1 = ((v_266_3 when false(v_266_1)) when true(v_266_2_0));
    v_266_3_0_0 = ((v_266_3 when false(v_266_1)) when false(v_266_2_0));
    v_266_2_0 = (v_266_2 when false(v_266_1));
    v_268_3_1_1 = ((v_268_3 when true(v_268_1)) when true(v_268_2_1));
    v_268_3_1_0 = ((v_268_3 when true(v_268_1)) when false(v_268_2_1));
    v_268_2_1 = (v_268_2 when true(v_268_1));
    v_268_3_0_1 = ((v_268_3 when false(v_268_1)) when true(v_268_2_0));
    v_268_3_0_0 = ((v_268_3 when false(v_268_1)) when false(v_268_2_0));
    v_268_2_0 = (v_268_2 when false(v_268_1));
    r_2_St_11_Off_fail =
      if (((c1 when false(ck_23_1)) when false(ck_23_2_0))
           when false(ck_23_3_0_0))
      then true
      else v_264;
    s_2_St_11_Off_fail_1 =
      if (((c1 when false(ck_23_1)) when false(ck_23_2_0))
           when false(ck_23_3_0_0))
      then false
      else v_263_1;
    s_2_St_11_Off_fail_2 =
      if (((c1 when false(ck_23_1)) when false(ck_23_2_0))
           when false(ck_23_3_0_0))
      then true
      else v_263_2;
    s_2_St_11_Off_fail_3 =
      if (((c1 when false(ck_23_1)) when false(ck_23_2_0))
           when false(ck_23_3_0_0))
      then true
      else v_263_3;
    v_264 = if v_260 then true else v_262;
    v_263_1 = if v_260 then true else v_261_1;
    v_263_2 = if v_260 then true else v_261_2;
    v_263_3 = if v_260 then false else v_261_3;
    v_262 =
      if (((failed_recovered when false(ck_23_1)) when false(ck_23_2_0))
           when false(ck_23_3_0_0))
      then true
      else (((pnr_2 when false(ck_23_1)) when false(ck_23_2_0))
             when false(ck_23_3_0_0))
        ;
    v_261_1 =
      if (((failed_recovered when false(ck_23_1)) when false(ck_23_2_0))
           when false(ck_23_3_0_0))
      then false
      else false;
    v_261_2 =
      if (((failed_recovered when false(ck_23_1)) when false(ck_23_2_0))
           when false(ck_23_3_0_0))
      then true
      else false;
    v_261_3 =
      if (((failed_recovered when false(ck_23_1)) when false(ck_23_2_0))
           when false(ck_23_3_0_0))
      then false
      else false;
    v_260 =
      not
      ((((c2 when false(ck_23_1)) when false(ck_23_2_0))
         when false(ck_23_3_0_0)))
        ;
    v_261_3_1_1 = ((v_261_3 when true(v_261_1)) when true(v_261_2_1));
    v_261_3_1_0 = ((v_261_3 when true(v_261_1)) when false(v_261_2_1));
    v_261_2_1 = (v_261_2 when true(v_261_1));
    v_261_3_0_1 = ((v_261_3 when false(v_261_1)) when true(v_261_2_0));
    v_261_3_0_0 = ((v_261_3 when false(v_261_1)) when false(v_261_2_0));
    v_261_2_0 = (v_261_2 when false(v_261_1));
    v_263_3_1_1 = ((v_263_3 when true(v_263_1)) when true(v_263_2_1));
    v_263_3_1_0 = ((v_263_3 when true(v_263_1)) when false(v_263_2_1));
    v_263_2_1 = (v_263_2 when true(v_263_1));
    v_263_3_0_1 = ((v_263_3 when false(v_263_1)) when true(v_263_2_0));
    v_263_3_0_0 = ((v_263_3 when false(v_263_1)) when false(v_263_2_0));
    v_263_2_0 = (v_263_2 when false(v_263_1));
    r_2_St_11_Min = if v_254 then true else v_259;
    s_2_St_11_Min_1 = if v_254 then false else v_258_1;
    s_2_St_11_Min_2 = if v_254 then true else v_258_2;
    s_2_St_11_Min_3 = if v_254 then false else v_258_3;
    v_259 = if v_255 then true else v_257;
    v_258_1 = if v_255 then true else v_256_1;
    v_258_2 = if v_255 then true else v_256_2;
    v_258_3 = if v_255 then true else v_256_3;
    v_257 =
      if (((failed_recovered when true(ck_23_1)) when false(ck_23_2_1))
           when false(ck_23_3_1_0))
      then true
      else (((pnr_2 when true(ck_23_1)) when false(ck_23_2_1))
             when false(ck_23_3_1_0))
        ;
    v_256_1 =
      if (((failed_recovered when true(ck_23_1)) when false(ck_23_2_1))
           when false(ck_23_3_1_0))
      then false
      else true;
    v_256_2 =
      if (((failed_recovered when true(ck_23_1)) when false(ck_23_2_1))
           when false(ck_23_3_1_0))
      then true
      else false;
    v_256_3 =
      if (((failed_recovered when true(ck_23_1)) when false(ck_23_2_1))
           when false(ck_23_3_1_0))
      then true
      else false;
    v_255 =
      not
      ((((c2 when true(ck_23_1)) when false(ck_23_2_1))
         when false(ck_23_3_1_0)))
        ;
    v_254 =
      not
      ((((c1 when true(ck_23_1)) when false(ck_23_2_1))
         when false(ck_23_3_1_0)))
        ;
    v_256_3_1_1 = ((v_256_3 when true(v_256_1)) when true(v_256_2_1));
    v_256_3_1_0 = ((v_256_3 when true(v_256_1)) when false(v_256_2_1));
    v_256_2_1 = (v_256_2 when true(v_256_1));
    v_256_3_0_1 = ((v_256_3 when false(v_256_1)) when true(v_256_2_0));
    v_256_3_0_0 = ((v_256_3 when false(v_256_1)) when false(v_256_2_0));
    v_256_2_0 = (v_256_2 when false(v_256_1));
    v_258_3_1_1 = ((v_258_3 when true(v_258_1)) when true(v_258_2_1));
    v_258_3_1_0 = ((v_258_3 when true(v_258_1)) when false(v_258_2_1));
    v_258_2_1 = (v_258_2 when true(v_258_1));
    v_258_3_0_1 = ((v_258_3 when false(v_258_1)) when true(v_258_2_0));
    v_258_3_0_0 = ((v_258_3 when false(v_258_1)) when false(v_258_2_0));
    v_258_2_0 = (v_258_2 when false(v_258_1));
    r_2_St_11_Min_fail = if v_248 then true else v_253;
    s_2_St_11_Min_fail_1 = if v_248 then false else v_252_1;
    s_2_St_11_Min_fail_2 = if v_248 then false else v_252_2;
    s_2_St_11_Min_fail_3 = if v_248 then false else v_252_3;
    v_253 = if v_249 then true else v_251;
    v_252_1 = if v_249 then true else v_250_1;
    v_252_2 = if v_249 then true else v_250_2;
    v_252_3 = if v_249 then false else v_250_3;
    v_251 =
      if (((failed_recovered when false(ck_23_1)) when true(ck_23_2_0))
           when true(ck_23_3_0_1))
      then true
      else (((pnr_2 when false(ck_23_1)) when true(ck_23_2_0))
             when true(ck_23_3_0_1))
        ;
    v_250_1 =
      if (((failed_recovered when false(ck_23_1)) when true(ck_23_2_0))
           when true(ck_23_3_0_1))
      then true
      else false;
    v_250_2 =
      if (((failed_recovered when false(ck_23_1)) when true(ck_23_2_0))
           when true(ck_23_3_0_1))
      then false
      else true;
    v_250_3 =
      if (((failed_recovered when false(ck_23_1)) when true(ck_23_2_0))
           when true(ck_23_3_0_1))
      then false
      else true;
    v_249 =
      not
      ((((c2 when false(ck_23_1)) when true(ck_23_2_0))
         when true(ck_23_3_0_1)))
        ;
    v_248 =
      not
      ((((c1 when false(ck_23_1)) when true(ck_23_2_0))
         when true(ck_23_3_0_1)))
        ;
    v_250_3_1_1 = ((v_250_3 when true(v_250_1)) when true(v_250_2_1));
    v_250_3_1_0 = ((v_250_3 when true(v_250_1)) when false(v_250_2_1));
    v_250_2_1 = (v_250_2 when true(v_250_1));
    v_250_3_0_1 = ((v_250_3 when false(v_250_1)) when true(v_250_2_0));
    v_250_3_0_0 = ((v_250_3 when false(v_250_1)) when false(v_250_2_0));
    v_250_2_0 = (v_250_2 when false(v_250_1));
    v_252_3_1_1 = ((v_252_3 when true(v_252_1)) when true(v_252_2_1));
    v_252_3_1_0 = ((v_252_3 when true(v_252_1)) when false(v_252_2_1));
    v_252_2_1 = (v_252_2 when true(v_252_1));
    v_252_3_0_1 = ((v_252_3 when false(v_252_1)) when true(v_252_2_0));
    v_252_3_0_0 = ((v_252_3 when false(v_252_1)) when false(v_252_2_0));
    v_252_2_0 = (v_252_2 when false(v_252_1));
    r_2_St_11_Max = if v_242 then true else v_247;
    s_2_St_11_Max_1 = if v_242 then true else v_246_1;
    s_2_St_11_Max_2 = if v_242 then false else v_246_2;
    s_2_St_11_Max_3 = if v_242 then false else v_246_3;
    v_247 = if v_243 then true else v_245;
    v_246_1 = if v_243 then false else v_244_1;
    v_246_2 = if v_243 then true else v_244_2;
    v_246_3 = if v_243 then false else v_244_3;
    v_245 =
      if (((failed_recovered when true(ck_23_1)) when true(ck_23_2_1))
           when true(ck_23_3_1_1))
      then true
      else (((pnr_2 when true(ck_23_1)) when true(ck_23_2_1))
             when true(ck_23_3_1_1))
        ;
    v_244_1 =
      if (((failed_recovered when true(ck_23_1)) when true(ck_23_2_1))
           when true(ck_23_3_1_1))
      then true
      else true;
    v_244_2 =
      if (((failed_recovered when true(ck_23_1)) when true(ck_23_2_1))
           when true(ck_23_3_1_1))
      then true
      else true;
    v_244_3 =
      if (((failed_recovered when true(ck_23_1)) when true(ck_23_2_1))
           when true(ck_23_3_1_1))
      then false
      else true;
    v_243 =
      not
      ((((c2 when true(ck_23_1)) when true(ck_23_2_1))
         when true(ck_23_3_1_1)))
        ;
    v_242 =
      not
      ((((c1 when true(ck_23_1)) when true(ck_23_2_1))
         when true(ck_23_3_1_1)))
        ;
    v_244_3_1_1 = ((v_244_3 when true(v_244_1)) when true(v_244_2_1));
    v_244_3_1_0 = ((v_244_3 when true(v_244_1)) when false(v_244_2_1));
    v_244_2_1 = (v_244_2 when true(v_244_1));
    v_244_3_0_1 = ((v_244_3 when false(v_244_1)) when true(v_244_2_0));
    v_244_3_0_0 = ((v_244_3 when false(v_244_1)) when false(v_244_2_0));
    v_244_2_0 = (v_244_2 when false(v_244_1));
    v_246_3_1_1 = ((v_246_3 when true(v_246_1)) when true(v_246_2_1));
    v_246_3_1_0 = ((v_246_3 when true(v_246_1)) when false(v_246_2_1));
    v_246_2_1 = (v_246_2 when true(v_246_1));
    v_246_3_0_1 = ((v_246_3 when false(v_246_1)) when true(v_246_2_0));
    v_246_3_0_0 = ((v_246_3 when false(v_246_1)) when false(v_246_2_0));
    v_246_2_0 = (v_246_2 when false(v_246_1));
    r_2_St_11_Max_fail = if v_236 then true else v_241;
    s_2_St_11_Max_fail_1 = if v_236 then false else v_240_1;
    s_2_St_11_Max_fail_2 = if v_236 then true else v_240_2;
    s_2_St_11_Max_fail_3 = if v_236 then true else v_240_3;
    v_241 = if v_237 then true else v_239;
    v_240_1 = if v_237 then false else v_238_1;
    v_240_2 = if v_237 then false else v_238_2;
    v_240_3 = if v_237 then false else v_238_3;
    v_239 =
      if (((failed_recovered when true(ck_23_1)) when true(ck_23_2_1))
           when false(ck_23_3_1_1))
      then true
      else (((pnr_2 when true(ck_23_1)) when true(ck_23_2_1))
             when false(ck_23_3_1_1))
        ;
    v_238_1 =
      if (((failed_recovered when true(ck_23_1)) when true(ck_23_2_1))
           when false(ck_23_3_1_1))
      then true
      else true;
    v_238_2 =
      if (((failed_recovered when true(ck_23_1)) when true(ck_23_2_1))
           when false(ck_23_3_1_1))
      then true
      else true;
    v_238_3 =
      if (((failed_recovered when true(ck_23_1)) when true(ck_23_2_1))
           when false(ck_23_3_1_1))
      then true
      else false;
    v_237 =
      not
      ((((c2 when true(ck_23_1)) when true(ck_23_2_1))
         when false(ck_23_3_1_1)))
        ;
    v_236 =
      not
      ((((c1 when true(ck_23_1)) when true(ck_23_2_1))
         when false(ck_23_3_1_1)))
        ;
    v_238_3_1_1 = ((v_238_3 when true(v_238_1)) when true(v_238_2_1));
    v_238_3_1_0 = ((v_238_3 when true(v_238_1)) when false(v_238_2_1));
    v_238_2_1 = (v_238_2 when true(v_238_1));
    v_238_3_0_1 = ((v_238_3 when false(v_238_1)) when true(v_238_2_0));
    v_238_3_0_0 = ((v_238_3 when false(v_238_1)) when false(v_238_2_0));
    v_238_2_0 = (v_238_2 when false(v_238_1));
    v_240_3_1_1 = ((v_240_3 when true(v_240_1)) when true(v_240_2_1));
    v_240_3_1_0 = ((v_240_3 when true(v_240_1)) when false(v_240_2_1));
    v_240_2_1 = (v_240_2 when true(v_240_1));
    v_240_3_0_1 = ((v_240_3 when false(v_240_1)) when true(v_240_2_0));
    v_240_3_0_0 = ((v_240_3 when false(v_240_1)) when false(v_240_2_0));
    v_240_2_0 = (v_240_2 when false(v_240_1));
    v_448 =
      merge ck_23_3_1_1
        (true -> s_2_St_11_Max_1)(false -> s_2_St_11_Max_fail_1);
    v_449 =
      merge ck_23_3_1_1
        (true -> s_2_St_11_Max_2)(false -> s_2_St_11_Max_fail_2);
    v_450 =
      merge ck_23_3_1_1
        (true -> s_2_St_11_Max_3)(false -> s_2_St_11_Max_fail_3);
    v_451 =
      merge ck_23_3_1_0
        (true -> 
          (((true when true(ck_23_1)) when false(ck_23_2_1))
            when true(ck_23_3_1_0)))
        (false -> s_2_St_11_Min_1);
    v_452 =
      merge ck_23_3_1_0
        (true -> 
          (((true when true(ck_23_1)) when false(ck_23_2_1))
            when true(ck_23_3_1_0)))
        (false -> s_2_St_11_Min_2);
    v_453 =
      merge ck_23_3_1_0
        (true -> 
          (((true when true(ck_23_1)) when false(ck_23_2_1))
            when true(ck_23_3_1_0)))
        (false -> s_2_St_11_Min_3);
    v_454 =
      merge ck_23_3_0_1
        (true -> s_2_St_11_Min_fail_1)(false -> s_2_St_11_Off_1);
    v_455 =
      merge ck_23_3_0_1
        (true -> s_2_St_11_Min_fail_2)(false -> s_2_St_11_Off_2);
    v_456 =
      merge ck_23_3_0_1
        (true -> s_2_St_11_Min_fail_3)(false -> s_2_St_11_Off_3);
    v_457 =
      merge ck_23_3_0_0
        (true -> 
          (((true when false(ck_23_1)) when false(ck_23_2_0))
            when true(ck_23_3_0_0)))
        (false -> s_2_St_11_Off_fail_1);
    v_458 =
      merge ck_23_3_0_0
        (true -> 
          (((true when false(ck_23_1)) when false(ck_23_2_0))
            when true(ck_23_3_0_0)))
        (false -> s_2_St_11_Off_fail_2);
    v_459 =
      merge ck_23_3_0_0
        (true -> 
          (((true when false(ck_23_1)) when false(ck_23_2_0))
            when true(ck_23_3_0_0)))
        (false -> s_2_St_11_Off_fail_3);
    v_460 = merge ck_23_2_1 (true -> v_448)(false -> v_451);
    v_461 = merge ck_23_2_1 (true -> v_449)(false -> v_452);
    v_462 = merge ck_23_2_1 (true -> v_450)(false -> v_453);
    v_463 = merge ck_23_2_0 (true -> v_454)(false -> v_457);
    v_464 = merge ck_23_2_0 (true -> v_455)(false -> v_458);
    v_465 = merge ck_23_2_0 (true -> v_456)(false -> v_459);
    s_2_1 = merge ck_23_1 (true -> v_460)(false -> v_463);
    s_2_2 = merge ck_23_1 (true -> v_461)(false -> v_464);
    s_2_3 = merge ck_23_1 (true -> v_462)(false -> v_465);
    v_466 =
      merge ck_23_3_1_1 (true -> r_2_St_11_Max)(false -> r_2_St_11_Max_fail);
    v_467 =
      merge ck_23_3_1_0
        (true -> 
          (((true when true(ck_23_1)) when false(ck_23_2_1))
            when true(ck_23_3_1_0)))
        (false -> r_2_St_11_Min);
    v_468 = merge ck_23_2_1 (true -> v_466)(false -> v_467);
    v_469 =
      merge ck_23_3_0_1 (true -> r_2_St_11_Min_fail)(false -> r_2_St_11_Off);
    v_470 =
      merge ck_23_3_0_0
        (true -> 
          (((true when false(ck_23_1)) when false(ck_23_2_0))
            when true(ck_23_3_0_0)))
        (false -> r_2_St_11_Off_fail);
    v_471 = merge ck_23_2_0 (true -> v_469)(false -> v_470);
    r_2 = merge ck_23_1 (true -> v_468)(false -> v_471);
    ck_23_3_1_1 = ((ck_23_3 when true(ck_23_1)) when true(ck_23_2_1));
    ck_23_3_1_0 = ((ck_23_3 when true(ck_23_1)) when false(ck_23_2_1));
    ck_23_2_1 = (ck_23_2 when true(ck_23_1));
    ck_23_3_0_1 = ((ck_23_3 when false(ck_23_1)) when true(ck_23_2_0));
    ck_23_3_0_0 = ((ck_23_3 when false(ck_23_1)) when false(ck_23_2_0));
    ck_23_2_0 = (ck_23_2 when false(ck_23_1));
    s_2_St_11_Off_3_1_1 =
      ((s_2_St_11_Off_3 when true(s_2_St_11_Off_1))
        when true(s_2_St_11_Off_2_1));
    s_2_St_11_Off_3_1_0 =
      ((s_2_St_11_Off_3 when true(s_2_St_11_Off_1))
        when false(s_2_St_11_Off_2_1));
    s_2_St_11_Off_2_1 = (s_2_St_11_Off_2 when true(s_2_St_11_Off_1));
    s_2_St_11_Off_3_0_1 =
      ((s_2_St_11_Off_3 when false(s_2_St_11_Off_1))
        when true(s_2_St_11_Off_2_0));
    s_2_St_11_Off_3_0_0 =
      ((s_2_St_11_Off_3 when false(s_2_St_11_Off_1))
        when false(s_2_St_11_Off_2_0));
    s_2_St_11_Off_2_0 = (s_2_St_11_Off_2 when false(s_2_St_11_Off_1));
    s_2_St_11_Off_fail_3_1_1 =
      ((s_2_St_11_Off_fail_3 when true(s_2_St_11_Off_fail_1))
        when true(s_2_St_11_Off_fail_2_1));
    s_2_St_11_Off_fail_3_1_0 =
      ((s_2_St_11_Off_fail_3 when true(s_2_St_11_Off_fail_1))
        when false(s_2_St_11_Off_fail_2_1));
    s_2_St_11_Off_fail_2_1 =
      (s_2_St_11_Off_fail_2 when true(s_2_St_11_Off_fail_1));
    s_2_St_11_Off_fail_3_0_1 =
      ((s_2_St_11_Off_fail_3 when false(s_2_St_11_Off_fail_1))
        when true(s_2_St_11_Off_fail_2_0));
    s_2_St_11_Off_fail_3_0_0 =
      ((s_2_St_11_Off_fail_3 when false(s_2_St_11_Off_fail_1))
        when false(s_2_St_11_Off_fail_2_0));
    s_2_St_11_Off_fail_2_0 =
      (s_2_St_11_Off_fail_2 when false(s_2_St_11_Off_fail_1));
    s_2_St_11_Min_3_1_1 =
      ((s_2_St_11_Min_3 when true(s_2_St_11_Min_1))
        when true(s_2_St_11_Min_2_1));
    s_2_St_11_Min_3_1_0 =
      ((s_2_St_11_Min_3 when true(s_2_St_11_Min_1))
        when false(s_2_St_11_Min_2_1));
    s_2_St_11_Min_2_1 = (s_2_St_11_Min_2 when true(s_2_St_11_Min_1));
    s_2_St_11_Min_3_0_1 =
      ((s_2_St_11_Min_3 when false(s_2_St_11_Min_1))
        when true(s_2_St_11_Min_2_0));
    s_2_St_11_Min_3_0_0 =
      ((s_2_St_11_Min_3 when false(s_2_St_11_Min_1))
        when false(s_2_St_11_Min_2_0));
    s_2_St_11_Min_2_0 = (s_2_St_11_Min_2 when false(s_2_St_11_Min_1));
    s_2_St_11_Min_fail_3_1_1 =
      ((s_2_St_11_Min_fail_3 when true(s_2_St_11_Min_fail_1))
        when true(s_2_St_11_Min_fail_2_1));
    s_2_St_11_Min_fail_3_1_0 =
      ((s_2_St_11_Min_fail_3 when true(s_2_St_11_Min_fail_1))
        when false(s_2_St_11_Min_fail_2_1));
    s_2_St_11_Min_fail_2_1 =
      (s_2_St_11_Min_fail_2 when true(s_2_St_11_Min_fail_1));
    s_2_St_11_Min_fail_3_0_1 =
      ((s_2_St_11_Min_fail_3 when false(s_2_St_11_Min_fail_1))
        when true(s_2_St_11_Min_fail_2_0));
    s_2_St_11_Min_fail_3_0_0 =
      ((s_2_St_11_Min_fail_3 when false(s_2_St_11_Min_fail_1))
        when false(s_2_St_11_Min_fail_2_0));
    s_2_St_11_Min_fail_2_0 =
      (s_2_St_11_Min_fail_2 when false(s_2_St_11_Min_fail_1));
    s_2_St_11_Max_3_1_1 =
      ((s_2_St_11_Max_3 when true(s_2_St_11_Max_1))
        when true(s_2_St_11_Max_2_1));
    s_2_St_11_Max_3_1_0 =
      ((s_2_St_11_Max_3 when true(s_2_St_11_Max_1))
        when false(s_2_St_11_Max_2_1));
    s_2_St_11_Max_2_1 = (s_2_St_11_Max_2 when true(s_2_St_11_Max_1));
    s_2_St_11_Max_3_0_1 =
      ((s_2_St_11_Max_3 when false(s_2_St_11_Max_1))
        when true(s_2_St_11_Max_2_0));
    s_2_St_11_Max_3_0_0 =
      ((s_2_St_11_Max_3 when false(s_2_St_11_Max_1))
        when false(s_2_St_11_Max_2_0));
    s_2_St_11_Max_2_0 = (s_2_St_11_Max_2 when false(s_2_St_11_Max_1));
    s_2_St_11_Max_fail_3_1_1 =
      ((s_2_St_11_Max_fail_3 when true(s_2_St_11_Max_fail_1))
        when true(s_2_St_11_Max_fail_2_1));
    s_2_St_11_Max_fail_3_1_0 =
      ((s_2_St_11_Max_fail_3 when true(s_2_St_11_Max_fail_1))
        when false(s_2_St_11_Max_fail_2_1));
    s_2_St_11_Max_fail_2_1 =
      (s_2_St_11_Max_fail_2 when true(s_2_St_11_Max_fail_1));
    s_2_St_11_Max_fail_3_0_1 =
      ((s_2_St_11_Max_fail_3 when false(s_2_St_11_Max_fail_1))
        when true(s_2_St_11_Max_fail_2_0));
    s_2_St_11_Max_fail_3_0_0 =
      ((s_2_St_11_Max_fail_3 when false(s_2_St_11_Max_fail_1))
        when false(s_2_St_11_Max_fail_2_0));
    s_2_St_11_Max_fail_2_0 =
      (s_2_St_11_Max_fail_2 when false(s_2_St_11_Max_fail_1));
    c_3 = c_window;
    pnr_3 = false fby nr_3;
    ck_22_1 = s_3_1;
    window_open_1_St_12_Closed = false;
    nr_3_St_12_Closed = false;
    ns_3_St_12_Closed_1 = true;
    window_open_1_St_12_Open = true;
    nr_3_St_12_Open = false;
    ns_3_St_12_Open_1 = false;
    window_open_1 =
      merge ck_22_1
        (true -> window_open_1_St_12_Closed)
        (false -> window_open_1_St_12_Open);
    ns_3_1 =
      merge ck_22_1 (true -> ns_3_St_12_Closed_1)(false -> ns_3_St_12_Open_1);
    nr_3 =
      merge ck_22_1 (true -> nr_3_St_12_Closed)(false -> nr_3_St_12_Open);
    ck_21_1 = true fby ns_3_1;
    r_3_St_12_Closed = if v_235 then true else (pnr_3 when true(ck_21_1));
    s_3_St_12_Closed_1 = if v_235 then false else true;
    v_235 = not((c_3 when true(ck_21_1)));
    r_3_St_12_Open =
      if (c_3 when false(ck_21_1)) then true else (pnr_3 when false(ck_21_1));
    s_3_St_12_Open_1 = if (c_3 when false(ck_21_1)) then true else false;
    s_3_1 =
      merge ck_21_1 (true -> s_3_St_12_Closed_1)(false -> s_3_St_12_Open_1);
    r_3 = merge ck_21_1 (true -> r_3_St_12_Closed)(false -> r_3_St_12_Open);
    c_2 = c_pc;
    pnr_4 = false fby nr_4;
    ck_20_1 = s_4_1;
    computer_on_St_13_Off = false;
    nr_4_St_13_Off = false;
    ns_4_St_13_Off_1 = true;
    computer_on_St_13_On = true;
    nr_4_St_13_On = false;
    ns_4_St_13_On_1 = false;
    computer_on =
      merge ck_20_1
        (true -> computer_on_St_13_Off)(false -> computer_on_St_13_On);
    ns_4_1 =
      merge ck_20_1 (true -> ns_4_St_13_Off_1)(false -> ns_4_St_13_On_1);
    nr_4 = merge ck_20_1 (true -> nr_4_St_13_Off)(false -> nr_4_St_13_On);
    ck_19_1 = true fby ns_4_1;
    r_4_St_13_Off =
      if (c_2 when true(ck_19_1)) then true else (pnr_4 when true(ck_19_1));
    s_4_St_13_Off_1 = if (c_2 when true(ck_19_1)) then false else true;
    r_4_St_13_On = if v_234 then true else (pnr_4 when false(ck_19_1));
    s_4_St_13_On_1 = if v_234 then true else false;
    v_234 = not((c_2 when false(ck_19_1)));
    s_4_1 = merge ck_19_1 (true -> s_4_St_13_Off_1)(false -> s_4_St_13_On_1);
    r_4 = merge ck_19_1 (true -> r_4_St_13_Off)(false -> r_4_St_13_On);
    arrived_1 = cleaner;
    pnr_5 = false fby nr_5;
    ck_18_1 = s_5_1;
    presence_1_St_14_Not_Present = false;
    nr_5_St_14_Not_Present = false;
    ns_5_St_14_Not_Present_1 = true;
    presence_1_St_14_Present = true;
    nr_5_St_14_Present = false;
    ns_5_St_14_Present_1 = false;
    presence_1 =
      merge ck_18_1
        (true -> presence_1_St_14_Not_Present)
        (false -> presence_1_St_14_Present);
    ns_5_1 =
      merge ck_18_1
        (true -> ns_5_St_14_Not_Present_1)(false -> ns_5_St_14_Present_1);
    nr_5 =
      merge ck_18_1
        (true -> nr_5_St_14_Not_Present)(false -> nr_5_St_14_Present);
    ck_17_1 = true fby ns_5_1;
    r_5_St_14_Not_Present =
      if (arrived_1 when true(ck_17_1))
      then true
      else (pnr_5 when true(ck_17_1));
    s_5_St_14_Not_Present_1 =
      if (arrived_1 when true(ck_17_1)) then false else true;
    r_5_St_14_Present =
      if (arrived_1 when false(ck_17_1))
      then true
      else (pnr_5 when false(ck_17_1));
    s_5_St_14_Present_1 =
      if (arrived_1 when false(ck_17_1)) then true else false;
    s_5_1 =
      merge ck_17_1
        (true -> s_5_St_14_Not_Present_1)(false -> s_5_St_14_Present_1);
    r_5 =
      merge ck_17_1
        (true -> r_5_St_14_Not_Present)(false -> r_5_St_14_Present);
    arrived = worker;
    pnr_6 = false fby nr_6;
    ck_16_1 = s_6_1;
    presence_St_15_Not_Present = false;
    nr_6_St_15_Not_Present = false;
    ns_6_St_15_Not_Present_1 = true;
    presence_St_15_Present = true;
    nr_6_St_15_Present = false;
    ns_6_St_15_Present_1 = false;
    presence =
      merge ck_16_1
        (true -> presence_St_15_Not_Present)(false -> presence_St_15_Present);
    ns_6_1 =
      merge ck_16_1
        (true -> ns_6_St_15_Not_Present_1)(false -> ns_6_St_15_Present_1);
    nr_6 =
      merge ck_16_1
        (true -> nr_6_St_15_Not_Present)(false -> nr_6_St_15_Present);
    ck_15_1 = true fby ns_6_1;
    r_6_St_15_Not_Present =
      if (arrived when true(ck_15_1))
      then true
      else (pnr_6 when true(ck_15_1));
    s_6_St_15_Not_Present_1 =
      if (arrived when true(ck_15_1)) then false else true;
    r_6_St_15_Present =
      if (arrived when false(ck_15_1))
      then true
      else (pnr_6 when false(ck_15_1));
    s_6_St_15_Present_1 =
      if (arrived when false(ck_15_1)) then true else false;
    s_6_1 =
      merge ck_15_1
        (true -> s_6_St_15_Not_Present_1)(false -> s_6_St_15_Present_1);
    r_6 =
      merge ck_15_1
        (true -> r_6_St_15_Not_Present)(false -> r_6_St_15_Present);
    c_1 = c_closet;
    pnr_7 = false fby nr_7;
    ck_14_1 = s_7_1;
    closet_open_1_St_16_Locked = false;
    nr_7_St_16_Locked = false;
    ns_7_St_16_Locked_1 = true;
    closet_open_1_St_16_Open = true;
    nr_7_St_16_Open = false;
    ns_7_St_16_Open_1 = false;
    closet_open_1 =
      merge ck_14_1
        (true -> closet_open_1_St_16_Locked)
        (false -> closet_open_1_St_16_Open);
    ns_7_1 =
      merge ck_14_1 (true -> ns_7_St_16_Locked_1)(false -> ns_7_St_16_Open_1);
    nr_7 =
      merge ck_14_1 (true -> nr_7_St_16_Locked)(false -> nr_7_St_16_Open);
    ck_13_1 = true fby ns_7_1;
    r_7_St_16_Locked = if v_233 then true else (pnr_7 when true(ck_13_1));
    s_7_St_16_Locked_1 = if v_233 then false else true;
    v_233 = not((c_1 when true(ck_13_1)));
    r_7_St_16_Open =
      if (c_1 when false(ck_13_1)) then true else (pnr_7 when false(ck_13_1));
    s_7_St_16_Open_1 = if (c_1 when false(ck_13_1)) then true else false;
    s_7_1 =
      merge ck_13_1 (true -> s_7_St_16_Locked_1)(false -> s_7_St_16_Open_1);
    r_7 = merge ck_13_1 (true -> r_7_St_16_Locked)(false -> r_7_St_16_Open);
    c = c_door;
    pnr_8 = false fby nr_8;
    ck_12_1 = s_8_1;
    door_open_1_St_17_Closed = false;
    nr_8_St_17_Closed = false;
    ns_8_St_17_Closed_1 = true;
    door_open_1_St_17_Open = true;
    nr_8_St_17_Open = false;
    ns_8_St_17_Open_1 = false;
    door_open_1 =
      merge ck_12_1
        (true -> door_open_1_St_17_Closed)(false -> door_open_1_St_17_Open);
    ns_8_1 =
      merge ck_12_1 (true -> ns_8_St_17_Closed_1)(false -> ns_8_St_17_Open_1);
    nr_8 =
      merge ck_12_1 (true -> nr_8_St_17_Closed)(false -> nr_8_St_17_Open);
    ck_11_1 = true fby ns_8_1;
    r_8_St_17_Closed = if v_232 then true else (pnr_8 when true(ck_11_1));
    s_8_St_17_Closed_1 = if v_232 then false else true;
    v_232 = not((c when true(ck_11_1)));
    r_8_St_17_Open = if v_231 then true else (pnr_8 when false(ck_11_1));
    s_8_St_17_Open_1 = if v_231 then true else false;
    v_231 = not((c when false(ck_11_1)));
    s_8_1 =
      merge ck_11_1 (true -> s_8_St_17_Closed_1)(false -> s_8_St_17_Open_1);
    r_8 = merge ck_11_1 (true -> r_8_St_17_Closed)(false -> r_8_St_17_Open);
    change = change_shift;
    pnr_9 = false fby nr_9;
    ck_10_1 = s_9_1;
    night_1_St_18_Dia = false;
    nr_9_St_18_Dia = false;
    ns_9_St_18_Dia_1 = true;
    night_1_St_18_Noite = true;
    nr_9_St_18_Noite = false;
    ns_9_St_18_Noite_1 = false;
    night_1 =
      merge ck_10_1 (true -> night_1_St_18_Dia)(false -> night_1_St_18_Noite);
    ns_9_1 =
      merge ck_10_1 (true -> ns_9_St_18_Dia_1)(false -> ns_9_St_18_Noite_1);
    nr_9 = merge ck_10_1 (true -> nr_9_St_18_Dia)(false -> nr_9_St_18_Noite);
    ck_1 = true fby ns_9_1;
    r_9_St_18_Dia =
      if (change when true(ck_1)) then true else (pnr_9 when true(ck_1));
    s_9_St_18_Dia_1 = if (change when true(ck_1)) then false else true;
    r_9_St_18_Noite =
      if (change when false(ck_1)) then true else (pnr_9 when false(ck_1));
    s_9_St_18_Noite_1 = if (change when false(ck_1)) then true else false;
    s_9_1 = merge ck_1 (true -> s_9_St_18_Dia_1)(false -> s_9_St_18_Noite_1);
    r_9 = merge ck_1 (true -> r_9_St_18_Dia)(false -> r_9_St_18_Noite);
    night = night_1;
    door_open = door_open_1;
    closet_open = closet_open_1;
    worker_presence = presence;
    cleaner_presence = presence_1;
    pc_on = computer_on;
    window_open = window_open_1;
    air_status = air_status_1;
    light_status = light_source_status;
    blind_status = light_source_status_1;
    ns_2_4_1 = (ns_2_4 when true(ns_1_3));
    ns_2_4_0 = (ns_2_4 when false(ns_1_3));
    s_2_4_1 = (s_2_4 when true(s_1_3));
    s_2_4_0 = (s_2_4 when false(s_1_3));
    ns_1_2_1 = (ns_1_2 when true(ns_1_1));
    ns_1_2_0 = (ns_1_2 when false(ns_1_1));
    s_1_2_1 = (s_1_2 when true(s_1_1));
    s_1_2_0 = (s_1_2 when false(s_1_1));
    ns_2_3_1_1 = ((ns_2_3 when true(ns_2_1)) when true(ns_2_2_1));
    ns_2_3_1_0 = ((ns_2_3 when true(ns_2_1)) when false(ns_2_2_1));
    ns_2_2_1 = (ns_2_2 when true(ns_2_1));
    ns_2_3_0_1 = ((ns_2_3 when false(ns_2_1)) when true(ns_2_2_0));
    ns_2_3_0_0 = ((ns_2_3 when false(ns_2_1)) when false(ns_2_2_0));
    ns_2_2_0 = (ns_2_2 when false(ns_2_1));
    s_2_3_1_1 = ((s_2_3 when true(s_2_1)) when true(s_2_2_1));
    s_2_3_1_0 = ((s_2_3 when true(s_2_1)) when false(s_2_2_1));
    s_2_2_1 = (s_2_2 when true(s_2_1));
    s_2_3_0_1 = ((s_2_3 when false(s_2_1)) when true(s_2_2_0));
    s_2_3_0_0 = ((s_2_3 when false(s_2_1)) when false(s_2_2_0));
    s_2_2_0 = (s_2_2 when false(s_2_1))
  tel

