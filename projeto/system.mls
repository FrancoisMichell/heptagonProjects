type st_25 = St_25_Noite|St_25_Dia
type st_24 = St_24_Open|St_24_Closed
type st_23 = St_23_On|St_23_Off
type st_22 = St_22_Preent|St_22_Not_Present
type st_21 = St_21_On|St_21_Off
type st_20 = St_20_Open|St_20_Closed
type st_19 = St_19_Some|St_19_None|St_19_All
type st_18 = St_18_Up|St_18_Mid|St_18_Down
type st_17 = St_17_Off|St_17_Min|St_17_Max
type st_16 = St_16_Noite|St_16_Dia
type st_15 = St_15_Off|St_15_Min|St_15_Max
type st_14 = St_14_Up|St_14_Mid|St_14_Down
type st_13 = St_13_Some|St_13_None|St_13_All
type st_12 = St_12_Open|St_12_Closed
type st_11 = St_11_On|St_11_Off
type st_10 = St_10_Preent|St_10_Not_Present
type st_9 = St_9_Open|St_9_Locked
type st_8 = St_8_On|St_8_Off
type st_7 = St_7_Open|St_7_Closed
type st_6 = St_6_Minimal_safety|St_6_Eco|St_6_Comfort
type st_5 = St_5_Standby|St_5_Reheat|St_5_Off|St_5_Maintain|St_5_Heat
type st_4 = St_4_Water_fill|St_4_Washing|St_4_Standby|St_4_Spin|St_4_Rinse|
  St_4_Off
type st_3 = St_3_Off|St_3_High|St_3_Frostprotection|St_3_Eco
type st_2 = St_2_Open|St_2_Closed
type st_1 = St_1_Ligado|St_1_Desligado
type st = St_Ocupied|St_Empty
node room(presence : bool) returns (occupied : bool)
var nr_St_Ocupied : bool; ns_St_Ocupied_1 : bool; occupied_St_Ocupied : bool;
    nr_St_Empty : bool; ns_St_Empty_1 : bool; occupied_St_Empty : bool;
    ck_1_1 : bool; r_St_Ocupied : bool; s_St_Ocupied_1 : bool;
    r_St_Empty : bool; s_St_Empty_1 : bool; ck_1_2 : bool; s_1 : bool;
    ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_1_1 = s_1;
  occupied_St_Empty = false;
  nr_St_Empty = false;
  ns_St_Empty_1 = true;
  occupied_St_Ocupied = true;
  nr_St_Ocupied = false;
  ns_St_Ocupied_1 = false;
  occupied =
    merge ck_1_1 (true -> occupied_St_Empty)(false -> occupied_St_Ocupied);
  ns_1 = merge ck_1_1 (true -> ns_St_Empty_1)(false -> ns_St_Ocupied_1);
  nr = merge ck_1_1 (true -> nr_St_Empty)(false -> nr_St_Ocupied);
  ck_1_2 = true fby ns_1;
  r_St_Empty =
    if (presence when true(ck_1_2)) then true else (pnr when true(ck_1_2));
  s_St_Empty_1 = if (presence when true(ck_1_2)) then false else true;
  r_St_Ocupied =
    if (presence when false(ck_1_2)) then true else (pnr when false(ck_1_2));
  s_St_Ocupied_1 = if (presence when false(ck_1_2)) then true else false;
  s_1 = merge ck_1_2 (true -> s_St_Empty_1)(false -> s_St_Ocupied_1);
  r = merge ck_1_2 (true -> r_St_Empty)(false -> r_St_Ocupied)
tel

node light_source(source_switch : bool; c_source1 : bool; c_source2 : bool)
returns (source_on : bool)
var nr_St_1_Ligado : bool; ns_St_1_Ligado_1 : bool;
    source_on_St_1_Ligado : bool; nr_St_1_Desligado : bool;
    ns_St_1_Desligado_1 : bool; source_on_St_1_Desligado : bool;
    ck_2_1 : bool; v_5 : bool; v_4 : bool; v_3 : bool; v_2 : bool;
    v_1 : bool; v : bool; r_St_1_Ligado : bool; s_St_1_Ligado_1 : bool;
    r_St_1_Desligado : bool; s_St_1_Desligado_1 : bool; ck_1 : bool;
    s_1 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_2_1 = s_1;
  source_on_St_1_Desligado = false;
  nr_St_1_Desligado = false;
  ns_St_1_Desligado_1 = true;
  source_on_St_1_Ligado = true;
  nr_St_1_Ligado = false;
  ns_St_1_Ligado_1 = false;
  source_on =
    merge ck_2_1
      (true -> source_on_St_1_Desligado)(false -> source_on_St_1_Ligado);
  ns_1 =
    merge ck_2_1 (true -> ns_St_1_Desligado_1)(false -> ns_St_1_Ligado_1);
  nr = merge ck_2_1 (true -> nr_St_1_Desligado)(false -> nr_St_1_Ligado);
  ck_1 = true fby ns_1;
  r_St_1_Desligado = if v_5 then true else (pnr when true(ck_1));
  s_St_1_Desligado_1 = if v_5 then false else true;
  v_5 = (v_4 or (c_source1 when true(ck_1)));
  v_4 = ((source_switch when true(ck_1)) & v_3);
  v_3 = not((c_source2 when true(ck_1)));
  r_St_1_Ligado = if v_2 then true else (pnr when false(ck_1));
  s_St_1_Ligado_1 = if v_2 then true else false;
  v_2 = (v_1 or (c_source2 when false(ck_1)));
  v_1 = ((source_switch when false(ck_1)) & v);
  v = not((c_source1 when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_1_Desligado_1)(false -> s_St_1_Ligado_1);
  r = merge ck_1 (true -> r_St_1_Desligado)(false -> r_St_1_Ligado)
tel

node door(push : bool; c_door : bool) returns (door_open : bool)
var nr_St_2_Open : bool; ns_St_2_Open_1 : bool; door_open_St_2_Open : bool;
    nr_St_2_Closed : bool; ns_St_2_Closed_1 : bool;
    door_open_St_2_Closed : bool; ck_3_1 : bool; v_7 : bool; v_6 : bool;
    v : bool; r_St_2_Open : bool; s_St_2_Open_1 : bool; r_St_2_Closed : bool;
    s_St_2_Closed_1 : bool; ck_1 : bool; s_1 : bool; ns_1 : bool; r : bool;
    nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_3_1 = s_1;
  door_open_St_2_Closed = false;
  nr_St_2_Closed = false;
  ns_St_2_Closed_1 = true;
  door_open_St_2_Open = true;
  nr_St_2_Open = false;
  ns_St_2_Open_1 = false;
  door_open =
    merge ck_3_1
      (true -> door_open_St_2_Closed)(false -> door_open_St_2_Open);
  ns_1 = merge ck_3_1 (true -> ns_St_2_Closed_1)(false -> ns_St_2_Open_1);
  nr = merge ck_3_1 (true -> nr_St_2_Closed)(false -> nr_St_2_Open);
  ck_1 = true fby ns_1;
  r_St_2_Closed = if v_7 then true else (pnr when true(ck_1));
  s_St_2_Closed_1 = if v_7 then false else true;
  v_7 = ((push when true(ck_1)) & (c_door when true(ck_1)));
  r_St_2_Open = if v_6 then true else (pnr when false(ck_1));
  s_St_2_Open_1 = if v_6 then true else false;
  v_6 = ((push when false(ck_1)) or v);
  v = not((c_door when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_2_Closed_1)(false -> s_St_2_Open_1);
  r = merge ck_1 (true -> r_St_2_Closed)(false -> r_St_2_Open)
tel

node rad(up1 : bool; down1 : bool; up2 : bool; down2 : bool; c_rad1 : bool;
          c_rad2 : bool)
returns (rad_power : int; rad_state : int)
var v_140 : bool; v_139 : bool; v_138 : bool; v_137 : bool; v_136 : bool;
    v_135 : bool; v_134 : int; v_133 : int; v_132 : int; v_131 : int;
    ns_St_3_High_2_0 : bool; ns_St_3_High_2_1 : bool; ns_St_3_Eco_2_0 : bool;
    ns_St_3_Eco_2_1 : bool; ns_St_3_Frostprotection_2_0 : bool;
    ns_St_3_Frostprotection_2_1 : bool; ns_St_3_Off_2_0 : bool;
    ns_St_3_Off_2_1 : bool; ck_4_2_0 : bool; ck_4_2_1 : bool;
    nr_St_3_High : bool; ns_St_3_High_2 : bool; ns_St_3_High_1 : bool;
    rad_state_St_3_High : int; rad_power_St_3_High : int; nr_St_3_Eco : bool;
    ns_St_3_Eco_2 : bool; ns_St_3_Eco_1 : bool; rad_state_St_3_Eco : int;
    rad_power_St_3_Eco : int; nr_St_3_Frostprotection : bool;
    ns_St_3_Frostprotection_2 : bool; ns_St_3_Frostprotection_1 : bool;
    rad_state_St_3_Frostprotection : int;
    rad_power_St_3_Frostprotection : int; nr_St_3_Off : bool;
    ns_St_3_Off_2 : bool; ns_St_3_Off_1 : bool; rad_state_St_3_Off : int;
    rad_power_St_3_Off : int; ck_4_2 : bool; ck_4_1 : bool; v_27 : bool;
    v_26 : bool; v_24_2_0 : bool; v_24_2_1 : bool; v_22_2_0 : bool;
    v_22_2_1 : bool; v_25 : bool; v_24_2 : bool; v_24_1 : bool; v_23 : bool;
    v_22_2 : bool; v_22_1 : bool; v_21 : bool; v_20 : bool; v_19 : bool;
    v_18 : bool; v_16_2_0 : bool; v_16_2_1 : bool; v_17 : bool;
    v_16_2 : bool; v_16_1 : bool; v_15 : bool; v_14 : bool; v_13 : bool;
    v_11_2_0 : bool; v_11_2_1 : bool; v_12 : bool; v_11_2 : bool;
    v_11_1 : bool; v_10 : bool; v_9 : bool; v_8 : bool; v : bool;
    v_148 : bool; v_147 : bool; v_146 : bool; v_145 : bool; v_144 : bool;
    v_143 : bool; v_142 : bool; v_141 : bool; s_St_3_High_2_0 : bool;
    s_St_3_High_2_1 : bool; s_St_3_Eco_2_0 : bool; s_St_3_Eco_2_1 : bool;
    s_St_3_Frostprotection_2_0 : bool; s_St_3_Frostprotection_2_1 : bool;
    s_St_3_Off_2_0 : bool; s_St_3_Off_2_1 : bool; ck_2_0 : bool;
    ck_2_1 : bool; r_St_3_High : bool; s_St_3_High_2 : bool;
    s_St_3_High_1 : bool; r_St_3_Eco : bool; s_St_3_Eco_2 : bool;
    s_St_3_Eco_1 : bool; r_St_3_Frostprotection : bool;
    s_St_3_Frostprotection_2 : bool; s_St_3_Frostprotection_1 : bool;
    r_St_3_Off : bool; s_St_3_Off_2 : bool; s_St_3_Off_1 : bool; ck_2 : bool;
    ck_1 : bool; s_2_0 : bool; s_2_1 : bool; ns_2_0 : bool; ns_2_1 : bool;
    s_2 : bool; s_1 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool;
    pnr : bool;
let
  pnr = false fby nr;
  ck_4_1 = s_1;
  ck_4_2 = s_2;
  rad_power_St_3_Off = 0;
  rad_state_St_3_Off = 0;
  nr_St_3_Off = false;
  ns_St_3_Off_1 = false;
  ns_St_3_Off_2 = false;
  rad_power_St_3_Frostprotection = 300;
  rad_state_St_3_Frostprotection = 1;
  nr_St_3_Frostprotection = false;
  ns_St_3_Frostprotection_1 = true;
  ns_St_3_Frostprotection_2 = false;
  rad_power_St_3_Eco = 1500;
  rad_state_St_3_Eco = 2;
  nr_St_3_Eco = false;
  ns_St_3_Eco_1 = true;
  ns_St_3_Eco_2 = true;
  rad_power_St_3_High = 2000;
  rad_state_St_3_High = 3;
  nr_St_3_High = false;
  ns_St_3_High_1 = false;
  ns_St_3_High_2 = true;
  v_131 =
    merge ck_4_2_1
      (true -> rad_power_St_3_Eco)(false -> rad_power_St_3_Frostprotection);
  v_132 =
    merge ck_4_2_0 (true -> rad_power_St_3_High)(false -> rad_power_St_3_Off);
  rad_power = merge ck_4_1 (true -> v_131)(false -> v_132);
  v_133 =
    merge ck_4_2_1
      (true -> rad_state_St_3_Eco)(false -> rad_state_St_3_Frostprotection);
  v_134 =
    merge ck_4_2_0 (true -> rad_state_St_3_High)(false -> rad_state_St_3_Off);
  rad_state = merge ck_4_1 (true -> v_133)(false -> v_134);
  v_135 =
    merge ck_4_2_1
      (true -> ns_St_3_Eco_1)(false -> ns_St_3_Frostprotection_1);
  v_136 =
    merge ck_4_2_1
      (true -> ns_St_3_Eco_2)(false -> ns_St_3_Frostprotection_2);
  v_137 = merge ck_4_2_0 (true -> ns_St_3_High_1)(false -> ns_St_3_Off_1);
  v_138 = merge ck_4_2_0 (true -> ns_St_3_High_2)(false -> ns_St_3_Off_2);
  ns_1 = merge ck_4_1 (true -> v_135)(false -> v_137);
  ns_2 = merge ck_4_1 (true -> v_136)(false -> v_138);
  v_139 =
    merge ck_4_2_1 (true -> nr_St_3_Eco)(false -> nr_St_3_Frostprotection);
  v_140 = merge ck_4_2_0 (true -> nr_St_3_High)(false -> nr_St_3_Off);
  nr = merge ck_4_1 (true -> v_139)(false -> v_140);
  ck_4_2_1 = (ck_4_2 when true(ck_4_1));
  ck_4_2_0 = (ck_4_2 when false(ck_4_1));
  ns_St_3_Off_2_1 = (ns_St_3_Off_2 when true(ns_St_3_Off_1));
  ns_St_3_Off_2_0 = (ns_St_3_Off_2 when false(ns_St_3_Off_1));
  ns_St_3_Frostprotection_2_1 =
    (ns_St_3_Frostprotection_2 when true(ns_St_3_Frostprotection_1));
  ns_St_3_Frostprotection_2_0 =
    (ns_St_3_Frostprotection_2 when false(ns_St_3_Frostprotection_1));
  ns_St_3_Eco_2_1 = (ns_St_3_Eco_2 when true(ns_St_3_Eco_1));
  ns_St_3_Eco_2_0 = (ns_St_3_Eco_2 when false(ns_St_3_Eco_1));
  ns_St_3_High_2_1 = (ns_St_3_High_2 when true(ns_St_3_High_1));
  ns_St_3_High_2_0 = (ns_St_3_High_2 when false(ns_St_3_High_1));
  v_141 = false fby ns_1;
  v_142 = false fby ns_2;
  ck_1 = v_141;
  ck_2 = v_142;
  r_St_3_Off =
    if v_27 then true else ((pnr when false(ck_1)) when false(ck_2_0));
  s_St_3_Off_1 = if v_27 then true else false;
  s_St_3_Off_2 = if v_27 then false else false;
  v_27 = (((up1 when false(ck_1)) when false(ck_2_0)) or v_26);
  v_26 = not(((c_rad1 when false(ck_1)) when false(ck_2_0)));
  r_St_3_Frostprotection = if v_18 then true else v_25;
  s_St_3_Frostprotection_1 = if v_18 then true else v_24_1;
  s_St_3_Frostprotection_2 = if v_18 then true else v_24_2;
  v_25 = if v_19 then true else v_23;
  v_24_1 = if v_19 then false else v_22_1;
  v_24_2 = if v_19 then true else v_22_2;
  v_23 = if v_21 then true else ((pnr when true(ck_1)) when false(ck_2_1));
  v_22_1 = if v_21 then false else true;
  v_22_2 = if v_21 then false else false;
  v_21 = (((down1 when true(ck_1)) when false(ck_2_1)) or v_20);
  v_20 = not(((c_rad1 when true(ck_1)) when false(ck_2_1)));
  v_19 =
    (((up2 when true(ck_1)) when false(ck_2_1)) &
     ((c_rad2 when true(ck_1)) when false(ck_2_1)));
  v_18 =
    (((up1 when true(ck_1)) when false(ck_2_1)) &
     ((c_rad1 when true(ck_1)) when false(ck_2_1)));
  v_22_2_1 = (v_22_2 when true(v_22_1));
  v_22_2_0 = (v_22_2 when false(v_22_1));
  v_24_2_1 = (v_24_2 when true(v_24_1));
  v_24_2_0 = (v_24_2 when false(v_24_1));
  r_St_3_Eco = if v_14 then true else v_17;
  s_St_3_Eco_1 = if v_14 then true else v_16_1;
  s_St_3_Eco_2 = if v_14 then false else v_16_2;
  v_17 = if v_15 then true else ((pnr when true(ck_1)) when true(ck_2_1));
  v_16_1 = if v_15 then false else true;
  v_16_2 = if v_15 then true else true;
  v_15 =
    (((up2 when true(ck_1)) when true(ck_2_1)) &
     ((c_rad2 when true(ck_1)) when true(ck_2_1)));
  v_14 = (((down1 when true(ck_1)) when true(ck_2_1)) or v_13);
  v_13 = not(((c_rad1 when true(ck_1)) when true(ck_2_1)));
  v_16_2_1 = (v_16_2 when true(v_16_1));
  v_16_2_0 = (v_16_2 when false(v_16_1));
  r_St_3_High = if v_8 then true else v_12;
  s_St_3_High_1 = if v_8 then true else v_11_1;
  s_St_3_High_2 = if v_8 then true else v_11_2;
  v_12 = if v_10 then true else ((pnr when false(ck_1)) when true(ck_2_0));
  v_11_1 = if v_10 then true else false;
  v_11_2 = if v_10 then false else true;
  v_10 = (((down2 when false(ck_1)) when true(ck_2_0)) or v_9);
  v_9 = not(((c_rad2 when false(ck_1)) when true(ck_2_0)));
  v_8 = (((down1 when false(ck_1)) when true(ck_2_0)) or v);
  v = not(((c_rad1 when false(ck_1)) when true(ck_2_0)));
  v_11_2_1 = (v_11_2 when true(v_11_1));
  v_11_2_0 = (v_11_2 when false(v_11_1));
  v_143 =
    merge ck_2_1 (true -> s_St_3_Eco_1)(false -> s_St_3_Frostprotection_1);
  v_144 =
    merge ck_2_1 (true -> s_St_3_Eco_2)(false -> s_St_3_Frostprotection_2);
  v_145 = merge ck_2_0 (true -> s_St_3_High_1)(false -> s_St_3_Off_1);
  v_146 = merge ck_2_0 (true -> s_St_3_High_2)(false -> s_St_3_Off_2);
  s_1 = merge ck_1 (true -> v_143)(false -> v_145);
  s_2 = merge ck_1 (true -> v_144)(false -> v_146);
  v_147 = merge ck_2_1 (true -> r_St_3_Eco)(false -> r_St_3_Frostprotection);
  v_148 = merge ck_2_0 (true -> r_St_3_High)(false -> r_St_3_Off);
  r = merge ck_1 (true -> v_147)(false -> v_148);
  ck_2_1 = (ck_2 when true(ck_1));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_3_Off_2_1 = (s_St_3_Off_2 when true(s_St_3_Off_1));
  s_St_3_Off_2_0 = (s_St_3_Off_2 when false(s_St_3_Off_1));
  s_St_3_Frostprotection_2_1 =
    (s_St_3_Frostprotection_2 when true(s_St_3_Frostprotection_1));
  s_St_3_Frostprotection_2_0 =
    (s_St_3_Frostprotection_2 when false(s_St_3_Frostprotection_1));
  s_St_3_Eco_2_1 = (s_St_3_Eco_2 when true(s_St_3_Eco_1));
  s_St_3_Eco_2_0 = (s_St_3_Eco_2 when false(s_St_3_Eco_1));
  s_St_3_High_2_1 = (s_St_3_High_2 when true(s_St_3_High_1));
  s_St_3_High_2_0 = (s_St_3_High_2 when false(s_St_3_High_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1))
tel

node washing_machine(start : bool; finish : bool; c_wash : bool)
returns (wash_power : int; wash_state : int)
var v_184 : bool; v_183 : bool; v_182 : bool; v_181 : bool; v_180 : bool;
    v_179 : bool; v_178 : bool; v_177 : bool; v_176 : bool; v_175 : bool;
    v_174 : bool; v_173 : bool; v_172 : bool; v_171 : bool; v_170 : bool;
    v_169 : bool; v_168 : bool; v_167 : bool; v_166 : bool; v_165 : bool;
    v_164 : bool; v_163 : bool; v_162 : bool; v_161 : bool; v_160 : int;
    v_159 : int; v_158 : int; v_157 : int; v_156 : int; v_155 : int;
    v_154 : int; v_153 : int; v_152 : int; v_151 : int; v_150 : int;
    v_149 : int; ns_St_4_Standby_2_0 : bool; ns_St_4_Standby_3_0_0 : bool;
    ns_St_4_Standby_3_0_1 : bool; ns_St_4_Standby_2_1 : bool;
    ns_St_4_Standby_3_1_0 : bool; ns_St_4_Standby_3_1_1 : bool;
    ns_St_4_Spin_2_0 : bool; ns_St_4_Spin_3_0_0 : bool;
    ns_St_4_Spin_3_0_1 : bool; ns_St_4_Spin_2_1 : bool;
    ns_St_4_Spin_3_1_0 : bool; ns_St_4_Spin_3_1_1 : bool;
    ns_St_4_Rinse_2_0 : bool; ns_St_4_Rinse_3_0_0 : bool;
    ns_St_4_Rinse_3_0_1 : bool; ns_St_4_Rinse_2_1 : bool;
    ns_St_4_Rinse_3_1_0 : bool; ns_St_4_Rinse_3_1_1 : bool;
    ns_St_4_Washing_2_0 : bool; ns_St_4_Washing_3_0_0 : bool;
    ns_St_4_Washing_3_0_1 : bool; ns_St_4_Washing_2_1 : bool;
    ns_St_4_Washing_3_1_0 : bool; ns_St_4_Washing_3_1_1 : bool;
    ns_St_4_Water_fill_2_0 : bool; ns_St_4_Water_fill_3_0_0 : bool;
    ns_St_4_Water_fill_3_0_1 : bool; ns_St_4_Water_fill_2_1 : bool;
    ns_St_4_Water_fill_3_1_0 : bool; ns_St_4_Water_fill_3_1_1 : bool;
    ns_St_4_Off_2_0 : bool; ns_St_4_Off_3_0_0 : bool;
    ns_St_4_Off_3_0_1 : bool; ns_St_4_Off_2_1 : bool;
    ns_St_4_Off_3_1_0 : bool; ns_St_4_Off_3_1_1 : bool; ck_5_2_0 : bool;
    ck_5_3_0_0 : bool; ck_5_3_0_1 : bool; ck_5_2_1 : bool; ck_5_3_1_0 : bool;
    ck_5_3_1_1 : bool; nr_St_4_Standby : bool; ns_St_4_Standby_3 : bool;
    ns_St_4_Standby_2 : bool; ns_St_4_Standby_1 : bool;
    wash_state_St_4_Standby : int; wash_power_St_4_Standby : int;
    nr_St_4_Spin : bool; ns_St_4_Spin_3 : bool; ns_St_4_Spin_2 : bool;
    ns_St_4_Spin_1 : bool; wash_state_St_4_Spin : int;
    wash_power_St_4_Spin : int; nr_St_4_Rinse : bool; ns_St_4_Rinse_3 : bool;
    ns_St_4_Rinse_2 : bool; ns_St_4_Rinse_1 : bool;
    wash_state_St_4_Rinse : int; wash_power_St_4_Rinse : int;
    nr_St_4_Washing : bool; ns_St_4_Washing_3 : bool;
    ns_St_4_Washing_2 : bool; ns_St_4_Washing_1 : bool;
    wash_state_St_4_Washing : int; wash_power_St_4_Washing : int;
    nr_St_4_Water_fill : bool; ns_St_4_Water_fill_3 : bool;
    ns_St_4_Water_fill_2 : bool; ns_St_4_Water_fill_1 : bool;
    wash_state_St_4_Water_fill : int; wash_power_St_4_Water_fill : int;
    nr_St_4_Off : bool; ns_St_4_Off_3 : bool; ns_St_4_Off_2 : bool;
    ns_St_4_Off_1 : bool; wash_state_St_4_Off : int;
    wash_power_St_4_Off : int; ck_5_3 : bool; ck_5_2 : bool; ck_5_1 : bool;
    v_30_2_0 : bool; v_30_3_0_0 : bool; v_30_3_0_1 : bool; v_30_2_1 : bool;
    v_30_3_1_0 : bool; v_30_3_1_1 : bool; v_31 : bool; v_30_3 : bool;
    v_30_2 : bool; v_30_1 : bool; v_29 : bool; v_28 : bool; v : bool;
    v_211 : bool; v_210 : bool; v_209 : bool; v_208 : bool; v_207 : bool;
    v_206 : bool; v_205 : bool; v_204 : bool; v_203 : bool; v_202 : bool;
    v_201 : bool; v_200 : bool; v_199 : bool; v_198 : bool; v_197 : bool;
    v_196 : bool; v_195 : bool; v_194 : bool; v_193 : bool; v_192 : bool;
    v_191 : bool; v_190 : bool; v_189 : bool; v_188 : bool; v_187 : bool;
    v_186 : bool; v_185 : bool; s_St_4_Standby_2_0 : bool;
    s_St_4_Standby_3_0_0 : bool; s_St_4_Standby_3_0_1 : bool;
    s_St_4_Standby_2_1 : bool; s_St_4_Standby_3_1_0 : bool;
    s_St_4_Standby_3_1_1 : bool; s_St_4_Spin_2_0 : bool;
    s_St_4_Spin_3_0_0 : bool; s_St_4_Spin_3_0_1 : bool;
    s_St_4_Spin_2_1 : bool; s_St_4_Spin_3_1_0 : bool;
    s_St_4_Spin_3_1_1 : bool; s_St_4_Rinse_2_0 : bool;
    s_St_4_Rinse_3_0_0 : bool; s_St_4_Rinse_3_0_1 : bool;
    s_St_4_Rinse_2_1 : bool; s_St_4_Rinse_3_1_0 : bool;
    s_St_4_Rinse_3_1_1 : bool; s_St_4_Washing_2_0 : bool;
    s_St_4_Washing_3_0_0 : bool; s_St_4_Washing_3_0_1 : bool;
    s_St_4_Washing_2_1 : bool; s_St_4_Washing_3_1_0 : bool;
    s_St_4_Washing_3_1_1 : bool; s_St_4_Water_fill_2_0 : bool;
    s_St_4_Water_fill_3_0_0 : bool; s_St_4_Water_fill_3_0_1 : bool;
    s_St_4_Water_fill_2_1 : bool; s_St_4_Water_fill_3_1_0 : bool;
    s_St_4_Water_fill_3_1_1 : bool; s_St_4_Off_2_0 : bool;
    s_St_4_Off_3_0_0 : bool; s_St_4_Off_3_0_1 : bool; s_St_4_Off_2_1 : bool;
    s_St_4_Off_3_1_0 : bool; s_St_4_Off_3_1_1 : bool; ck_2_0 : bool;
    ck_3_0_0 : bool; ck_3_0_1 : bool; ck_2_1 : bool; ck_3_1_0 : bool;
    ck_3_1_1 : bool; r_St_4_Standby : bool; s_St_4_Standby_3 : bool;
    s_St_4_Standby_2 : bool; s_St_4_Standby_1 : bool; r_St_4_Spin : bool;
    s_St_4_Spin_3 : bool; s_St_4_Spin_2 : bool; s_St_4_Spin_1 : bool;
    r_St_4_Rinse : bool; s_St_4_Rinse_3 : bool; s_St_4_Rinse_2 : bool;
    s_St_4_Rinse_1 : bool; r_St_4_Washing : bool; s_St_4_Washing_3 : bool;
    s_St_4_Washing_2 : bool; s_St_4_Washing_1 : bool;
    r_St_4_Water_fill : bool; s_St_4_Water_fill_3 : bool;
    s_St_4_Water_fill_2 : bool; s_St_4_Water_fill_1 : bool;
    r_St_4_Off : bool; s_St_4_Off_3 : bool; s_St_4_Off_2 : bool;
    s_St_4_Off_1 : bool; ck_3 : bool; ck_2 : bool; ck_1 : bool; s_2_0 : bool;
    s_3_0_0 : bool; s_3_0_1 : bool; s_2_1 : bool; s_3_1_0 : bool;
    s_3_1_1 : bool; ns_2_0 : bool; ns_3_0_0 : bool; ns_3_0_1 : bool;
    ns_2_1 : bool; ns_3_1_0 : bool; ns_3_1_1 : bool; s_3 : bool; s_2 : bool;
    s_1 : bool; ns_3 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool;
    pnr : bool;
let
  pnr = false fby nr;
  ck_5_1 = s_1;
  ck_5_2 = s_2;
  ck_5_3 = s_3;
  wash_power_St_4_Off = 0;
  wash_state_St_4_Off = 0;
  nr_St_4_Off = false;
  ns_St_4_Off_1 = true;
  ns_St_4_Off_2 = true;
  ns_St_4_Off_3 = true;
  wash_power_St_4_Water_fill = 15;
  wash_state_St_4_Water_fill = 1;
  nr_St_4_Water_fill = false;
  ns_St_4_Water_fill_1 = false;
  ns_St_4_Water_fill_2 = false;
  ns_St_4_Water_fill_3 = false;
  wash_power_St_4_Washing = 250;
  wash_state_St_4_Washing = 2;
  nr_St_4_Washing = false;
  ns_St_4_Washing_1 = false;
  ns_St_4_Washing_2 = true;
  ns_St_4_Washing_3 = false;
  wash_power_St_4_Rinse = 200;
  wash_state_St_4_Rinse = 3;
  nr_St_4_Rinse = false;
  ns_St_4_Rinse_1 = true;
  ns_St_4_Rinse_2 = true;
  ns_St_4_Rinse_3 = false;
  wash_power_St_4_Spin = 800;
  wash_state_St_4_Spin = 4;
  nr_St_4_Spin = false;
  ns_St_4_Spin_1 = true;
  ns_St_4_Spin_2 = false;
  ns_St_4_Spin_3 = false;
  wash_power_St_4_Standby = 0;
  wash_state_St_4_Standby = 5;
  nr_St_4_Standby = false;
  ns_St_4_Standby_1 = false;
  ns_St_4_Standby_2 = true;
  ns_St_4_Standby_3 = true;
  v_149 =
    merge ck_5_3_1_1
      (true -> wash_power_St_4_Off)(false -> wash_power_St_4_Rinse);
  v_150 =
    merge ck_5_3_1_0
      (true -> 
        (((0 when true(ck_5_1)) when false(ck_5_2_1)) when true(ck_5_3_1_0)))
      (false -> wash_power_St_4_Spin);
  v_151 = merge ck_5_2_1 (true -> v_149)(false -> v_150);
  v_152 =
    merge ck_5_3_0_1
      (true -> wash_power_St_4_Standby)(false -> wash_power_St_4_Washing);
  v_153 =
    merge ck_5_3_0_0
      (true -> 
        (((0 when false(ck_5_1)) when false(ck_5_2_0)) when true(ck_5_3_0_0)))
      (false -> wash_power_St_4_Water_fill);
  v_154 = merge ck_5_2_0 (true -> v_152)(false -> v_153);
  wash_power = merge ck_5_1 (true -> v_151)(false -> v_154);
  v_155 =
    merge ck_5_3_1_1
      (true -> wash_state_St_4_Off)(false -> wash_state_St_4_Rinse);
  v_156 =
    merge ck_5_3_1_0
      (true -> 
        (((0 when true(ck_5_1)) when false(ck_5_2_1)) when true(ck_5_3_1_0)))
      (false -> wash_state_St_4_Spin);
  v_157 = merge ck_5_2_1 (true -> v_155)(false -> v_156);
  v_158 =
    merge ck_5_3_0_1
      (true -> wash_state_St_4_Standby)(false -> wash_state_St_4_Washing);
  v_159 =
    merge ck_5_3_0_0
      (true -> 
        (((0 when false(ck_5_1)) when false(ck_5_2_0)) when true(ck_5_3_0_0)))
      (false -> wash_state_St_4_Water_fill);
  v_160 = merge ck_5_2_0 (true -> v_158)(false -> v_159);
  wash_state = merge ck_5_1 (true -> v_157)(false -> v_160);
  v_161 = merge ck_5_3_1_1 (true -> ns_St_4_Off_1)(false -> ns_St_4_Rinse_1);
  v_162 = merge ck_5_3_1_1 (true -> ns_St_4_Off_2)(false -> ns_St_4_Rinse_2);
  v_163 = merge ck_5_3_1_1 (true -> ns_St_4_Off_3)(false -> ns_St_4_Rinse_3);
  v_164 =
    merge ck_5_3_1_0
      (true -> 
        (((true when true(ck_5_1)) when false(ck_5_2_1))
          when true(ck_5_3_1_0)))
      (false -> ns_St_4_Spin_1);
  v_165 =
    merge ck_5_3_1_0
      (true -> 
        (((true when true(ck_5_1)) when false(ck_5_2_1))
          when true(ck_5_3_1_0)))
      (false -> ns_St_4_Spin_2);
  v_166 =
    merge ck_5_3_1_0
      (true -> 
        (((true when true(ck_5_1)) when false(ck_5_2_1))
          when true(ck_5_3_1_0)))
      (false -> ns_St_4_Spin_3);
  v_167 =
    merge ck_5_3_0_1 (true -> ns_St_4_Standby_1)(false -> ns_St_4_Washing_1);
  v_168 =
    merge ck_5_3_0_1 (true -> ns_St_4_Standby_2)(false -> ns_St_4_Washing_2);
  v_169 =
    merge ck_5_3_0_1 (true -> ns_St_4_Standby_3)(false -> ns_St_4_Washing_3);
  v_170 =
    merge ck_5_3_0_0
      (true -> 
        (((true when false(ck_5_1)) when false(ck_5_2_0))
          when true(ck_5_3_0_0)))
      (false -> ns_St_4_Water_fill_1);
  v_171 =
    merge ck_5_3_0_0
      (true -> 
        (((true when false(ck_5_1)) when false(ck_5_2_0))
          when true(ck_5_3_0_0)))
      (false -> ns_St_4_Water_fill_2);
  v_172 =
    merge ck_5_3_0_0
      (true -> 
        (((true when false(ck_5_1)) when false(ck_5_2_0))
          when true(ck_5_3_0_0)))
      (false -> ns_St_4_Water_fill_3);
  v_173 = merge ck_5_2_1 (true -> v_161)(false -> v_164);
  v_174 = merge ck_5_2_1 (true -> v_162)(false -> v_165);
  v_175 = merge ck_5_2_1 (true -> v_163)(false -> v_166);
  v_176 = merge ck_5_2_0 (true -> v_167)(false -> v_170);
  v_177 = merge ck_5_2_0 (true -> v_168)(false -> v_171);
  v_178 = merge ck_5_2_0 (true -> v_169)(false -> v_172);
  ns_1 = merge ck_5_1 (true -> v_173)(false -> v_176);
  ns_2 = merge ck_5_1 (true -> v_174)(false -> v_177);
  ns_3 = merge ck_5_1 (true -> v_175)(false -> v_178);
  v_179 = merge ck_5_3_1_1 (true -> nr_St_4_Off)(false -> nr_St_4_Rinse);
  v_180 =
    merge ck_5_3_1_0
      (true -> 
        (((true when true(ck_5_1)) when false(ck_5_2_1))
          when true(ck_5_3_1_0)))
      (false -> nr_St_4_Spin);
  v_181 = merge ck_5_2_1 (true -> v_179)(false -> v_180);
  v_182 =
    merge ck_5_3_0_1 (true -> nr_St_4_Standby)(false -> nr_St_4_Washing);
  v_183 =
    merge ck_5_3_0_0
      (true -> 
        (((true when false(ck_5_1)) when false(ck_5_2_0))
          when true(ck_5_3_0_0)))
      (false -> nr_St_4_Water_fill);
  v_184 = merge ck_5_2_0 (true -> v_182)(false -> v_183);
  nr = merge ck_5_1 (true -> v_181)(false -> v_184);
  ck_5_3_1_1 = ((ck_5_3 when true(ck_5_1)) when true(ck_5_2_1));
  ck_5_3_1_0 = ((ck_5_3 when true(ck_5_1)) when false(ck_5_2_1));
  ck_5_2_1 = (ck_5_2 when true(ck_5_1));
  ck_5_3_0_1 = ((ck_5_3 when false(ck_5_1)) when true(ck_5_2_0));
  ck_5_3_0_0 = ((ck_5_3 when false(ck_5_1)) when false(ck_5_2_0));
  ck_5_2_0 = (ck_5_2 when false(ck_5_1));
  ns_St_4_Off_3_1_1 =
    ((ns_St_4_Off_3 when true(ns_St_4_Off_1)) when true(ns_St_4_Off_2_1));
  ns_St_4_Off_3_1_0 =
    ((ns_St_4_Off_3 when true(ns_St_4_Off_1)) when false(ns_St_4_Off_2_1));
  ns_St_4_Off_2_1 = (ns_St_4_Off_2 when true(ns_St_4_Off_1));
  ns_St_4_Off_3_0_1 =
    ((ns_St_4_Off_3 when false(ns_St_4_Off_1)) when true(ns_St_4_Off_2_0));
  ns_St_4_Off_3_0_0 =
    ((ns_St_4_Off_3 when false(ns_St_4_Off_1)) when false(ns_St_4_Off_2_0));
  ns_St_4_Off_2_0 = (ns_St_4_Off_2 when false(ns_St_4_Off_1));
  ns_St_4_Water_fill_3_1_1 =
    ((ns_St_4_Water_fill_3 when true(ns_St_4_Water_fill_1))
      when true(ns_St_4_Water_fill_2_1));
  ns_St_4_Water_fill_3_1_0 =
    ((ns_St_4_Water_fill_3 when true(ns_St_4_Water_fill_1))
      when false(ns_St_4_Water_fill_2_1));
  ns_St_4_Water_fill_2_1 =
    (ns_St_4_Water_fill_2 when true(ns_St_4_Water_fill_1));
  ns_St_4_Water_fill_3_0_1 =
    ((ns_St_4_Water_fill_3 when false(ns_St_4_Water_fill_1))
      when true(ns_St_4_Water_fill_2_0));
  ns_St_4_Water_fill_3_0_0 =
    ((ns_St_4_Water_fill_3 when false(ns_St_4_Water_fill_1))
      when false(ns_St_4_Water_fill_2_0));
  ns_St_4_Water_fill_2_0 =
    (ns_St_4_Water_fill_2 when false(ns_St_4_Water_fill_1));
  ns_St_4_Washing_3_1_1 =
    ((ns_St_4_Washing_3 when true(ns_St_4_Washing_1))
      when true(ns_St_4_Washing_2_1));
  ns_St_4_Washing_3_1_0 =
    ((ns_St_4_Washing_3 when true(ns_St_4_Washing_1))
      when false(ns_St_4_Washing_2_1));
  ns_St_4_Washing_2_1 = (ns_St_4_Washing_2 when true(ns_St_4_Washing_1));
  ns_St_4_Washing_3_0_1 =
    ((ns_St_4_Washing_3 when false(ns_St_4_Washing_1))
      when true(ns_St_4_Washing_2_0));
  ns_St_4_Washing_3_0_0 =
    ((ns_St_4_Washing_3 when false(ns_St_4_Washing_1))
      when false(ns_St_4_Washing_2_0));
  ns_St_4_Washing_2_0 = (ns_St_4_Washing_2 when false(ns_St_4_Washing_1));
  ns_St_4_Rinse_3_1_1 =
    ((ns_St_4_Rinse_3 when true(ns_St_4_Rinse_1))
      when true(ns_St_4_Rinse_2_1));
  ns_St_4_Rinse_3_1_0 =
    ((ns_St_4_Rinse_3 when true(ns_St_4_Rinse_1))
      when false(ns_St_4_Rinse_2_1));
  ns_St_4_Rinse_2_1 = (ns_St_4_Rinse_2 when true(ns_St_4_Rinse_1));
  ns_St_4_Rinse_3_0_1 =
    ((ns_St_4_Rinse_3 when false(ns_St_4_Rinse_1))
      when true(ns_St_4_Rinse_2_0));
  ns_St_4_Rinse_3_0_0 =
    ((ns_St_4_Rinse_3 when false(ns_St_4_Rinse_1))
      when false(ns_St_4_Rinse_2_0));
  ns_St_4_Rinse_2_0 = (ns_St_4_Rinse_2 when false(ns_St_4_Rinse_1));
  ns_St_4_Spin_3_1_1 =
    ((ns_St_4_Spin_3 when true(ns_St_4_Spin_1)) when true(ns_St_4_Spin_2_1));
  ns_St_4_Spin_3_1_0 =
    ((ns_St_4_Spin_3 when true(ns_St_4_Spin_1)) when false(ns_St_4_Spin_2_1));
  ns_St_4_Spin_2_1 = (ns_St_4_Spin_2 when true(ns_St_4_Spin_1));
  ns_St_4_Spin_3_0_1 =
    ((ns_St_4_Spin_3 when false(ns_St_4_Spin_1)) when true(ns_St_4_Spin_2_0));
  ns_St_4_Spin_3_0_0 =
    ((ns_St_4_Spin_3 when false(ns_St_4_Spin_1))
      when false(ns_St_4_Spin_2_0));
  ns_St_4_Spin_2_0 = (ns_St_4_Spin_2 when false(ns_St_4_Spin_1));
  ns_St_4_Standby_3_1_1 =
    ((ns_St_4_Standby_3 when true(ns_St_4_Standby_1))
      when true(ns_St_4_Standby_2_1));
  ns_St_4_Standby_3_1_0 =
    ((ns_St_4_Standby_3 when true(ns_St_4_Standby_1))
      when false(ns_St_4_Standby_2_1));
  ns_St_4_Standby_2_1 = (ns_St_4_Standby_2 when true(ns_St_4_Standby_1));
  ns_St_4_Standby_3_0_1 =
    ((ns_St_4_Standby_3 when false(ns_St_4_Standby_1))
      when true(ns_St_4_Standby_2_0));
  ns_St_4_Standby_3_0_0 =
    ((ns_St_4_Standby_3 when false(ns_St_4_Standby_1))
      when false(ns_St_4_Standby_2_0));
  ns_St_4_Standby_2_0 = (ns_St_4_Standby_2 when false(ns_St_4_Standby_1));
  v_185 = true fby ns_1;
  v_186 = true fby ns_2;
  v_187 = true fby ns_3;
  ck_1 = v_185;
  ck_2 = v_186;
  ck_3 = v_187;
  r_St_4_Off =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1));
  s_St_4_Off_1 =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  s_St_4_Off_2 =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  s_St_4_Off_3 =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  r_St_4_Water_fill = if v_28 then true else v_31;
  s_St_4_Water_fill_1 = if v_28 then false else v_30_1;
  s_St_4_Water_fill_2 = if v_28 then true else v_30_2;
  s_St_4_Water_fill_3 = if v_28 then true else v_30_3;
  v_31 =
    if v_29
    then true
    else (((pnr when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0));
  v_30_1 = if v_29 then false else false;
  v_30_2 = if v_29 then true else false;
  v_30_3 = if v_29 then false else false;
  v_29 =
    ((((finish when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)) &
     (((c_wash when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)));
  v_28 =
    ((((finish when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)) &
     v);
  v =
    not
    ((((c_wash when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)));
  v_30_3_1_1 = ((v_30_3 when true(v_30_1)) when true(v_30_2_1));
  v_30_3_1_0 = ((v_30_3 when true(v_30_1)) when false(v_30_2_1));
  v_30_2_1 = (v_30_2 when true(v_30_1));
  v_30_3_0_1 = ((v_30_3 when false(v_30_1)) when true(v_30_2_0));
  v_30_3_0_0 = ((v_30_3 when false(v_30_1)) when false(v_30_2_0));
  v_30_2_0 = (v_30_2 when false(v_30_1));
  r_St_4_Washing =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else (((pnr when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1));
  s_St_4_Washing_1 =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else false;
  s_St_4_Washing_2 =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else true;
  s_St_4_Washing_3 =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then false
    else false;
  r_St_4_Rinse =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1));
  s_St_4_Rinse_1 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else true;
  s_St_4_Rinse_2 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else true;
  s_St_4_Rinse_3 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else false;
  r_St_4_Spin =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else (((pnr when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0));
  s_St_4_Spin_1 =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else true;
  s_St_4_Spin_2 =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else false;
  s_St_4_Spin_3 =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else false;
  r_St_4_Standby =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then true
    else (((pnr when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1));
  s_St_4_Standby_1 =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then false
    else false;
  s_St_4_Standby_2 =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then true
    else true;
  s_St_4_Standby_3 =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then false
    else true;
  v_188 = merge ck_3_1_1 (true -> s_St_4_Off_1)(false -> s_St_4_Rinse_1);
  v_189 = merge ck_3_1_1 (true -> s_St_4_Off_2)(false -> s_St_4_Rinse_2);
  v_190 = merge ck_3_1_1 (true -> s_St_4_Off_3)(false -> s_St_4_Rinse_3);
  v_191 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_4_Spin_1);
  v_192 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_4_Spin_2);
  v_193 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_4_Spin_3);
  v_194 =
    merge ck_3_0_1 (true -> s_St_4_Standby_1)(false -> s_St_4_Washing_1);
  v_195 =
    merge ck_3_0_1 (true -> s_St_4_Standby_2)(false -> s_St_4_Washing_2);
  v_196 =
    merge ck_3_0_1 (true -> s_St_4_Standby_3)(false -> s_St_4_Washing_3);
  v_197 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_4_Water_fill_1);
  v_198 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_4_Water_fill_2);
  v_199 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_4_Water_fill_3);
  v_200 = merge ck_2_1 (true -> v_188)(false -> v_191);
  v_201 = merge ck_2_1 (true -> v_189)(false -> v_192);
  v_202 = merge ck_2_1 (true -> v_190)(false -> v_193);
  v_203 = merge ck_2_0 (true -> v_194)(false -> v_197);
  v_204 = merge ck_2_0 (true -> v_195)(false -> v_198);
  v_205 = merge ck_2_0 (true -> v_196)(false -> v_199);
  s_1 = merge ck_1 (true -> v_200)(false -> v_203);
  s_2 = merge ck_1 (true -> v_201)(false -> v_204);
  s_3 = merge ck_1 (true -> v_202)(false -> v_205);
  v_206 = merge ck_3_1_1 (true -> r_St_4_Off)(false -> r_St_4_Rinse);
  v_207 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> r_St_4_Spin);
  v_208 = merge ck_2_1 (true -> v_206)(false -> v_207);
  v_209 = merge ck_3_0_1 (true -> r_St_4_Standby)(false -> r_St_4_Washing);
  v_210 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> r_St_4_Water_fill);
  v_211 = merge ck_2_0 (true -> v_209)(false -> v_210);
  r = merge ck_1 (true -> v_208)(false -> v_211);
  ck_3_1_1 = ((ck_3 when true(ck_1)) when true(ck_2_1));
  ck_3_1_0 = ((ck_3 when true(ck_1)) when false(ck_2_1));
  ck_2_1 = (ck_2 when true(ck_1));
  ck_3_0_1 = ((ck_3 when false(ck_1)) when true(ck_2_0));
  ck_3_0_0 = ((ck_3 when false(ck_1)) when false(ck_2_0));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_4_Off_3_1_1 =
    ((s_St_4_Off_3 when true(s_St_4_Off_1)) when true(s_St_4_Off_2_1));
  s_St_4_Off_3_1_0 =
    ((s_St_4_Off_3 when true(s_St_4_Off_1)) when false(s_St_4_Off_2_1));
  s_St_4_Off_2_1 = (s_St_4_Off_2 when true(s_St_4_Off_1));
  s_St_4_Off_3_0_1 =
    ((s_St_4_Off_3 when false(s_St_4_Off_1)) when true(s_St_4_Off_2_0));
  s_St_4_Off_3_0_0 =
    ((s_St_4_Off_3 when false(s_St_4_Off_1)) when false(s_St_4_Off_2_0));
  s_St_4_Off_2_0 = (s_St_4_Off_2 when false(s_St_4_Off_1));
  s_St_4_Water_fill_3_1_1 =
    ((s_St_4_Water_fill_3 when true(s_St_4_Water_fill_1))
      when true(s_St_4_Water_fill_2_1));
  s_St_4_Water_fill_3_1_0 =
    ((s_St_4_Water_fill_3 when true(s_St_4_Water_fill_1))
      when false(s_St_4_Water_fill_2_1));
  s_St_4_Water_fill_2_1 =
    (s_St_4_Water_fill_2 when true(s_St_4_Water_fill_1));
  s_St_4_Water_fill_3_0_1 =
    ((s_St_4_Water_fill_3 when false(s_St_4_Water_fill_1))
      when true(s_St_4_Water_fill_2_0));
  s_St_4_Water_fill_3_0_0 =
    ((s_St_4_Water_fill_3 when false(s_St_4_Water_fill_1))
      when false(s_St_4_Water_fill_2_0));
  s_St_4_Water_fill_2_0 =
    (s_St_4_Water_fill_2 when false(s_St_4_Water_fill_1));
  s_St_4_Washing_3_1_1 =
    ((s_St_4_Washing_3 when true(s_St_4_Washing_1))
      when true(s_St_4_Washing_2_1));
  s_St_4_Washing_3_1_0 =
    ((s_St_4_Washing_3 when true(s_St_4_Washing_1))
      when false(s_St_4_Washing_2_1));
  s_St_4_Washing_2_1 = (s_St_4_Washing_2 when true(s_St_4_Washing_1));
  s_St_4_Washing_3_0_1 =
    ((s_St_4_Washing_3 when false(s_St_4_Washing_1))
      when true(s_St_4_Washing_2_0));
  s_St_4_Washing_3_0_0 =
    ((s_St_4_Washing_3 when false(s_St_4_Washing_1))
      when false(s_St_4_Washing_2_0));
  s_St_4_Washing_2_0 = (s_St_4_Washing_2 when false(s_St_4_Washing_1));
  s_St_4_Rinse_3_1_1 =
    ((s_St_4_Rinse_3 when true(s_St_4_Rinse_1)) when true(s_St_4_Rinse_2_1));
  s_St_4_Rinse_3_1_0 =
    ((s_St_4_Rinse_3 when true(s_St_4_Rinse_1)) when false(s_St_4_Rinse_2_1));
  s_St_4_Rinse_2_1 = (s_St_4_Rinse_2 when true(s_St_4_Rinse_1));
  s_St_4_Rinse_3_0_1 =
    ((s_St_4_Rinse_3 when false(s_St_4_Rinse_1)) when true(s_St_4_Rinse_2_0));
  s_St_4_Rinse_3_0_0 =
    ((s_St_4_Rinse_3 when false(s_St_4_Rinse_1))
      when false(s_St_4_Rinse_2_0));
  s_St_4_Rinse_2_0 = (s_St_4_Rinse_2 when false(s_St_4_Rinse_1));
  s_St_4_Spin_3_1_1 =
    ((s_St_4_Spin_3 when true(s_St_4_Spin_1)) when true(s_St_4_Spin_2_1));
  s_St_4_Spin_3_1_0 =
    ((s_St_4_Spin_3 when true(s_St_4_Spin_1)) when false(s_St_4_Spin_2_1));
  s_St_4_Spin_2_1 = (s_St_4_Spin_2 when true(s_St_4_Spin_1));
  s_St_4_Spin_3_0_1 =
    ((s_St_4_Spin_3 when false(s_St_4_Spin_1)) when true(s_St_4_Spin_2_0));
  s_St_4_Spin_3_0_0 =
    ((s_St_4_Spin_3 when false(s_St_4_Spin_1)) when false(s_St_4_Spin_2_0));
  s_St_4_Spin_2_0 = (s_St_4_Spin_2 when false(s_St_4_Spin_1));
  s_St_4_Standby_3_1_1 =
    ((s_St_4_Standby_3 when true(s_St_4_Standby_1))
      when true(s_St_4_Standby_2_1));
  s_St_4_Standby_3_1_0 =
    ((s_St_4_Standby_3 when true(s_St_4_Standby_1))
      when false(s_St_4_Standby_2_1));
  s_St_4_Standby_2_1 = (s_St_4_Standby_2 when true(s_St_4_Standby_1));
  s_St_4_Standby_3_0_1 =
    ((s_St_4_Standby_3 when false(s_St_4_Standby_1))
      when true(s_St_4_Standby_2_0));
  s_St_4_Standby_3_0_0 =
    ((s_St_4_Standby_3 when false(s_St_4_Standby_1))
      when false(s_St_4_Standby_2_0));
  s_St_4_Standby_2_0 = (s_St_4_Standby_2 when false(s_St_4_Standby_1));
  ns_3_1_1 = ((ns_3 when true(ns_1)) when true(ns_2_1));
  ns_3_1_0 = ((ns_3 when true(ns_1)) when false(ns_2_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_3_0_1 = ((ns_3 when false(ns_1)) when true(ns_2_0));
  ns_3_0_0 = ((ns_3 when false(ns_1)) when false(ns_2_0));
  ns_2_0 = (ns_2 when false(ns_1));
  s_3_1_1 = ((s_3 when true(s_1)) when true(s_2_1));
  s_3_1_0 = ((s_3 when true(s_1)) when false(s_2_1));
  s_2_1 = (s_2 when true(s_1));
  s_3_0_1 = ((s_3 when false(s_1)) when true(s_2_0));
  s_3_0_0 = ((s_3 when false(s_1)) when false(s_2_0));
  s_2_0 = (s_2 when false(s_1))
tel

node oven(start : bool; finish : bool; temp_ok : bool; cold : bool;
           c_oven : bool)
returns (oven_power : int; oven_state : int)
var v_241 : bool; v_240 : bool; v_239 : bool; v_238 : bool; v_237 : bool;
    v_236 : bool; v_235 : bool; v_234 : bool; v_233 : bool; v_232 : bool;
    v_231 : bool; v_230 : bool; v_229 : bool; v_228 : bool; v_227 : bool;
    v_226 : bool; v_225 : bool; v_224 : bool; v_223 : bool; v_222 : bool;
    v_221 : int; v_220 : int; v_219 : int; v_218 : int; v_217 : int;
    v_216 : int; v_215 : int; v_214 : int; v_213 : int; v_212 : int;
    ns_St_5_Standby_2_0 : bool; ns_St_5_Standby_3_0_0 : bool;
    ns_St_5_Standby_3_0_1 : bool; ns_St_5_Standby_2_1 : bool;
    ns_St_5_Standby_3_1_0 : bool; ns_St_5_Standby_3_1_1 : bool;
    ns_St_5_Reheat_2_0 : bool; ns_St_5_Reheat_3_0_0 : bool;
    ns_St_5_Reheat_3_0_1 : bool; ns_St_5_Reheat_2_1 : bool;
    ns_St_5_Reheat_3_1_0 : bool; ns_St_5_Reheat_3_1_1 : bool;
    ns_St_5_Maintain_2_0 : bool; ns_St_5_Maintain_3_0_0 : bool;
    ns_St_5_Maintain_3_0_1 : bool; ns_St_5_Maintain_2_1 : bool;
    ns_St_5_Maintain_3_1_0 : bool; ns_St_5_Maintain_3_1_1 : bool;
    ns_St_5_Heat_2_0 : bool; ns_St_5_Heat_3_0_0 : bool;
    ns_St_5_Heat_3_0_1 : bool; ns_St_5_Heat_2_1 : bool;
    ns_St_5_Heat_3_1_0 : bool; ns_St_5_Heat_3_1_1 : bool;
    ns_St_5_Off_2_0 : bool; ns_St_5_Off_3_0_0 : bool;
    ns_St_5_Off_3_0_1 : bool; ns_St_5_Off_2_1 : bool;
    ns_St_5_Off_3_1_0 : bool; ns_St_5_Off_3_1_1 : bool; ck_6_2_0 : bool;
    ck_6_3_0_0 : bool; ck_6_3_0_1 : bool; ck_6_2_1 : bool; ck_6_3_1_0 : bool;
    ck_6_3_1_1 : bool; nr_St_5_Standby : bool; ns_St_5_Standby_3 : bool;
    ns_St_5_Standby_2 : bool; ns_St_5_Standby_1 : bool;
    oven_state_St_5_Standby : int; oven_power_St_5_Standby : int;
    nr_St_5_Reheat : bool; ns_St_5_Reheat_3 : bool; ns_St_5_Reheat_2 : bool;
    ns_St_5_Reheat_1 : bool; oven_state_St_5_Reheat : int;
    oven_power_St_5_Reheat : int; nr_St_5_Maintain : bool;
    ns_St_5_Maintain_3 : bool; ns_St_5_Maintain_2 : bool;
    ns_St_5_Maintain_1 : bool; oven_state_St_5_Maintain : int;
    oven_power_St_5_Maintain : int; nr_St_5_Heat : bool;
    ns_St_5_Heat_3 : bool; ns_St_5_Heat_2 : bool; ns_St_5_Heat_1 : bool;
    oven_state_St_5_Heat : int; oven_power_St_5_Heat : int;
    nr_St_5_Off : bool; ns_St_5_Off_3 : bool; ns_St_5_Off_2 : bool;
    ns_St_5_Off_1 : bool; oven_state_St_5_Off : int;
    oven_power_St_5_Off : int; ck_6_3 : bool; ck_6_2 : bool; ck_6_1 : bool;
    v_41_2_0 : bool; v_41_3_0_0 : bool; v_41_3_0_1 : bool; v_41_2_1 : bool;
    v_41_3_1_0 : bool; v_41_3_1_1 : bool; v_42 : bool; v_41_3 : bool;
    v_41_2 : bool; v_41_1 : bool; v_40 : bool; v_39 : bool; v_38 : bool;
    v_36_2_0 : bool; v_36_3_0_0 : bool; v_36_3_0_1 : bool; v_36_2_1 : bool;
    v_36_3_1_0 : bool; v_36_3_1_1 : bool; v_37 : bool; v_36_3 : bool;
    v_36_2 : bool; v_36_1 : bool; v_34_2_0 : bool; v_34_3_0_0 : bool;
    v_34_3_0_1 : bool; v_34_2_1 : bool; v_34_3_1_0 : bool; v_34_3_1_1 : bool;
    v_35 : bool; v_34_3 : bool; v_34_2 : bool; v_34_1 : bool; v_33 : bool;
    v_2_0 : bool; v_3_0_0 : bool; v_3_0_1 : bool; v_2_1 : bool;
    v_3_1_0 : bool; v_3_1_1 : bool; v_32 : bool; v_3 : bool; v_2 : bool;
    v_1 : bool; v_264 : bool; v_263 : bool; v_262 : bool; v_261 : bool;
    v_260 : bool; v_259 : bool; v_258 : bool; v_257 : bool; v_256 : bool;
    v_255 : bool; v_254 : bool; v_253 : bool; v_252 : bool; v_251 : bool;
    v_250 : bool; v_249 : bool; v_248 : bool; v_247 : bool; v_246 : bool;
    v_245 : bool; v_244 : bool; v_243 : bool; v_242 : bool;
    s_St_5_Standby_2_0 : bool; s_St_5_Standby_3_0_0 : bool;
    s_St_5_Standby_3_0_1 : bool; s_St_5_Standby_2_1 : bool;
    s_St_5_Standby_3_1_0 : bool; s_St_5_Standby_3_1_1 : bool;
    s_St_5_Reheat_2_0 : bool; s_St_5_Reheat_3_0_0 : bool;
    s_St_5_Reheat_3_0_1 : bool; s_St_5_Reheat_2_1 : bool;
    s_St_5_Reheat_3_1_0 : bool; s_St_5_Reheat_3_1_1 : bool;
    s_St_5_Maintain_2_0 : bool; s_St_5_Maintain_3_0_0 : bool;
    s_St_5_Maintain_3_0_1 : bool; s_St_5_Maintain_2_1 : bool;
    s_St_5_Maintain_3_1_0 : bool; s_St_5_Maintain_3_1_1 : bool;
    s_St_5_Heat_2_0 : bool; s_St_5_Heat_3_0_0 : bool;
    s_St_5_Heat_3_0_1 : bool; s_St_5_Heat_2_1 : bool;
    s_St_5_Heat_3_1_0 : bool; s_St_5_Heat_3_1_1 : bool;
    s_St_5_Off_2_0 : bool; s_St_5_Off_3_0_0 : bool; s_St_5_Off_3_0_1 : bool;
    s_St_5_Off_2_1 : bool; s_St_5_Off_3_1_0 : bool; s_St_5_Off_3_1_1 : bool;
    ck_2_0 : bool; ck_3_0_0 : bool; ck_3_0_1 : bool; ck_2_1 : bool;
    ck_3_1_0 : bool; ck_3_1_1 : bool; r_St_5_Standby : bool;
    s_St_5_Standby_3 : bool; s_St_5_Standby_2 : bool;
    s_St_5_Standby_1 : bool; r_St_5_Reheat : bool; s_St_5_Reheat_3 : bool;
    s_St_5_Reheat_2 : bool; s_St_5_Reheat_1 : bool; r_St_5_Maintain : bool;
    s_St_5_Maintain_3 : bool; s_St_5_Maintain_2 : bool;
    s_St_5_Maintain_1 : bool; r_St_5_Heat : bool; s_St_5_Heat_3 : bool;
    s_St_5_Heat_2 : bool; s_St_5_Heat_1 : bool; r_St_5_Off : bool;
    s_St_5_Off_3 : bool; s_St_5_Off_2 : bool; s_St_5_Off_1 : bool;
    ck_3 : bool; ck_2 : bool; ck_1 : bool; s_2_0 : bool; s_3_0_0 : bool;
    s_3_0_1 : bool; s_2_1 : bool; s_3_1_0 : bool; s_3_1_1 : bool;
    ns_2_0 : bool; ns_3_0_0 : bool; ns_3_0_1 : bool; ns_2_1 : bool;
    ns_3_1_0 : bool; ns_3_1_1 : bool; s_3 : bool; s_2 : bool; s_1 : bool;
    ns_3 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_6_1 = s_1;
  ck_6_2 = s_2;
  ck_6_3 = s_3;
  oven_power_St_5_Off = 0;
  oven_state_St_5_Off = 0;
  nr_St_5_Off = false;
  ns_St_5_Off_1 = true;
  ns_St_5_Off_2 = false;
  ns_St_5_Off_3 = false;
  oven_power_St_5_Heat = 1500;
  oven_state_St_5_Heat = 1;
  nr_St_5_Heat = false;
  ns_St_5_Heat_1 = true;
  ns_St_5_Heat_2 = true;
  ns_St_5_Heat_3 = true;
  oven_power_St_5_Maintain = 300;
  oven_state_St_5_Maintain = 2;
  nr_St_5_Maintain = false;
  ns_St_5_Maintain_1 = true;
  ns_St_5_Maintain_2 = true;
  ns_St_5_Maintain_3 = false;
  oven_power_St_5_Reheat = 1000;
  oven_state_St_5_Reheat = 3;
  nr_St_5_Reheat = false;
  ns_St_5_Reheat_1 = false;
  ns_St_5_Reheat_2 = false;
  ns_St_5_Reheat_3 = true;
  oven_power_St_5_Standby = 0;
  oven_state_St_5_Standby = 4;
  nr_St_5_Standby = false;
  ns_St_5_Standby_1 = false;
  ns_St_5_Standby_2 = false;
  ns_St_5_Standby_3 = false;
  v_212 =
    merge ck_6_3_1_1
      (true -> oven_power_St_5_Heat)(false -> oven_power_St_5_Maintain);
  v_213 =
    merge ck_6_3_1_0
      (true -> 
        (((0 when true(ck_6_1)) when false(ck_6_2_1)) when true(ck_6_3_1_0)))
      (false -> oven_power_St_5_Off);
  v_214 = merge ck_6_2_1 (true -> v_212)(false -> v_213);
  v_215 =
    merge ck_6_3_0_0
      (true -> oven_power_St_5_Reheat)(false -> oven_power_St_5_Standby);
  v_216 =
    merge ck_6_2_0
      (true -> ((0 when false(ck_6_1)) when true(ck_6_2_0)))(false -> v_215);
  oven_power = merge ck_6_1 (true -> v_214)(false -> v_216);
  v_217 =
    merge ck_6_3_1_1
      (true -> oven_state_St_5_Heat)(false -> oven_state_St_5_Maintain);
  v_218 =
    merge ck_6_3_1_0
      (true -> 
        (((0 when true(ck_6_1)) when false(ck_6_2_1)) when true(ck_6_3_1_0)))
      (false -> oven_state_St_5_Off);
  v_219 = merge ck_6_2_1 (true -> v_217)(false -> v_218);
  v_220 =
    merge ck_6_3_0_0
      (true -> oven_state_St_5_Reheat)(false -> oven_state_St_5_Standby);
  v_221 =
    merge ck_6_2_0
      (true -> ((0 when false(ck_6_1)) when true(ck_6_2_0)))(false -> v_220);
  oven_state = merge ck_6_1 (true -> v_219)(false -> v_221);
  v_222 =
    merge ck_6_3_1_1 (true -> ns_St_5_Heat_1)(false -> ns_St_5_Maintain_1);
  v_223 =
    merge ck_6_3_1_1 (true -> ns_St_5_Heat_2)(false -> ns_St_5_Maintain_2);
  v_224 =
    merge ck_6_3_1_1 (true -> ns_St_5_Heat_3)(false -> ns_St_5_Maintain_3);
  v_225 =
    merge ck_6_3_1_0
      (true -> 
        (((true when true(ck_6_1)) when false(ck_6_2_1))
          when true(ck_6_3_1_0)))
      (false -> ns_St_5_Off_1);
  v_226 =
    merge ck_6_3_1_0
      (true -> 
        (((true when true(ck_6_1)) when false(ck_6_2_1))
          when true(ck_6_3_1_0)))
      (false -> ns_St_5_Off_2);
  v_227 =
    merge ck_6_3_1_0
      (true -> 
        (((true when true(ck_6_1)) when false(ck_6_2_1))
          when true(ck_6_3_1_0)))
      (false -> ns_St_5_Off_3);
  v_228 =
    merge ck_6_3_0_0 (true -> ns_St_5_Reheat_1)(false -> ns_St_5_Standby_1);
  v_229 =
    merge ck_6_3_0_0 (true -> ns_St_5_Reheat_2)(false -> ns_St_5_Standby_2);
  v_230 =
    merge ck_6_3_0_0 (true -> ns_St_5_Reheat_3)(false -> ns_St_5_Standby_3);
  v_231 = merge ck_6_2_1 (true -> v_222)(false -> v_225);
  v_232 = merge ck_6_2_1 (true -> v_223)(false -> v_226);
  v_233 = merge ck_6_2_1 (true -> v_224)(false -> v_227);
  v_234 =
    merge ck_6_2_0
      (true -> ((true when false(ck_6_1)) when true(ck_6_2_0)))
      (false -> v_228);
  v_235 =
    merge ck_6_2_0
      (true -> ((true when false(ck_6_1)) when true(ck_6_2_0)))
      (false -> v_229);
  v_236 =
    merge ck_6_2_0
      (true -> ((true when false(ck_6_1)) when true(ck_6_2_0)))
      (false -> v_230);
  ns_1 = merge ck_6_1 (true -> v_231)(false -> v_234);
  ns_2 = merge ck_6_1 (true -> v_232)(false -> v_235);
  ns_3 = merge ck_6_1 (true -> v_233)(false -> v_236);
  v_237 = merge ck_6_3_1_1 (true -> nr_St_5_Heat)(false -> nr_St_5_Maintain);
  v_238 =
    merge ck_6_3_1_0
      (true -> 
        (((true when true(ck_6_1)) when false(ck_6_2_1))
          when true(ck_6_3_1_0)))
      (false -> nr_St_5_Off);
  v_239 = merge ck_6_2_1 (true -> v_237)(false -> v_238);
  v_240 = merge ck_6_3_0_0 (true -> nr_St_5_Reheat)(false -> nr_St_5_Standby);
  v_241 =
    merge ck_6_2_0
      (true -> ((true when false(ck_6_1)) when true(ck_6_2_0)))
      (false -> v_240);
  nr = merge ck_6_1 (true -> v_239)(false -> v_241);
  ck_6_3_1_1 = ((ck_6_3 when true(ck_6_1)) when true(ck_6_2_1));
  ck_6_3_1_0 = ((ck_6_3 when true(ck_6_1)) when false(ck_6_2_1));
  ck_6_2_1 = (ck_6_2 when true(ck_6_1));
  ck_6_3_0_1 = ((ck_6_3 when false(ck_6_1)) when true(ck_6_2_0));
  ck_6_3_0_0 = ((ck_6_3 when false(ck_6_1)) when false(ck_6_2_0));
  ck_6_2_0 = (ck_6_2 when false(ck_6_1));
  ns_St_5_Off_3_1_1 =
    ((ns_St_5_Off_3 when true(ns_St_5_Off_1)) when true(ns_St_5_Off_2_1));
  ns_St_5_Off_3_1_0 =
    ((ns_St_5_Off_3 when true(ns_St_5_Off_1)) when false(ns_St_5_Off_2_1));
  ns_St_5_Off_2_1 = (ns_St_5_Off_2 when true(ns_St_5_Off_1));
  ns_St_5_Off_3_0_1 =
    ((ns_St_5_Off_3 when false(ns_St_5_Off_1)) when true(ns_St_5_Off_2_0));
  ns_St_5_Off_3_0_0 =
    ((ns_St_5_Off_3 when false(ns_St_5_Off_1)) when false(ns_St_5_Off_2_0));
  ns_St_5_Off_2_0 = (ns_St_5_Off_2 when false(ns_St_5_Off_1));
  ns_St_5_Heat_3_1_1 =
    ((ns_St_5_Heat_3 when true(ns_St_5_Heat_1)) when true(ns_St_5_Heat_2_1));
  ns_St_5_Heat_3_1_0 =
    ((ns_St_5_Heat_3 when true(ns_St_5_Heat_1)) when false(ns_St_5_Heat_2_1));
  ns_St_5_Heat_2_1 = (ns_St_5_Heat_2 when true(ns_St_5_Heat_1));
  ns_St_5_Heat_3_0_1 =
    ((ns_St_5_Heat_3 when false(ns_St_5_Heat_1)) when true(ns_St_5_Heat_2_0));
  ns_St_5_Heat_3_0_0 =
    ((ns_St_5_Heat_3 when false(ns_St_5_Heat_1))
      when false(ns_St_5_Heat_2_0));
  ns_St_5_Heat_2_0 = (ns_St_5_Heat_2 when false(ns_St_5_Heat_1));
  ns_St_5_Maintain_3_1_1 =
    ((ns_St_5_Maintain_3 when true(ns_St_5_Maintain_1))
      when true(ns_St_5_Maintain_2_1));
  ns_St_5_Maintain_3_1_0 =
    ((ns_St_5_Maintain_3 when true(ns_St_5_Maintain_1))
      when false(ns_St_5_Maintain_2_1));
  ns_St_5_Maintain_2_1 = (ns_St_5_Maintain_2 when true(ns_St_5_Maintain_1));
  ns_St_5_Maintain_3_0_1 =
    ((ns_St_5_Maintain_3 when false(ns_St_5_Maintain_1))
      when true(ns_St_5_Maintain_2_0));
  ns_St_5_Maintain_3_0_0 =
    ((ns_St_5_Maintain_3 when false(ns_St_5_Maintain_1))
      when false(ns_St_5_Maintain_2_0));
  ns_St_5_Maintain_2_0 = (ns_St_5_Maintain_2 when false(ns_St_5_Maintain_1));
  ns_St_5_Reheat_3_1_1 =
    ((ns_St_5_Reheat_3 when true(ns_St_5_Reheat_1))
      when true(ns_St_5_Reheat_2_1));
  ns_St_5_Reheat_3_1_0 =
    ((ns_St_5_Reheat_3 when true(ns_St_5_Reheat_1))
      when false(ns_St_5_Reheat_2_1));
  ns_St_5_Reheat_2_1 = (ns_St_5_Reheat_2 when true(ns_St_5_Reheat_1));
  ns_St_5_Reheat_3_0_1 =
    ((ns_St_5_Reheat_3 when false(ns_St_5_Reheat_1))
      when true(ns_St_5_Reheat_2_0));
  ns_St_5_Reheat_3_0_0 =
    ((ns_St_5_Reheat_3 when false(ns_St_5_Reheat_1))
      when false(ns_St_5_Reheat_2_0));
  ns_St_5_Reheat_2_0 = (ns_St_5_Reheat_2 when false(ns_St_5_Reheat_1));
  ns_St_5_Standby_3_1_1 =
    ((ns_St_5_Standby_3 when true(ns_St_5_Standby_1))
      when true(ns_St_5_Standby_2_1));
  ns_St_5_Standby_3_1_0 =
    ((ns_St_5_Standby_3 when true(ns_St_5_Standby_1))
      when false(ns_St_5_Standby_2_1));
  ns_St_5_Standby_2_1 = (ns_St_5_Standby_2 when true(ns_St_5_Standby_1));
  ns_St_5_Standby_3_0_1 =
    ((ns_St_5_Standby_3 when false(ns_St_5_Standby_1))
      when true(ns_St_5_Standby_2_0));
  ns_St_5_Standby_3_0_0 =
    ((ns_St_5_Standby_3 when false(ns_St_5_Standby_1))
      when false(ns_St_5_Standby_2_0));
  ns_St_5_Standby_2_0 = (ns_St_5_Standby_2 when false(ns_St_5_Standby_1));
  v_242 = true fby ns_1;
  v_243 = false fby ns_2;
  v_244 = false fby ns_3;
  ck_1 = v_242;
  ck_2 = v_243;
  ck_3 = v_244;
  r_St_5_Off = if v_38 then true else v_42;
  s_St_5_Off_1 = if v_38 then true else v_41_1;
  s_St_5_Off_2 = if v_38 then true else v_41_2;
  s_St_5_Off_3 = if v_38 then true else v_41_3;
  v_42 =
    if v_40
    then true
    else (((pnr when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0));
  v_41_1 = if v_40 then false else true;
  v_41_2 = if v_40 then false else false;
  v_41_3 = if v_40 then false else false;
  v_40 =
    ((((start when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)) &
     v_39);
  v_39 =
    not((((c_oven when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)));
  v_38 =
    ((((start when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)) &
     (((c_oven when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)));
  v_41_3_1_1 = ((v_41_3 when true(v_41_1)) when true(v_41_2_1));
  v_41_3_1_0 = ((v_41_3 when true(v_41_1)) when false(v_41_2_1));
  v_41_2_1 = (v_41_2 when true(v_41_1));
  v_41_3_0_1 = ((v_41_3 when false(v_41_1)) when true(v_41_2_0));
  v_41_3_0_0 = ((v_41_3 when false(v_41_1)) when false(v_41_2_0));
  v_41_2_0 = (v_41_2 when false(v_41_1));
  r_St_5_Heat =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else v_37;
  s_St_5_Heat_1 =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else v_36_1;
  s_St_5_Heat_2 =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else v_36_2;
  s_St_5_Heat_3 =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else v_36_3;
  v_37 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1));
  v_36_1 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else true;
  v_36_2 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  v_36_3 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  v_36_3_1_1 = ((v_36_3 when true(v_36_1)) when true(v_36_2_1));
  v_36_3_1_0 = ((v_36_3 when true(v_36_1)) when false(v_36_2_1));
  v_36_2_1 = (v_36_2 when true(v_36_1));
  v_36_3_0_1 = ((v_36_3 when false(v_36_1)) when true(v_36_2_0));
  v_36_3_0_0 = ((v_36_3 when false(v_36_1)) when false(v_36_2_0));
  v_36_2_0 = (v_36_2 when false(v_36_1));
  r_St_5_Maintain = if v_33 then true else v_35;
  s_St_5_Maintain_1 = if v_33 then false else v_34_1;
  s_St_5_Maintain_2 = if v_33 then false else v_34_2;
  s_St_5_Maintain_3 = if v_33 then true else v_34_3;
  v_35 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1));
  v_34_1 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else true;
  v_34_2 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else true;
  v_34_3 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else false;
  v_33 =
    ((((cold when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1)) &
     (((c_oven when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1)));
  v_34_3_1_1 = ((v_34_3 when true(v_34_1)) when true(v_34_2_1));
  v_34_3_1_0 = ((v_34_3 when true(v_34_1)) when false(v_34_2_1));
  v_34_2_1 = (v_34_2 when true(v_34_1));
  v_34_3_0_1 = ((v_34_3 when false(v_34_1)) when true(v_34_2_0));
  v_34_3_0_0 = ((v_34_3 when false(v_34_1)) when false(v_34_2_0));
  v_34_2_0 = (v_34_2 when false(v_34_1));
  r_St_5_Reheat =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else v_32;
  s_St_5_Reheat_1 =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else v_1;
  s_St_5_Reheat_2 =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else v_2;
  s_St_5_Reheat_3 =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then false
    else v_3;
  v_32 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else (((pnr when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0));
  v_1 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else false;
  v_2 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then false
    else false;
  v_3 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then false
    else true;
  v_3_1_1 = ((v_3 when true(v_1)) when true(v_2_1));
  v_3_1_0 = ((v_3 when true(v_1)) when false(v_2_1));
  v_2_1 = (v_2 when true(v_1));
  v_3_0_1 = ((v_3 when false(v_1)) when true(v_2_0));
  v_3_0_0 = ((v_3 when false(v_1)) when false(v_2_0));
  v_2_0 = (v_2 when false(v_1));
  r_St_5_Standby =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else (((pnr when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0));
  s_St_5_Standby_1 =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else false;
  s_St_5_Standby_2 =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else false;
  s_St_5_Standby_3 =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else false;
  v_245 = merge ck_3_1_1 (true -> s_St_5_Heat_1)(false -> s_St_5_Maintain_1);
  v_246 = merge ck_3_1_1 (true -> s_St_5_Heat_2)(false -> s_St_5_Maintain_2);
  v_247 = merge ck_3_1_1 (true -> s_St_5_Heat_3)(false -> s_St_5_Maintain_3);
  v_248 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_5_Off_1);
  v_249 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_5_Off_2);
  v_250 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_5_Off_3);
  v_251 = merge ck_3_0_0 (true -> s_St_5_Reheat_1)(false -> s_St_5_Standby_1);
  v_252 = merge ck_3_0_0 (true -> s_St_5_Reheat_2)(false -> s_St_5_Standby_2);
  v_253 = merge ck_3_0_0 (true -> s_St_5_Reheat_3)(false -> s_St_5_Standby_3);
  v_254 = merge ck_2_1 (true -> v_245)(false -> v_248);
  v_255 = merge ck_2_1 (true -> v_246)(false -> v_249);
  v_256 = merge ck_2_1 (true -> v_247)(false -> v_250);
  v_257 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_251);
  v_258 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_252);
  v_259 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_253);
  s_1 = merge ck_1 (true -> v_254)(false -> v_257);
  s_2 = merge ck_1 (true -> v_255)(false -> v_258);
  s_3 = merge ck_1 (true -> v_256)(false -> v_259);
  v_260 = merge ck_3_1_1 (true -> r_St_5_Heat)(false -> r_St_5_Maintain);
  v_261 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> r_St_5_Off);
  v_262 = merge ck_2_1 (true -> v_260)(false -> v_261);
  v_263 = merge ck_3_0_0 (true -> r_St_5_Reheat)(false -> r_St_5_Standby);
  v_264 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_263);
  r = merge ck_1 (true -> v_262)(false -> v_264);
  ck_3_1_1 = ((ck_3 when true(ck_1)) when true(ck_2_1));
  ck_3_1_0 = ((ck_3 when true(ck_1)) when false(ck_2_1));
  ck_2_1 = (ck_2 when true(ck_1));
  ck_3_0_1 = ((ck_3 when false(ck_1)) when true(ck_2_0));
  ck_3_0_0 = ((ck_3 when false(ck_1)) when false(ck_2_0));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_5_Off_3_1_1 =
    ((s_St_5_Off_3 when true(s_St_5_Off_1)) when true(s_St_5_Off_2_1));
  s_St_5_Off_3_1_0 =
    ((s_St_5_Off_3 when true(s_St_5_Off_1)) when false(s_St_5_Off_2_1));
  s_St_5_Off_2_1 = (s_St_5_Off_2 when true(s_St_5_Off_1));
  s_St_5_Off_3_0_1 =
    ((s_St_5_Off_3 when false(s_St_5_Off_1)) when true(s_St_5_Off_2_0));
  s_St_5_Off_3_0_0 =
    ((s_St_5_Off_3 when false(s_St_5_Off_1)) when false(s_St_5_Off_2_0));
  s_St_5_Off_2_0 = (s_St_5_Off_2 when false(s_St_5_Off_1));
  s_St_5_Heat_3_1_1 =
    ((s_St_5_Heat_3 when true(s_St_5_Heat_1)) when true(s_St_5_Heat_2_1));
  s_St_5_Heat_3_1_0 =
    ((s_St_5_Heat_3 when true(s_St_5_Heat_1)) when false(s_St_5_Heat_2_1));
  s_St_5_Heat_2_1 = (s_St_5_Heat_2 when true(s_St_5_Heat_1));
  s_St_5_Heat_3_0_1 =
    ((s_St_5_Heat_3 when false(s_St_5_Heat_1)) when true(s_St_5_Heat_2_0));
  s_St_5_Heat_3_0_0 =
    ((s_St_5_Heat_3 when false(s_St_5_Heat_1)) when false(s_St_5_Heat_2_0));
  s_St_5_Heat_2_0 = (s_St_5_Heat_2 when false(s_St_5_Heat_1));
  s_St_5_Maintain_3_1_1 =
    ((s_St_5_Maintain_3 when true(s_St_5_Maintain_1))
      when true(s_St_5_Maintain_2_1));
  s_St_5_Maintain_3_1_0 =
    ((s_St_5_Maintain_3 when true(s_St_5_Maintain_1))
      when false(s_St_5_Maintain_2_1));
  s_St_5_Maintain_2_1 = (s_St_5_Maintain_2 when true(s_St_5_Maintain_1));
  s_St_5_Maintain_3_0_1 =
    ((s_St_5_Maintain_3 when false(s_St_5_Maintain_1))
      when true(s_St_5_Maintain_2_0));
  s_St_5_Maintain_3_0_0 =
    ((s_St_5_Maintain_3 when false(s_St_5_Maintain_1))
      when false(s_St_5_Maintain_2_0));
  s_St_5_Maintain_2_0 = (s_St_5_Maintain_2 when false(s_St_5_Maintain_1));
  s_St_5_Reheat_3_1_1 =
    ((s_St_5_Reheat_3 when true(s_St_5_Reheat_1))
      when true(s_St_5_Reheat_2_1));
  s_St_5_Reheat_3_1_0 =
    ((s_St_5_Reheat_3 when true(s_St_5_Reheat_1))
      when false(s_St_5_Reheat_2_1));
  s_St_5_Reheat_2_1 = (s_St_5_Reheat_2 when true(s_St_5_Reheat_1));
  s_St_5_Reheat_3_0_1 =
    ((s_St_5_Reheat_3 when false(s_St_5_Reheat_1))
      when true(s_St_5_Reheat_2_0));
  s_St_5_Reheat_3_0_0 =
    ((s_St_5_Reheat_3 when false(s_St_5_Reheat_1))
      when false(s_St_5_Reheat_2_0));
  s_St_5_Reheat_2_0 = (s_St_5_Reheat_2 when false(s_St_5_Reheat_1));
  s_St_5_Standby_3_1_1 =
    ((s_St_5_Standby_3 when true(s_St_5_Standby_1))
      when true(s_St_5_Standby_2_1));
  s_St_5_Standby_3_1_0 =
    ((s_St_5_Standby_3 when true(s_St_5_Standby_1))
      when false(s_St_5_Standby_2_1));
  s_St_5_Standby_2_1 = (s_St_5_Standby_2 when true(s_St_5_Standby_1));
  s_St_5_Standby_3_0_1 =
    ((s_St_5_Standby_3 when false(s_St_5_Standby_1))
      when true(s_St_5_Standby_2_0));
  s_St_5_Standby_3_0_0 =
    ((s_St_5_Standby_3 when false(s_St_5_Standby_1))
      when false(s_St_5_Standby_2_0));
  s_St_5_Standby_2_0 = (s_St_5_Standby_2 when false(s_St_5_Standby_1));
  ns_3_1_1 = ((ns_3 when true(ns_1)) when true(ns_2_1));
  ns_3_1_0 = ((ns_3 when true(ns_1)) when false(ns_2_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_3_0_1 = ((ns_3 when false(ns_1)) when true(ns_2_0));
  ns_3_0_0 = ((ns_3 when false(ns_1)) when false(ns_2_0));
  ns_2_0 = (ns_2 when false(ns_1));
  s_3_1_1 = ((s_3 when true(s_1)) when true(s_2_1));
  s_3_1_0 = ((s_3 when true(s_1)) when false(s_2_1));
  s_2_1 = (s_2 when true(s_1));
  s_3_0_1 = ((s_3 when false(s_1)) when true(s_2_0));
  s_3_0_0 = ((s_3 when false(s_1)) when false(s_2_0));
  s_2_0 = (s_2 when false(s_1))
tel

type modes = Minimal|Eco|Confort
node management_policy(eco_input : bool; comfort_input : bool)
returns (mode_2 : bool; mode_1 : bool)
var v_274 : bool; v_273 : bool; v_272 : bool; v_271 : bool; v_270 : bool;
    v_269 : bool; v_268 : bool; v_267 : bool; v_266 : bool; v_265 : bool;
    ns_St_6_Comfort_2_0 : bool; ns_St_6_Comfort_2_1 : bool;
    mode_St_6_Comfort_2_0 : bool; mode_St_6_Comfort_2_1 : bool;
    ns_St_6_Eco_2_0 : bool; ns_St_6_Eco_2_1 : bool; mode_St_6_Eco_2_0 : bool;
    mode_St_6_Eco_2_1 : bool; ns_St_6_Minimal_safety_2_0 : bool;
    ns_St_6_Minimal_safety_2_1 : bool; mode_St_6_Minimal_safety_2_0 : bool;
    mode_St_6_Minimal_safety_2_1 : bool; ck_7_2_0 : bool; ck_7_2_1 : bool;
    nr_St_6_Comfort : bool; ns_St_6_Comfort_2 : bool;
    ns_St_6_Comfort_1 : bool; mode_St_6_Comfort_2 : bool;
    mode_St_6_Comfort_1 : bool; nr_St_6_Eco : bool; ns_St_6_Eco_2 : bool;
    ns_St_6_Eco_1 : bool; mode_St_6_Eco_2 : bool; mode_St_6_Eco_1 : bool;
    nr_St_6_Minimal_safety : bool; ns_St_6_Minimal_safety_2 : bool;
    ns_St_6_Minimal_safety_1 : bool; mode_St_6_Minimal_safety_2 : bool;
    mode_St_6_Minimal_safety_1 : bool; ck_7_2 : bool; ck_7_1 : bool;
    v_46_2_0 : bool; v_46_2_1 : bool; v_47 : bool; v_46_2 : bool;
    v_46_1 : bool; v_44_2_0 : bool; v_44_2_1 : bool; v_45 : bool;
    v_44_2 : bool; v_44_1 : bool; v_2_0 : bool; v_2_1 : bool; v_43 : bool;
    v_2 : bool; v_1 : bool; v_282 : bool; v_281 : bool; v_280 : bool;
    v_279 : bool; v_278 : bool; v_277 : bool; v_276 : bool; v_275 : bool;
    s_St_6_Comfort_2_0 : bool; s_St_6_Comfort_2_1 : bool;
    s_St_6_Eco_2_0 : bool; s_St_6_Eco_2_1 : bool;
    s_St_6_Minimal_safety_2_0 : bool; s_St_6_Minimal_safety_2_1 : bool;
    ck_2_0 : bool; ck_2_1 : bool; r_St_6_Comfort : bool;
    s_St_6_Comfort_2 : bool; s_St_6_Comfort_1 : bool; r_St_6_Eco : bool;
    s_St_6_Eco_2 : bool; s_St_6_Eco_1 : bool; r_St_6_Minimal_safety : bool;
    s_St_6_Minimal_safety_2 : bool; s_St_6_Minimal_safety_1 : bool;
    ck_2 : bool; ck_1 : bool; mode_2_0 : bool; mode_2_1 : bool; s_2_0 : bool;
    s_2_1 : bool; ns_2_0 : bool; ns_2_1 : bool; s_2 : bool; s_1 : bool;
    ns_2 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_7_1 = s_1;
  ck_7_2 = s_2;
  mode_St_6_Minimal_safety_1 = false;
  mode_St_6_Minimal_safety_2 = false;
  nr_St_6_Minimal_safety = false;
  ns_St_6_Minimal_safety_1 = false;
  ns_St_6_Minimal_safety_2 = false;
  mode_St_6_Eco_1 = true;
  mode_St_6_Eco_2 = false;
  nr_St_6_Eco = false;
  ns_St_6_Eco_1 = true;
  ns_St_6_Eco_2 = false;
  mode_St_6_Comfort_1 = true;
  mode_St_6_Comfort_2 = true;
  nr_St_6_Comfort = false;
  ns_St_6_Comfort_1 = true;
  ns_St_6_Comfort_2 = true;
  v_265 =
    merge ck_7_2_1 (true -> mode_St_6_Comfort_1)(false -> mode_St_6_Eco_1);
  v_266 =
    merge ck_7_2_1 (true -> mode_St_6_Comfort_2)(false -> mode_St_6_Eco_2);
  v_267 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> mode_St_6_Minimal_safety_1);
  v_268 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> mode_St_6_Minimal_safety_2);
  mode_1 = merge ck_7_1 (true -> v_265)(false -> v_267);
  mode_2 = merge ck_7_1 (true -> v_266)(false -> v_268);
  v_269 = merge ck_7_2_1 (true -> ns_St_6_Comfort_1)(false -> ns_St_6_Eco_1);
  v_270 = merge ck_7_2_1 (true -> ns_St_6_Comfort_2)(false -> ns_St_6_Eco_2);
  v_271 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> ns_St_6_Minimal_safety_1);
  v_272 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> ns_St_6_Minimal_safety_2);
  ns_1 = merge ck_7_1 (true -> v_269)(false -> v_271);
  ns_2 = merge ck_7_1 (true -> v_270)(false -> v_272);
  v_273 = merge ck_7_2_1 (true -> nr_St_6_Comfort)(false -> nr_St_6_Eco);
  v_274 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> nr_St_6_Minimal_safety);
  nr = merge ck_7_1 (true -> v_273)(false -> v_274);
  ck_7_2_1 = (ck_7_2 when true(ck_7_1));
  ck_7_2_0 = (ck_7_2 when false(ck_7_1));
  mode_St_6_Minimal_safety_2_1 =
    (mode_St_6_Minimal_safety_2 when true(mode_St_6_Minimal_safety_1));
  mode_St_6_Minimal_safety_2_0 =
    (mode_St_6_Minimal_safety_2 when false(mode_St_6_Minimal_safety_1));
  ns_St_6_Minimal_safety_2_1 =
    (ns_St_6_Minimal_safety_2 when true(ns_St_6_Minimal_safety_1));
  ns_St_6_Minimal_safety_2_0 =
    (ns_St_6_Minimal_safety_2 when false(ns_St_6_Minimal_safety_1));
  mode_St_6_Eco_2_1 = (mode_St_6_Eco_2 when true(mode_St_6_Eco_1));
  mode_St_6_Eco_2_0 = (mode_St_6_Eco_2 when false(mode_St_6_Eco_1));
  ns_St_6_Eco_2_1 = (ns_St_6_Eco_2 when true(ns_St_6_Eco_1));
  ns_St_6_Eco_2_0 = (ns_St_6_Eco_2 when false(ns_St_6_Eco_1));
  mode_St_6_Comfort_2_1 =
    (mode_St_6_Comfort_2 when true(mode_St_6_Comfort_1));
  mode_St_6_Comfort_2_0 =
    (mode_St_6_Comfort_2 when false(mode_St_6_Comfort_1));
  ns_St_6_Comfort_2_1 = (ns_St_6_Comfort_2 when true(ns_St_6_Comfort_1));
  ns_St_6_Comfort_2_0 = (ns_St_6_Comfort_2 when false(ns_St_6_Comfort_1));
  v_275 = false fby ns_1;
  v_276 = false fby ns_2;
  ck_1 = v_275;
  ck_2 = v_276;
  r_St_6_Minimal_safety =
    if ((eco_input when false(ck_1)) when false(ck_2_0)) then true else v_47;
  s_St_6_Minimal_safety_1 =
    if ((eco_input when false(ck_1)) when false(ck_2_0))
    then true
    else v_46_1;
  s_St_6_Minimal_safety_2 =
    if ((eco_input when false(ck_1)) when false(ck_2_0))
    then false
    else v_46_2;
  v_47 =
    if ((comfort_input when false(ck_1)) when false(ck_2_0))
    then true
    else ((pnr when false(ck_1)) when false(ck_2_0));
  v_46_1 =
    if ((comfort_input when false(ck_1)) when false(ck_2_0))
    then true
    else false;
  v_46_2 =
    if ((comfort_input when false(ck_1)) when false(ck_2_0))
    then true
    else false;
  v_46_2_1 = (v_46_2 when true(v_46_1));
  v_46_2_0 = (v_46_2 when false(v_46_1));
  r_St_6_Eco =
    if ((eco_input when true(ck_1)) when false(ck_2_1)) then true else v_45;
  s_St_6_Eco_1 =
    if ((eco_input when true(ck_1)) when false(ck_2_1))
    then false
    else v_44_1;
  s_St_6_Eco_2 =
    if ((eco_input when true(ck_1)) when false(ck_2_1))
    then false
    else v_44_2;
  v_45 =
    if ((comfort_input when true(ck_1)) when false(ck_2_1))
    then true
    else ((pnr when true(ck_1)) when false(ck_2_1));
  v_44_1 =
    if ((comfort_input when true(ck_1)) when false(ck_2_1))
    then true
    else true;
  v_44_2 =
    if ((comfort_input when true(ck_1)) when false(ck_2_1))
    then true
    else false;
  v_44_2_1 = (v_44_2 when true(v_44_1));
  v_44_2_0 = (v_44_2 when false(v_44_1));
  r_St_6_Comfort =
    if ((eco_input when true(ck_1)) when true(ck_2_1)) then true else v_43;
  s_St_6_Comfort_1 =
    if ((eco_input when true(ck_1)) when true(ck_2_1)) then true else v_1;
  s_St_6_Comfort_2 =
    if ((eco_input when true(ck_1)) when true(ck_2_1)) then false else v_2;
  v_43 =
    if ((comfort_input when true(ck_1)) when true(ck_2_1))
    then true
    else ((pnr when true(ck_1)) when true(ck_2_1));
  v_1 =
    if ((comfort_input when true(ck_1)) when true(ck_2_1))
    then false
    else true;
  v_2 =
    if ((comfort_input when true(ck_1)) when true(ck_2_1))
    then false
    else true;
  v_2_1 = (v_2 when true(v_1));
  v_2_0 = (v_2 when false(v_1));
  v_277 = merge ck_2_1 (true -> s_St_6_Comfort_1)(false -> s_St_6_Eco_1);
  v_278 = merge ck_2_1 (true -> s_St_6_Comfort_2)(false -> s_St_6_Eco_2);
  v_279 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> s_St_6_Minimal_safety_1);
  v_280 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> s_St_6_Minimal_safety_2);
  s_1 = merge ck_1 (true -> v_277)(false -> v_279);
  s_2 = merge ck_1 (true -> v_278)(false -> v_280);
  v_281 = merge ck_2_1 (true -> r_St_6_Comfort)(false -> r_St_6_Eco);
  v_282 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> r_St_6_Minimal_safety);
  r = merge ck_1 (true -> v_281)(false -> v_282);
  ck_2_1 = (ck_2 when true(ck_1));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_6_Minimal_safety_2_1 =
    (s_St_6_Minimal_safety_2 when true(s_St_6_Minimal_safety_1));
  s_St_6_Minimal_safety_2_0 =
    (s_St_6_Minimal_safety_2 when false(s_St_6_Minimal_safety_1));
  s_St_6_Eco_2_1 = (s_St_6_Eco_2 when true(s_St_6_Eco_1));
  s_St_6_Eco_2_0 = (s_St_6_Eco_2 when false(s_St_6_Eco_1));
  s_St_6_Comfort_2_1 = (s_St_6_Comfort_2 when true(s_St_6_Comfort_1));
  s_St_6_Comfort_2_0 = (s_St_6_Comfort_2 when false(s_St_6_Comfort_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1));
  mode_2_1 = (mode_2 when true(mode_1));
  mode_2_0 = (mode_2 when false(mode_1))
tel

node porta(push : bool; c_porta : bool) returns (porta_open : bool)
var nr_St_7_Open : bool; ns_St_7_Open_1 : bool; porta_open_St_7_Open : bool;
    nr_St_7_Closed : bool; ns_St_7_Closed_1 : bool;
    porta_open_St_7_Closed : bool; ck_8_1 : bool; v : bool;
    r_St_7_Open : bool; s_St_7_Open_1 : bool; r_St_7_Closed : bool;
    s_St_7_Closed_1 : bool; ck_1 : bool; s_1 : bool; ns_1 : bool; r : bool;
    nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_8_1 = s_1;
  porta_open_St_7_Closed = false;
  nr_St_7_Closed = false;
  ns_St_7_Closed_1 = true;
  porta_open_St_7_Open = true;
  nr_St_7_Open = false;
  ns_St_7_Open_1 = false;
  porta_open =
    merge ck_8_1
      (true -> porta_open_St_7_Closed)(false -> porta_open_St_7_Open);
  ns_1 = merge ck_8_1 (true -> ns_St_7_Closed_1)(false -> ns_St_7_Open_1);
  nr = merge ck_8_1 (true -> nr_St_7_Closed)(false -> nr_St_7_Open);
  ck_1 = true fby ns_1;
  r_St_7_Closed = if v then true else (pnr when true(ck_1));
  s_St_7_Closed_1 = if v then false else true;
  v = not((c_porta when true(ck_1)));
  r_St_7_Open =
    if (c_porta when false(ck_1)) then true else (pnr when false(ck_1));
  s_St_7_Open_1 = if (c_porta when false(ck_1)) then true else false;
  s_1 = merge ck_1 (true -> s_St_7_Closed_1)(false -> s_St_7_Open_1);
  r = merge ck_1 (true -> r_St_7_Closed)(false -> r_St_7_Open)
tel

node roteador(c : bool) returns (r_on : bool)
var nr_St_8_On : bool; ns_St_8_On_1 : bool; r_on_St_8_On : bool;
    nr_St_8_Off : bool; ns_St_8_Off_1 : bool; r_on_St_8_Off : bool;
    ck_9_1 : bool; v : bool; r_St_8_On : bool; s_St_8_On_1 : bool;
    r_St_8_Off : bool; s_St_8_Off_1 : bool; ck_1 : bool; s_1 : bool;
    ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_9_1 = s_1;
  r_on_St_8_Off = false;
  nr_St_8_Off = false;
  ns_St_8_Off_1 = true;
  r_on_St_8_On = true;
  nr_St_8_On = false;
  ns_St_8_On_1 = false;
  r_on = merge ck_9_1 (true -> r_on_St_8_Off)(false -> r_on_St_8_On);
  ns_1 = merge ck_9_1 (true -> ns_St_8_Off_1)(false -> ns_St_8_On_1);
  nr = merge ck_9_1 (true -> nr_St_8_Off)(false -> nr_St_8_On);
  ck_1 = true fby ns_1;
  r_St_8_Off = if (c when true(ck_1)) then true else (pnr when true(ck_1));
  s_St_8_Off_1 = if (c when true(ck_1)) then false else true;
  r_St_8_On = if v then true else (pnr when false(ck_1));
  s_St_8_On_1 = if v then true else false;
  v = not((c when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_8_Off_1)(false -> s_St_8_On_1);
  r = merge ck_1 (true -> r_St_8_Off)(false -> r_St_8_On)
tel

node armario_de_servico(c : bool) returns (arm_open : bool)
var nr_St_9_Open : bool; ns_St_9_Open_1 : bool; arm_open_St_9_Open : bool;
    nr_St_9_Locked : bool; ns_St_9_Locked_1 : bool;
    arm_open_St_9_Locked : bool; ck_10_1 : bool; v : bool;
    r_St_9_Open : bool; s_St_9_Open_1 : bool; r_St_9_Locked : bool;
    s_St_9_Locked_1 : bool; ck_1 : bool; s_1 : bool; ns_1 : bool; r : bool;
    nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_10_1 = s_1;
  arm_open_St_9_Locked = false;
  nr_St_9_Locked = false;
  ns_St_9_Locked_1 = true;
  arm_open_St_9_Open = true;
  nr_St_9_Open = false;
  ns_St_9_Open_1 = false;
  arm_open =
    merge ck_10_1 (true -> arm_open_St_9_Locked)(false -> arm_open_St_9_Open);
  ns_1 = merge ck_10_1 (true -> ns_St_9_Locked_1)(false -> ns_St_9_Open_1);
  nr = merge ck_10_1 (true -> nr_St_9_Locked)(false -> nr_St_9_Open);
  ck_1 = true fby ns_1;
  r_St_9_Locked = if (c when true(ck_1)) then true else (pnr when true(ck_1));
  s_St_9_Locked_1 = if (c when true(ck_1)) then false else true;
  r_St_9_Open = if v then true else (pnr when false(ck_1));
  s_St_9_Open_1 = if v then true else false;
  v = not((c when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_9_Locked_1)(false -> s_St_9_Open_1);
  r = merge ck_1 (true -> r_St_9_Locked)(false -> r_St_9_Open)
tel

node pessoas(arrived : bool) returns (presence : bool)
var nr_St_10_Preent : bool; ns_St_10_Preent_1 : bool;
    presence_St_10_Preent : bool; nr_St_10_Not_Present : bool;
    ns_St_10_Not_Present_1 : bool; presence_St_10_Not_Present : bool;
    ck_11_1 : bool; r_St_10_Preent : bool; s_St_10_Preent_1 : bool;
    r_St_10_Not_Present : bool; s_St_10_Not_Present_1 : bool; ck_1 : bool;
    s_1 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_11_1 = s_1;
  presence_St_10_Not_Present = false;
  nr_St_10_Not_Present = false;
  ns_St_10_Not_Present_1 = true;
  presence_St_10_Preent = true;
  nr_St_10_Preent = false;
  ns_St_10_Preent_1 = false;
  presence =
    merge ck_11_1
      (true -> presence_St_10_Not_Present)(false -> presence_St_10_Preent);
  ns_1 =
    merge ck_11_1
      (true -> ns_St_10_Not_Present_1)(false -> ns_St_10_Preent_1);
  nr = merge ck_11_1 (true -> nr_St_10_Not_Present)(false -> nr_St_10_Preent);
  ck_1 = true fby ns_1;
  r_St_10_Not_Present =
    if (arrived when true(ck_1)) then true else (pnr when true(ck_1));
  s_St_10_Not_Present_1 = if (arrived when true(ck_1)) then false else true;
  r_St_10_Preent =
    if (arrived when false(ck_1)) then true else (pnr when false(ck_1));
  s_St_10_Preent_1 = if (arrived when false(ck_1)) then true else false;
  s_1 = merge ck_1 (true -> s_St_10_Not_Present_1)(false -> s_St_10_Preent_1);
  r = merge ck_1 (true -> r_St_10_Not_Present)(false -> r_St_10_Preent)
tel

node computadores(c : bool) returns (pc_on : bool)
var nr_St_11_On : bool; ns_St_11_On_1 : bool; pc_on_St_11_On : bool;
    nr_St_11_Off : bool; ns_St_11_Off_1 : bool; pc_on_St_11_Off : bool;
    ck_12_1 : bool; v : bool; r_St_11_On : bool; s_St_11_On_1 : bool;
    r_St_11_Off : bool; s_St_11_Off_1 : bool; ck_1 : bool; s_1 : bool;
    ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_12_1 = s_1;
  pc_on_St_11_Off = false;
  nr_St_11_Off = false;
  ns_St_11_Off_1 = true;
  pc_on_St_11_On = true;
  nr_St_11_On = false;
  ns_St_11_On_1 = false;
  pc_on = merge ck_12_1 (true -> pc_on_St_11_Off)(false -> pc_on_St_11_On);
  ns_1 = merge ck_12_1 (true -> ns_St_11_Off_1)(false -> ns_St_11_On_1);
  nr = merge ck_12_1 (true -> nr_St_11_Off)(false -> nr_St_11_On);
  ck_1 = true fby ns_1;
  r_St_11_Off = if (c when true(ck_1)) then true else (pnr when true(ck_1));
  s_St_11_Off_1 = if (c when true(ck_1)) then false else true;
  r_St_11_On = if v then true else (pnr when false(ck_1));
  s_St_11_On_1 = if v then true else false;
  v = not((c when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_11_Off_1)(false -> s_St_11_On_1);
  r = merge ck_1 (true -> r_St_11_Off)(false -> r_St_11_On)
tel

node janelas(c : bool) returns (w_open : bool)
var nr_St_12_Open : bool; ns_St_12_Open_1 : bool; w_open_St_12_Open : bool;
    nr_St_12_Closed : bool; ns_St_12_Closed_1 : bool;
    w_open_St_12_Closed : bool; ck_13_1 : bool; v : bool;
    r_St_12_Open : bool; s_St_12_Open_1 : bool; r_St_12_Closed : bool;
    s_St_12_Closed_1 : bool; ck_1 : bool; s_1 : bool; ns_1 : bool; r : bool;
    nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_13_1 = s_1;
  w_open_St_12_Closed = false;
  nr_St_12_Closed = false;
  ns_St_12_Closed_1 = true;
  w_open_St_12_Open = true;
  nr_St_12_Open = false;
  ns_St_12_Open_1 = false;
  w_open =
    merge ck_13_1 (true -> w_open_St_12_Closed)(false -> w_open_St_12_Open);
  ns_1 = merge ck_13_1 (true -> ns_St_12_Closed_1)(false -> ns_St_12_Open_1);
  nr = merge ck_13_1 (true -> nr_St_12_Closed)(false -> nr_St_12_Open);
  ck_1 = true fby ns_1;
  r_St_12_Closed =
    if (c when true(ck_1)) then true else (pnr when true(ck_1));
  s_St_12_Closed_1 = if (c when true(ck_1)) then false else true;
  r_St_12_Open = if v then true else (pnr when false(ck_1));
  s_St_12_Open_1 = if v then true else false;
  v = not((c when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_12_Closed_1)(false -> s_St_12_Open_1);
  r = merge ck_1 (true -> r_St_12_Closed)(false -> r_St_12_Open)
tel

node luzes(c1 : bool; c2 : bool) returns (l_state : int)
var v_290 : bool; v_289 : bool; v_288 : bool; v_287 : bool; v_286 : bool;
    v_285 : bool; v_284 : int; v_283 : int; ns_St_13_All_2_0 : bool;
    ns_St_13_All_2_1 : bool; ns_St_13_Some_2_0 : bool;
    ns_St_13_Some_2_1 : bool; ns_St_13_None_2_0 : bool;
    ns_St_13_None_2_1 : bool; ck_14_2_0 : bool; ck_14_2_1 : bool;
    nr_St_13_All : bool; ns_St_13_All_2 : bool; ns_St_13_All_1 : bool;
    l_state_St_13_All : int; nr_St_13_Some : bool; ns_St_13_Some_2 : bool;
    ns_St_13_Some_1 : bool; l_state_St_13_Some : int; nr_St_13_None : bool;
    ns_St_13_None_2 : bool; ns_St_13_None_1 : bool; l_state_St_13_None : int;
    ck_14_2 : bool; ck_14_1 : bool; v_54_2_0 : bool; v_54_2_1 : bool;
    v_55 : bool; v_54_2 : bool; v_54_1 : bool; v_52_2_0 : bool;
    v_52_2_1 : bool; v_53 : bool; v_52_2 : bool; v_52_1 : bool; v_51 : bool;
    v_49_2_0 : bool; v_49_2_1 : bool; v_50 : bool; v_49_2 : bool;
    v_49_1 : bool; v_48 : bool; v : bool; v_298 : bool; v_297 : bool;
    v_296 : bool; v_295 : bool; v_294 : bool; v_293 : bool; v_292 : bool;
    v_291 : bool; s_St_13_All_2_0 : bool; s_St_13_All_2_1 : bool;
    s_St_13_Some_2_0 : bool; s_St_13_Some_2_1 : bool;
    s_St_13_None_2_0 : bool; s_St_13_None_2_1 : bool; ck_2_0 : bool;
    ck_2_1 : bool; r_St_13_All : bool; s_St_13_All_2 : bool;
    s_St_13_All_1 : bool; r_St_13_Some : bool; s_St_13_Some_2 : bool;
    s_St_13_Some_1 : bool; r_St_13_None : bool; s_St_13_None_2 : bool;
    s_St_13_None_1 : bool; ck_2 : bool; ck_1 : bool; s_2_0 : bool;
    s_2_1 : bool; ns_2_0 : bool; ns_2_1 : bool; s_2 : bool; s_1 : bool;
    ns_2 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_14_1 = s_1;
  ck_14_2 = s_2;
  l_state_St_13_None = 0;
  nr_St_13_None = false;
  ns_St_13_None_1 = true;
  ns_St_13_None_2 = false;
  l_state_St_13_Some = 1;
  nr_St_13_Some = false;
  ns_St_13_Some_1 = false;
  ns_St_13_Some_2 = false;
  l_state_St_13_All = 2;
  nr_St_13_All = false;
  ns_St_13_All_1 = true;
  ns_St_13_All_2 = true;
  v_283 =
    merge ck_14_2_1 (true -> l_state_St_13_All)(false -> l_state_St_13_None);
  v_284 =
    merge ck_14_2_0
      (true -> ((0 when false(ck_14_1)) when true(ck_14_2_0)))
      (false -> l_state_St_13_Some);
  l_state = merge ck_14_1 (true -> v_283)(false -> v_284);
  v_285 = merge ck_14_2_1 (true -> ns_St_13_All_1)(false -> ns_St_13_None_1);
  v_286 = merge ck_14_2_1 (true -> ns_St_13_All_2)(false -> ns_St_13_None_2);
  v_287 =
    merge ck_14_2_0
      (true -> ((true when false(ck_14_1)) when true(ck_14_2_0)))
      (false -> ns_St_13_Some_1);
  v_288 =
    merge ck_14_2_0
      (true -> ((true when false(ck_14_1)) when true(ck_14_2_0)))
      (false -> ns_St_13_Some_2);
  ns_1 = merge ck_14_1 (true -> v_285)(false -> v_287);
  ns_2 = merge ck_14_1 (true -> v_286)(false -> v_288);
  v_289 = merge ck_14_2_1 (true -> nr_St_13_All)(false -> nr_St_13_None);
  v_290 =
    merge ck_14_2_0
      (true -> ((true when false(ck_14_1)) when true(ck_14_2_0)))
      (false -> nr_St_13_Some);
  nr = merge ck_14_1 (true -> v_289)(false -> v_290);
  ck_14_2_1 = (ck_14_2 when true(ck_14_1));
  ck_14_2_0 = (ck_14_2 when false(ck_14_1));
  ns_St_13_None_2_1 = (ns_St_13_None_2 when true(ns_St_13_None_1));
  ns_St_13_None_2_0 = (ns_St_13_None_2 when false(ns_St_13_None_1));
  ns_St_13_Some_2_1 = (ns_St_13_Some_2 when true(ns_St_13_Some_1));
  ns_St_13_Some_2_0 = (ns_St_13_Some_2 when false(ns_St_13_Some_1));
  ns_St_13_All_2_1 = (ns_St_13_All_2 when true(ns_St_13_All_1));
  ns_St_13_All_2_0 = (ns_St_13_All_2 when false(ns_St_13_All_1));
  v_291 = true fby ns_1;
  v_292 = false fby ns_2;
  ck_1 = v_291;
  ck_2 = v_292;
  r_St_13_None =
    if ((c1 when true(ck_1)) when false(ck_2_1)) then true else v_55;
  s_St_13_None_1 =
    if ((c1 when true(ck_1)) when false(ck_2_1)) then false else v_54_1;
  s_St_13_None_2 =
    if ((c1 when true(ck_1)) when false(ck_2_1)) then false else v_54_2;
  v_55 =
    if ((c2 when true(ck_1)) when false(ck_2_1))
    then true
    else ((pnr when true(ck_1)) when false(ck_2_1));
  v_54_1 = if ((c2 when true(ck_1)) when false(ck_2_1)) then true else true;
  v_54_2 = if ((c2 when true(ck_1)) when false(ck_2_1)) then true else false;
  v_54_2_1 = (v_54_2 when true(v_54_1));
  v_54_2_0 = (v_54_2 when false(v_54_1));
  r_St_13_Some = if v_51 then true else v_53;
  s_St_13_Some_1 = if v_51 then true else v_52_1;
  s_St_13_Some_2 = if v_51 then false else v_52_2;
  v_53 =
    if ((c2 when false(ck_1)) when false(ck_2_0))
    then true
    else ((pnr when false(ck_1)) when false(ck_2_0));
  v_52_1 = if ((c2 when false(ck_1)) when false(ck_2_0)) then true else false;
  v_52_2 = if ((c2 when false(ck_1)) when false(ck_2_0)) then true else false;
  v_51 = not(((c1 when false(ck_1)) when false(ck_2_0)));
  v_52_2_1 = (v_52_2 when true(v_52_1));
  v_52_2_0 = (v_52_2 when false(v_52_1));
  r_St_13_All = if v then true else v_50;
  s_St_13_All_1 = if v then false else v_49_1;
  s_St_13_All_2 = if v then false else v_49_2;
  v_50 = if v_48 then true else ((pnr when true(ck_1)) when true(ck_2_1));
  v_49_1 = if v_48 then true else true;
  v_49_2 = if v_48 then false else true;
  v_48 = not(((c2 when true(ck_1)) when true(ck_2_1)));
  v = not(((c1 when true(ck_1)) when true(ck_2_1)));
  v_49_2_1 = (v_49_2 when true(v_49_1));
  v_49_2_0 = (v_49_2 when false(v_49_1));
  v_293 = merge ck_2_1 (true -> s_St_13_All_1)(false -> s_St_13_None_1);
  v_294 = merge ck_2_1 (true -> s_St_13_All_2)(false -> s_St_13_None_2);
  v_295 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> s_St_13_Some_1);
  v_296 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> s_St_13_Some_2);
  s_1 = merge ck_1 (true -> v_293)(false -> v_295);
  s_2 = merge ck_1 (true -> v_294)(false -> v_296);
  v_297 = merge ck_2_1 (true -> r_St_13_All)(false -> r_St_13_None);
  v_298 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> r_St_13_Some);
  r = merge ck_1 (true -> v_297)(false -> v_298);
  ck_2_1 = (ck_2 when true(ck_1));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_13_None_2_1 = (s_St_13_None_2 when true(s_St_13_None_1));
  s_St_13_None_2_0 = (s_St_13_None_2 when false(s_St_13_None_1));
  s_St_13_Some_2_1 = (s_St_13_Some_2 when true(s_St_13_Some_1));
  s_St_13_Some_2_0 = (s_St_13_Some_2 when false(s_St_13_Some_1));
  s_St_13_All_2_1 = (s_St_13_All_2 when true(s_St_13_All_1));
  s_St_13_All_2_0 = (s_St_13_All_2 when false(s_St_13_All_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1))
tel

node persianas(c1 : bool; c2 : bool) returns (p_state : int)
var v_306 : bool; v_305 : bool; v_304 : bool; v_303 : bool; v_302 : bool;
    v_301 : bool; v_300 : int; v_299 : int; ns_St_14_Up_2_0 : bool;
    ns_St_14_Up_2_1 : bool; ns_St_14_Mid_2_0 : bool; ns_St_14_Mid_2_1 : bool;
    ns_St_14_Down_2_0 : bool; ns_St_14_Down_2_1 : bool; ck_15_2_0 : bool;
    ck_15_2_1 : bool; nr_St_14_Up : bool; ns_St_14_Up_2 : bool;
    ns_St_14_Up_1 : bool; p_state_St_14_Up : int; nr_St_14_Mid : bool;
    ns_St_14_Mid_2 : bool; ns_St_14_Mid_1 : bool; p_state_St_14_Mid : int;
    nr_St_14_Down : bool; ns_St_14_Down_2 : bool; ns_St_14_Down_1 : bool;
    p_state_St_14_Down : int; ck_15_2 : bool; ck_15_1 : bool;
    v_62_2_0 : bool; v_62_2_1 : bool; v_63 : bool; v_62_2 : bool;
    v_62_1 : bool; v_60_2_0 : bool; v_60_2_1 : bool; v_61 : bool;
    v_60_2 : bool; v_60_1 : bool; v_59 : bool; v_57_2_0 : bool;
    v_57_2_1 : bool; v_58 : bool; v_57_2 : bool; v_57_1 : bool; v_56 : bool;
    v : bool; v_314 : bool; v_313 : bool; v_312 : bool; v_311 : bool;
    v_310 : bool; v_309 : bool; v_308 : bool; v_307 : bool;
    s_St_14_Up_2_0 : bool; s_St_14_Up_2_1 : bool; s_St_14_Mid_2_0 : bool;
    s_St_14_Mid_2_1 : bool; s_St_14_Down_2_0 : bool; s_St_14_Down_2_1 : bool;
    ck_2_0 : bool; ck_2_1 : bool; r_St_14_Up : bool; s_St_14_Up_2 : bool;
    s_St_14_Up_1 : bool; r_St_14_Mid : bool; s_St_14_Mid_2 : bool;
    s_St_14_Mid_1 : bool; r_St_14_Down : bool; s_St_14_Down_2 : bool;
    s_St_14_Down_1 : bool; ck_2 : bool; ck_1 : bool; s_2_0 : bool;
    s_2_1 : bool; ns_2_0 : bool; ns_2_1 : bool; s_2 : bool; s_1 : bool;
    ns_2 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_15_1 = s_1;
  ck_15_2 = s_2;
  p_state_St_14_Down = 0;
  nr_St_14_Down = false;
  ns_St_14_Down_1 = true;
  ns_St_14_Down_2 = true;
  p_state_St_14_Mid = 1;
  nr_St_14_Mid = false;
  ns_St_14_Mid_1 = true;
  ns_St_14_Mid_2 = false;
  p_state_St_14_Up = 2;
  nr_St_14_Up = false;
  ns_St_14_Up_1 = false;
  ns_St_14_Up_2 = false;
  v_299 =
    merge ck_15_2_1 (true -> p_state_St_14_Down)(false -> p_state_St_14_Mid);
  v_300 =
    merge ck_15_2_0
      (true -> ((0 when false(ck_15_1)) when true(ck_15_2_0)))
      (false -> p_state_St_14_Up);
  p_state = merge ck_15_1 (true -> v_299)(false -> v_300);
  v_301 = merge ck_15_2_1 (true -> ns_St_14_Down_1)(false -> ns_St_14_Mid_1);
  v_302 = merge ck_15_2_1 (true -> ns_St_14_Down_2)(false -> ns_St_14_Mid_2);
  v_303 =
    merge ck_15_2_0
      (true -> ((true when false(ck_15_1)) when true(ck_15_2_0)))
      (false -> ns_St_14_Up_1);
  v_304 =
    merge ck_15_2_0
      (true -> ((true when false(ck_15_1)) when true(ck_15_2_0)))
      (false -> ns_St_14_Up_2);
  ns_1 = merge ck_15_1 (true -> v_301)(false -> v_303);
  ns_2 = merge ck_15_1 (true -> v_302)(false -> v_304);
  v_305 = merge ck_15_2_1 (true -> nr_St_14_Down)(false -> nr_St_14_Mid);
  v_306 =
    merge ck_15_2_0
      (true -> ((true when false(ck_15_1)) when true(ck_15_2_0)))
      (false -> nr_St_14_Up);
  nr = merge ck_15_1 (true -> v_305)(false -> v_306);
  ck_15_2_1 = (ck_15_2 when true(ck_15_1));
  ck_15_2_0 = (ck_15_2 when false(ck_15_1));
  ns_St_14_Down_2_1 = (ns_St_14_Down_2 when true(ns_St_14_Down_1));
  ns_St_14_Down_2_0 = (ns_St_14_Down_2 when false(ns_St_14_Down_1));
  ns_St_14_Mid_2_1 = (ns_St_14_Mid_2 when true(ns_St_14_Mid_1));
  ns_St_14_Mid_2_0 = (ns_St_14_Mid_2 when false(ns_St_14_Mid_1));
  ns_St_14_Up_2_1 = (ns_St_14_Up_2 when true(ns_St_14_Up_1));
  ns_St_14_Up_2_0 = (ns_St_14_Up_2 when false(ns_St_14_Up_1));
  v_307 = true fby ns_1;
  v_308 = true fby ns_2;
  ck_1 = v_307;
  ck_2 = v_308;
  r_St_14_Down =
    if ((c1 when true(ck_1)) when true(ck_2_1)) then true else v_63;
  s_St_14_Down_1 =
    if ((c1 when true(ck_1)) when true(ck_2_1)) then true else v_62_1;
  s_St_14_Down_2 =
    if ((c1 when true(ck_1)) when true(ck_2_1)) then false else v_62_2;
  v_63 =
    if ((c2 when true(ck_1)) when true(ck_2_1))
    then true
    else ((pnr when true(ck_1)) when true(ck_2_1));
  v_62_1 = if ((c2 when true(ck_1)) when true(ck_2_1)) then false else true;
  v_62_2 = if ((c2 when true(ck_1)) when true(ck_2_1)) then false else true;
  v_62_2_1 = (v_62_2 when true(v_62_1));
  v_62_2_0 = (v_62_2 when false(v_62_1));
  r_St_14_Mid = if v_59 then true else v_61;
  s_St_14_Mid_1 = if v_59 then true else v_60_1;
  s_St_14_Mid_2 = if v_59 then true else v_60_2;
  v_61 =
    if ((c2 when true(ck_1)) when false(ck_2_1))
    then true
    else ((pnr when true(ck_1)) when false(ck_2_1));
  v_60_1 = if ((c2 when true(ck_1)) when false(ck_2_1)) then false else true;
  v_60_2 = if ((c2 when true(ck_1)) when false(ck_2_1)) then false else false;
  v_59 = not(((c1 when true(ck_1)) when false(ck_2_1)));
  v_60_2_1 = (v_60_2 when true(v_60_1));
  v_60_2_0 = (v_60_2 when false(v_60_1));
  r_St_14_Up = if v then true else v_58;
  s_St_14_Up_1 = if v then true else v_57_1;
  s_St_14_Up_2 = if v then false else v_57_2;
  v_58 = if v_56 then true else ((pnr when false(ck_1)) when false(ck_2_0));
  v_57_1 = if v_56 then true else false;
  v_57_2 = if v_56 then true else false;
  v_56 = not(((c2 when false(ck_1)) when false(ck_2_0)));
  v = not(((c1 when false(ck_1)) when false(ck_2_0)));
  v_57_2_1 = (v_57_2 when true(v_57_1));
  v_57_2_0 = (v_57_2 when false(v_57_1));
  v_309 = merge ck_2_1 (true -> s_St_14_Down_1)(false -> s_St_14_Mid_1);
  v_310 = merge ck_2_1 (true -> s_St_14_Down_2)(false -> s_St_14_Mid_2);
  v_311 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> s_St_14_Up_1);
  v_312 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> s_St_14_Up_2);
  s_1 = merge ck_1 (true -> v_309)(false -> v_311);
  s_2 = merge ck_1 (true -> v_310)(false -> v_312);
  v_313 = merge ck_2_1 (true -> r_St_14_Down)(false -> r_St_14_Mid);
  v_314 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> r_St_14_Up);
  r = merge ck_1 (true -> v_313)(false -> v_314);
  ck_2_1 = (ck_2 when true(ck_1));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_14_Down_2_1 = (s_St_14_Down_2 when true(s_St_14_Down_1));
  s_St_14_Down_2_0 = (s_St_14_Down_2 when false(s_St_14_Down_1));
  s_St_14_Mid_2_1 = (s_St_14_Mid_2 when true(s_St_14_Mid_1));
  s_St_14_Mid_2_0 = (s_St_14_Mid_2 when false(s_St_14_Mid_1));
  s_St_14_Up_2_1 = (s_St_14_Up_2 when true(s_St_14_Up_1));
  s_St_14_Up_2_0 = (s_St_14_Up_2 when false(s_St_14_Up_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1))
tel

node ar_condicionado(c1 : bool; c2 : bool) returns (ar_state : int)
var v_322 : bool; v_321 : bool; v_320 : bool; v_319 : bool; v_318 : bool;
    v_317 : bool; v_316 : int; v_315 : int; ns_St_15_Max_2_0 : bool;
    ns_St_15_Max_2_1 : bool; ns_St_15_Min_2_0 : bool;
    ns_St_15_Min_2_1 : bool; ns_St_15_Off_2_0 : bool;
    ns_St_15_Off_2_1 : bool; ck_16_2_0 : bool; ck_16_2_1 : bool;
    nr_St_15_Max : bool; ns_St_15_Max_2 : bool; ns_St_15_Max_1 : bool;
    ar_state_St_15_Max : int; nr_St_15_Min : bool; ns_St_15_Min_2 : bool;
    ns_St_15_Min_1 : bool; ar_state_St_15_Min : int; nr_St_15_Off : bool;
    ns_St_15_Off_2 : bool; ns_St_15_Off_1 : bool; ar_state_St_15_Off : int;
    ck_16_2 : bool; ck_16_1 : bool; v_70_2_0 : bool; v_70_2_1 : bool;
    v_71 : bool; v_70_2 : bool; v_70_1 : bool; v_68_2_0 : bool;
    v_68_2_1 : bool; v_69 : bool; v_68_2 : bool; v_68_1 : bool; v_67 : bool;
    v_65_2_0 : bool; v_65_2_1 : bool; v_66 : bool; v_65_2 : bool;
    v_65_1 : bool; v_64 : bool; v : bool; v_330 : bool; v_329 : bool;
    v_328 : bool; v_327 : bool; v_326 : bool; v_325 : bool; v_324 : bool;
    v_323 : bool; s_St_15_Max_2_0 : bool; s_St_15_Max_2_1 : bool;
    s_St_15_Min_2_0 : bool; s_St_15_Min_2_1 : bool; s_St_15_Off_2_0 : bool;
    s_St_15_Off_2_1 : bool; ck_2_0 : bool; ck_2_1 : bool; r_St_15_Max : bool;
    s_St_15_Max_2 : bool; s_St_15_Max_1 : bool; r_St_15_Min : bool;
    s_St_15_Min_2 : bool; s_St_15_Min_1 : bool; r_St_15_Off : bool;
    s_St_15_Off_2 : bool; s_St_15_Off_1 : bool; ck_2 : bool; ck_1 : bool;
    s_2_0 : bool; s_2_1 : bool; ns_2_0 : bool; ns_2_1 : bool; s_2 : bool;
    s_1 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_16_1 = s_1;
  ck_16_2 = s_2;
  ar_state_St_15_Off = 0;
  nr_St_15_Off = false;
  ns_St_15_Off_1 = false;
  ns_St_15_Off_2 = false;
  ar_state_St_15_Min = 1;
  nr_St_15_Min = false;
  ns_St_15_Min_1 = true;
  ns_St_15_Min_2 = false;
  ar_state_St_15_Max = 2;
  nr_St_15_Max = false;
  ns_St_15_Max_1 = true;
  ns_St_15_Max_2 = true;
  v_315 =
    merge ck_16_2_1 (true -> ar_state_St_15_Max)(false -> ar_state_St_15_Min);
  v_316 =
    merge ck_16_2_0
      (true -> ((0 when false(ck_16_1)) when true(ck_16_2_0)))
      (false -> ar_state_St_15_Off);
  ar_state = merge ck_16_1 (true -> v_315)(false -> v_316);
  v_317 = merge ck_16_2_1 (true -> ns_St_15_Max_1)(false -> ns_St_15_Min_1);
  v_318 = merge ck_16_2_1 (true -> ns_St_15_Max_2)(false -> ns_St_15_Min_2);
  v_319 =
    merge ck_16_2_0
      (true -> ((true when false(ck_16_1)) when true(ck_16_2_0)))
      (false -> ns_St_15_Off_1);
  v_320 =
    merge ck_16_2_0
      (true -> ((true when false(ck_16_1)) when true(ck_16_2_0)))
      (false -> ns_St_15_Off_2);
  ns_1 = merge ck_16_1 (true -> v_317)(false -> v_319);
  ns_2 = merge ck_16_1 (true -> v_318)(false -> v_320);
  v_321 = merge ck_16_2_1 (true -> nr_St_15_Max)(false -> nr_St_15_Min);
  v_322 =
    merge ck_16_2_0
      (true -> ((true when false(ck_16_1)) when true(ck_16_2_0)))
      (false -> nr_St_15_Off);
  nr = merge ck_16_1 (true -> v_321)(false -> v_322);
  ck_16_2_1 = (ck_16_2 when true(ck_16_1));
  ck_16_2_0 = (ck_16_2 when false(ck_16_1));
  ns_St_15_Off_2_1 = (ns_St_15_Off_2 when true(ns_St_15_Off_1));
  ns_St_15_Off_2_0 = (ns_St_15_Off_2 when false(ns_St_15_Off_1));
  ns_St_15_Min_2_1 = (ns_St_15_Min_2 when true(ns_St_15_Min_1));
  ns_St_15_Min_2_0 = (ns_St_15_Min_2 when false(ns_St_15_Min_1));
  ns_St_15_Max_2_1 = (ns_St_15_Max_2 when true(ns_St_15_Max_1));
  ns_St_15_Max_2_0 = (ns_St_15_Max_2 when false(ns_St_15_Max_1));
  v_323 = false fby ns_1;
  v_324 = false fby ns_2;
  ck_1 = v_323;
  ck_2 = v_324;
  r_St_15_Off =
    if ((c1 when false(ck_1)) when false(ck_2_0)) then true else v_71;
  s_St_15_Off_1 =
    if ((c1 when false(ck_1)) when false(ck_2_0)) then true else v_70_1;
  s_St_15_Off_2 =
    if ((c1 when false(ck_1)) when false(ck_2_0)) then false else v_70_2;
  v_71 =
    if ((c2 when false(ck_1)) when false(ck_2_0))
    then true
    else ((pnr when false(ck_1)) when false(ck_2_0));
  v_70_1 = if ((c2 when false(ck_1)) when false(ck_2_0)) then true else false;
  v_70_2 = if ((c2 when false(ck_1)) when false(ck_2_0)) then true else false;
  v_70_2_1 = (v_70_2 when true(v_70_1));
  v_70_2_0 = (v_70_2 when false(v_70_1));
  r_St_15_Min = if v_67 then true else v_69;
  s_St_15_Min_1 = if v_67 then false else v_68_1;
  s_St_15_Min_2 = if v_67 then false else v_68_2;
  v_69 =
    if ((c2 when true(ck_1)) when false(ck_2_1))
    then true
    else ((pnr when true(ck_1)) when false(ck_2_1));
  v_68_1 = if ((c2 when true(ck_1)) when false(ck_2_1)) then true else true;
  v_68_2 = if ((c2 when true(ck_1)) when false(ck_2_1)) then true else false;
  v_67 = not(((c1 when true(ck_1)) when false(ck_2_1)));
  v_68_2_1 = (v_68_2 when true(v_68_1));
  v_68_2_0 = (v_68_2 when false(v_68_1));
  r_St_15_Max = if v then true else v_66;
  s_St_15_Max_1 = if v then true else v_65_1;
  s_St_15_Max_2 = if v then false else v_65_2;
  v_66 = if v_64 then true else ((pnr when true(ck_1)) when true(ck_2_1));
  v_65_1 = if v_64 then false else true;
  v_65_2 = if v_64 then false else true;
  v_64 = not(((c2 when true(ck_1)) when true(ck_2_1)));
  v = not(((c1 when true(ck_1)) when true(ck_2_1)));
  v_65_2_1 = (v_65_2 when true(v_65_1));
  v_65_2_0 = (v_65_2 when false(v_65_1));
  v_325 = merge ck_2_1 (true -> s_St_15_Max_1)(false -> s_St_15_Min_1);
  v_326 = merge ck_2_1 (true -> s_St_15_Max_2)(false -> s_St_15_Min_2);
  v_327 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> s_St_15_Off_1);
  v_328 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> s_St_15_Off_2);
  s_1 = merge ck_1 (true -> v_325)(false -> v_327);
  s_2 = merge ck_1 (true -> v_326)(false -> v_328);
  v_329 = merge ck_2_1 (true -> r_St_15_Max)(false -> r_St_15_Min);
  v_330 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))
      (false -> r_St_15_Off);
  r = merge ck_1 (true -> v_329)(false -> v_330);
  ck_2_1 = (ck_2 when true(ck_1));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_15_Off_2_1 = (s_St_15_Off_2 when true(s_St_15_Off_1));
  s_St_15_Off_2_0 = (s_St_15_Off_2 when false(s_St_15_Off_1));
  s_St_15_Min_2_1 = (s_St_15_Min_2 when true(s_St_15_Min_1));
  s_St_15_Min_2_0 = (s_St_15_Min_2 when false(s_St_15_Min_1));
  s_St_15_Max_2_1 = (s_St_15_Max_2 when true(s_St_15_Max_1));
  s_St_15_Max_2_0 = (s_St_15_Max_2 when false(s_St_15_Max_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1))
tel

node turno(shift : bool) returns (turno : bool)
var nr_St_16_Noite : bool; ns_St_16_Noite_1 : bool; turno_St_16_Noite : bool;
    nr_St_16_Dia : bool; ns_St_16_Dia_1 : bool; turno_St_16_Dia : bool;
    ck_17_1 : bool; r_St_16_Noite : bool; s_St_16_Noite_1 : bool;
    r_St_16_Dia : bool; s_St_16_Dia_1 : bool; ck_1 : bool; s_1 : bool;
    ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_17_1 = s_1;
  turno_St_16_Dia = false;
  nr_St_16_Dia = false;
  ns_St_16_Dia_1 = true;
  turno_St_16_Noite = true;
  nr_St_16_Noite = false;
  ns_St_16_Noite_1 = false;
  turno = merge ck_17_1 (true -> turno_St_16_Dia)(false -> turno_St_16_Noite);
  ns_1 = merge ck_17_1 (true -> ns_St_16_Dia_1)(false -> ns_St_16_Noite_1);
  nr = merge ck_17_1 (true -> nr_St_16_Dia)(false -> nr_St_16_Noite);
  ck_1 = true fby ns_1;
  r_St_16_Dia =
    if (shift when true(ck_1)) then true else (pnr when true(ck_1));
  s_St_16_Dia_1 = if (shift when true(ck_1)) then false else true;
  r_St_16_Noite =
    if (shift when false(ck_1)) then true else (pnr when false(ck_1));
  s_St_16_Noite_1 = if (shift when false(ck_1)) then true else false;
  s_1 = merge ck_1 (true -> s_St_16_Dia_1)(false -> s_St_16_Noite_1);
  r = merge ck_1 (true -> r_St_16_Dia)(false -> r_St_16_Noite)
tel

node controller(shift_turno : bool; abre_porta : bool; p_arrived : bool)
returns (night : bool; p_open : bool; r_on1 : bool; presence : bool;
          pc_on : bool; w_open : bool; l_state : int; p_state : int;
          ar_state : int)
contract
  var rule7 : bool; rule6 : bool; rule5 : bool; rule4 : bool; rule3 : bool;
      rule2 : bool; v : bool; v_72 : bool; v_73 : bool; v_74 : bool;
      v_75 : bool; v_76 : bool; v_77 : bool; v_78 : bool; v_79 : bool;
      v_80 : bool; v_81 : bool; v_82 : bool; v_83 : bool; v_84 : bool;
      v_85 : bool; v_86 : bool; v_87 : bool; v_88 : bool; v_89 : bool;
      v_90 : bool; v_91 : bool; v_92 : bool; v_93 : bool; v_94 : bool;
      v_95 : bool; v_96 : bool; v_97 : bool; v_98 : bool; v_99 : bool;
  let
    v = not(night);
    v_72 = (presence & v);
    v_73 = not(v_72);
    v_74 = (ar_state = 1);
    rule7 = (v_73 or v_74);
    v_75 = not(r_on1);
    v_76 = not(pc_on);
    v_77 = (v_75 & v_76);
    v_78 = not(w_open);
    v_79 = (v_77 & v_78);
    v_80 = (l_state = 0);
    v_81 = (v_79 & v_80);
    v_82 = (p_state = 0);
    v_83 = (v_81 & v_82);
    v_84 = (ar_state = 0);
    v_85 = (v_83 & v_84);
    rule6 = (presence or v_85);
    v_86 = not(presence);
    v_87 = (v_86 & night);
    v_88 = (l_state = 2);
    rule5 = (v_87 or v_88);
    v_89 = not(presence);
    v_90 = (v_89 & night);
    rule4 = (v_90 or p_open);
    v_91 = not(night);
    v_92 = not(p_open);
    v_93 = (v_91 & v_92);
    rule3 = not(v_93);
    v_94 = not(p_open);
    v_95 = (presence & v_94);
    rule2 = not(v_95);
    v_96 = (rule2 & rule3);
    v_97 = (v_96 & rule4);
    v_98 = (v_97 & rule6);
    v_99 = (v_98 & rule7)
  tel
  assume true@ enforce v_99]
                 with (c_ar2 : bool; c_ar1 : bool; c_per2 : bool;
                        c_per1 : bool; c_luz2 : bool; c_luz1 : bool;
                        c_jan : bool; c_pc : bool; c_rot : bool;
                        c_porta : bool)
                 var v_338 : bool; v_337 : bool; v_336 : bool; v_335 : bool;
                     v_334 : bool; v_333 : bool; v_332 : int; v_331 : int;
                     ns_St_17_Max_2_0 : bool; ns_St_17_Max_2_1 : bool;
                     ns_St_17_Min_2_0 : bool; ns_St_17_Min_2_1 : bool;
                     ns_St_17_Off_2_0 : bool; ns_St_17_Off_2_1 : bool;
                     ck_34_2_0 : bool; ck_34_2_1 : bool; nr_St_17_Max : bool;
                     ns_St_17_Max_2 : bool; ns_St_17_Max_1 : bool;
                     ar_state_1_St_17_Max : int; nr_St_17_Min : bool;
                     ns_St_17_Min_2 : bool; ns_St_17_Min_1 : bool;
                     ar_state_1_St_17_Min : int; nr_St_17_Off : bool;
                     ns_St_17_Off_2 : bool; ns_St_17_Off_1 : bool;
                     ar_state_1_St_17_Off : int; ck_34_2 : bool;
                     ck_34_1 : bool; v_129_2_0 : bool; v_129_2_1 : bool;
                     v_130 : bool; v_129_2 : bool; v_129_1 : bool;
                     v_127_2_0 : bool; v_127_2_1 : bool; v_128 : bool;
                     v_127_2 : bool; v_127_1 : bool; v_126 : bool;
                     v_124_2_0 : bool; v_124_2_1 : bool; v_125 : bool;
                     v_124_2 : bool; v_124_1 : bool; v_123 : bool;
                     v_122 : bool; v_346 : bool; v_345 : bool; v_344 : bool;
                     v_343 : bool; v_342 : bool; v_341 : bool; v_340 : bool;
                     v_339 : bool; s_St_17_Max_2_0 : bool;
                     s_St_17_Max_2_1 : bool; s_St_17_Min_2_0 : bool;
                     s_St_17_Min_2_1 : bool; s_St_17_Off_2_0 : bool;
                     s_St_17_Off_2_1 : bool; ck_33_2_0 : bool;
                     ck_33_2_1 : bool; r_St_17_Max : bool;
                     s_St_17_Max_2 : bool; s_St_17_Max_1 : bool;
                     r_St_17_Min : bool; s_St_17_Min_2 : bool;
                     s_St_17_Min_1 : bool; r_St_17_Off : bool;
                     s_St_17_Off_2 : bool; s_St_17_Off_1 : bool;
                     ck_33_2 : bool; ck_33_1 : bool; v_354 : bool;
                     v_353 : bool; v_352 : bool; v_351 : bool; v_350 : bool;
                     v_349 : bool; v_348 : int; v_347 : int;
                     ns_1_St_18_Up_2_0 : bool; ns_1_St_18_Up_2_1 : bool;
                     ns_1_St_18_Mid_2_0 : bool; ns_1_St_18_Mid_2_1 : bool;
                     ns_1_St_18_Down_2_0 : bool; ns_1_St_18_Down_2_1 : bool;
                     ck_32_2_0 : bool; ck_32_2_1 : bool;
                     nr_1_St_18_Up : bool; ns_1_St_18_Up_2 : bool;
                     ns_1_St_18_Up_1 : bool; p_state_1_St_18_Up : int;
                     nr_1_St_18_Mid : bool; ns_1_St_18_Mid_2 : bool;
                     ns_1_St_18_Mid_1 : bool; p_state_1_St_18_Mid : int;
                     nr_1_St_18_Down : bool; ns_1_St_18_Down_2 : bool;
                     ns_1_St_18_Down_1 : bool; p_state_1_St_18_Down : int;
                     ck_32_2 : bool; ck_32_1 : bool; v_120_2_0 : bool;
                     v_120_2_1 : bool; v_121 : bool; v_120_2 : bool;
                     v_120_1 : bool; v_118_2_0 : bool; v_118_2_1 : bool;
                     v_119 : bool; v_118_2 : bool; v_118_1 : bool;
                     v_117 : bool; v_115_2_0 : bool; v_115_2_1 : bool;
                     v_116 : bool; v_115_2 : bool; v_115_1 : bool;
                     v_114 : bool; v_113 : bool; v_362 : bool; v_361 : bool;
                     v_360 : bool; v_359 : bool; v_358 : bool; v_357 : bool;
                     v_356 : bool; v_355 : bool; s_1_St_18_Up_2_0 : bool;
                     s_1_St_18_Up_2_1 : bool; s_1_St_18_Mid_2_0 : bool;
                     s_1_St_18_Mid_2_1 : bool; s_1_St_18_Down_2_0 : bool;
                     s_1_St_18_Down_2_1 : bool; ck_31_2_0 : bool;
                     ck_31_2_1 : bool; r_1_St_18_Up : bool;
                     s_1_St_18_Up_2 : bool; s_1_St_18_Up_1 : bool;
                     r_1_St_18_Mid : bool; s_1_St_18_Mid_2 : bool;
                     s_1_St_18_Mid_1 : bool; r_1_St_18_Down : bool;
                     s_1_St_18_Down_2 : bool; s_1_St_18_Down_1 : bool;
                     ck_31_2 : bool; ck_31_1 : bool; v_370 : bool;
                     v_369 : bool; v_368 : bool; v_367 : bool; v_366 : bool;
                     v_365 : bool; v_364 : int; v_363 : int;
                     ns_2_St_19_All_2_0 : bool; ns_2_St_19_All_2_1 : bool;
                     ns_2_St_19_Some_2_0 : bool; ns_2_St_19_Some_2_1 : bool;
                     ns_2_St_19_None_2_0 : bool; ns_2_St_19_None_2_1 : bool;
                     ck_30_2_0 : bool; ck_30_2_1 : bool;
                     nr_2_St_19_All : bool; ns_2_St_19_All_2 : bool;
                     ns_2_St_19_All_1 : bool; l_state_1_St_19_All : int;
                     nr_2_St_19_Some : bool; ns_2_St_19_Some_2 : bool;
                     ns_2_St_19_Some_1 : bool; l_state_1_St_19_Some : int;
                     nr_2_St_19_None : bool; ns_2_St_19_None_2 : bool;
                     ns_2_St_19_None_1 : bool; l_state_1_St_19_None : int;
                     ck_30_2 : bool; ck_30_1 : bool; v_111_2_0 : bool;
                     v_111_2_1 : bool; v_112 : bool; v_111_2 : bool;
                     v_111_1 : bool; v_109_2_0 : bool; v_109_2_1 : bool;
                     v_110 : bool; v_109_2 : bool; v_109_1 : bool;
                     v_108 : bool; v_106_2_0 : bool; v_106_2_1 : bool;
                     v_107 : bool; v_106_2 : bool; v_106_1 : bool;
                     v_105 : bool; v_104 : bool; v_378 : bool; v_377 : bool;
                     v_376 : bool; v_375 : bool; v_374 : bool; v_373 : bool;
                     v_372 : bool; v_371 : bool; s_2_St_19_All_2_0 : bool;
                     s_2_St_19_All_2_1 : bool; s_2_St_19_Some_2_0 : bool;
                     s_2_St_19_Some_2_1 : bool; s_2_St_19_None_2_0 : bool;
                     s_2_St_19_None_2_1 : bool; ck_29_2_0 : bool;
                     ck_29_2_1 : bool; r_2_St_19_All : bool;
                     s_2_St_19_All_2 : bool; s_2_St_19_All_1 : bool;
                     r_2_St_19_Some : bool; s_2_St_19_Some_2 : bool;
                     s_2_St_19_Some_1 : bool; r_2_St_19_None : bool;
                     s_2_St_19_None_2 : bool; s_2_St_19_None_1 : bool;
                     ck_29_2 : bool; ck_29_1 : bool; nr_3_St_20_Open : bool;
                     ns_3_St_20_Open_1 : bool; w_open_1_St_20_Open : bool;
                     nr_3_St_20_Closed : bool; ns_3_St_20_Closed_1 : bool;
                     w_open_1_St_20_Closed : bool; ck_28_1 : bool;
                     v_103 : bool; r_3_St_20_Open : bool;
                     s_3_St_20_Open_1 : bool; r_3_St_20_Closed : bool;
                     s_3_St_20_Closed_1 : bool; ck_27_1 : bool;
                     nr_4_St_21_On : bool; ns_4_St_21_On_1 : bool;
                     pc_on_1_St_21_On : bool; nr_4_St_21_Off : bool;
                     ns_4_St_21_Off_1 : bool; pc_on_1_St_21_Off : bool;
                     ck_26_1 : bool; v_102 : bool; r_4_St_21_On : bool;
                     s_4_St_21_On_1 : bool; r_4_St_21_Off : bool;
                     s_4_St_21_Off_1 : bool; ck_25_1 : bool;
                     nr_5_St_22_Preent : bool; ns_5_St_22_Preent_1 : bool;
                     presence_1_St_22_Preent : bool;
                     nr_5_St_22_Not_Present : bool;
                     ns_5_St_22_Not_Present_1 : bool;
                     presence_1_St_22_Not_Present : bool; ck_24_1 : bool;
                     r_5_St_22_Preent : bool; s_5_St_22_Preent_1 : bool;
                     r_5_St_22_Not_Present : bool;
                     s_5_St_22_Not_Present_1 : bool; ck_23_1 : bool;
                     nr_6_St_23_On : bool; ns_6_St_23_On_1 : bool;
                     r_on_St_23_On : bool; nr_6_St_23_Off : bool;
                     ns_6_St_23_Off_1 : bool; r_on_St_23_Off : bool;
                     ck_22_1 : bool; v_101 : bool; r_6_St_23_On : bool;
                     s_6_St_23_On_1 : bool; r_6_St_23_Off : bool;
                     s_6_St_23_Off_1 : bool; ck_21_1 : bool;
                     nr_7_St_24_Open : bool; ns_7_St_24_Open_1 : bool;
                     porta_open_St_24_Open : bool; nr_7_St_24_Closed : bool;
                     ns_7_St_24_Closed_1 : bool;
                     porta_open_St_24_Closed : bool; ck_20_1 : bool;
                     v_100 : bool; r_7_St_24_Open : bool;
                     s_7_St_24_Open_1 : bool; r_7_St_24_Closed : bool;
                     s_7_St_24_Closed_1 : bool; ck_19_1 : bool;
                     nr_8_St_25_Noite : bool; ns_8_St_25_Noite_1 : bool;
                     turno_St_25_Noite : bool; nr_8_St_25_Dia : bool;
                     ns_8_St_25_Dia_1 : bool; turno_St_25_Dia : bool;
                     ck_18_1 : bool; r_8_St_25_Noite : bool;
                     s_8_St_25_Noite_1 : bool; r_8_St_25_Dia : bool;
                     s_8_St_25_Dia_1 : bool; ck_1 : bool; s_2_2_0 : bool;
                     s_2_2_1 : bool; ns_2_2_0 : bool; ns_2_2_1 : bool;
                     s_1_2_0 : bool; s_1_2_1 : bool; ns_1_2_0 : bool;
                     ns_1_2_1 : bool; s_2_3_0 : bool; s_2_3_1 : bool;
                     ns_2_3_0 : bool; ns_2_3_1 : bool; s_8_1 : bool;
                     ns_8_1 : bool; r_8 : bool; nr_8 : bool; pnr_8 : bool;
                     s_7_1 : bool; ns_7_1 : bool; r_7 : bool; nr_7 : bool;
                     pnr_7 : bool; s_6_1 : bool; ns_6_1 : bool; r_6 : bool;
                     nr_6 : bool; pnr_6 : bool; s_5_1 : bool; ns_5_1 : bool;
                     r_5 : bool; nr_5 : bool; pnr_5 : bool; s_4_1 : bool;
                     ns_4_1 : bool; r_4 : bool; nr_4 : bool; pnr_4 : bool;
                     s_3_1 : bool; ns_3_1 : bool; r_3 : bool; nr_3 : bool;
                     pnr_3 : bool; s_2_2 : bool; s_2_1 : bool; ns_2_2 : bool;
                     ns_2_1 : bool; r_2 : bool; nr_2 : bool; pnr_2 : bool;
                     s_1_2 : bool; s_1_1 : bool; ns_1_2 : bool;
                     ns_1_1 : bool; r_1 : bool; nr_1 : bool; pnr_1 : bool;
                     s_2_3 : bool; s_1_3 : bool; ns_2_3 : bool;
                     ns_1_3 : bool; r : bool; nr : bool; pnr : bool;
                     c1_2 : bool; c2_2 : bool; ar_state_1 : int; c1_1 : bool;
                     c2_1 : bool; p_state_1 : int; c1 : bool; c2 : bool;
                     l_state_1 : int; c_2 : bool; w_open_1 : bool;
                     c_1 : bool; pc_on_1 : bool; arrived : bool;
                     presence_1 : bool; c : bool; r_on : bool; push : bool;
                     c_porta_1 : bool; porta_open : bool; shift : bool;
                     turno : bool;
  let
    c1_2 = c_ar1;
    c2_2 = c_ar2;
    pnr = false fby nr;
    ck_34_1 = s_1_3;
    ck_34_2 = s_2_3;
    ar_state_1_St_17_Off = 0;
    nr_St_17_Off = false;
    ns_St_17_Off_1 = false;
    ns_St_17_Off_2 = false;
    ar_state_1_St_17_Min = 1;
    nr_St_17_Min = false;
    ns_St_17_Min_1 = true;
    ns_St_17_Min_2 = false;
    ar_state_1_St_17_Max = 2;
    nr_St_17_Max = false;
    ns_St_17_Max_1 = true;
    ns_St_17_Max_2 = true;
    v_331 =
      merge ck_34_2_1
        (true -> ar_state_1_St_17_Max)(false -> ar_state_1_St_17_Min);
    v_332 =
      merge ck_34_2_0
        (true -> ((0 when false(ck_34_1)) when true(ck_34_2_0)))
        (false -> ar_state_1_St_17_Off);
    ar_state_1 = merge ck_34_1 (true -> v_331)(false -> v_332);
    v_333 = merge ck_34_2_1 (true -> ns_St_17_Max_1)(false -> ns_St_17_Min_1);
    v_334 = merge ck_34_2_1 (true -> ns_St_17_Max_2)(false -> ns_St_17_Min_2);
    v_335 =
      merge ck_34_2_0
        (true -> ((true when false(ck_34_1)) when true(ck_34_2_0)))
        (false -> ns_St_17_Off_1);
    v_336 =
      merge ck_34_2_0
        (true -> ((true when false(ck_34_1)) when true(ck_34_2_0)))
        (false -> ns_St_17_Off_2);
    ns_1_3 = merge ck_34_1 (true -> v_333)(false -> v_335);
    ns_2_3 = merge ck_34_1 (true -> v_334)(false -> v_336);
    v_337 = merge ck_34_2_1 (true -> nr_St_17_Max)(false -> nr_St_17_Min);
    v_338 =
      merge ck_34_2_0
        (true -> ((true when false(ck_34_1)) when true(ck_34_2_0)))
        (false -> nr_St_17_Off);
    nr = merge ck_34_1 (true -> v_337)(false -> v_338);
    ck_34_2_1 = (ck_34_2 when true(ck_34_1));
    ck_34_2_0 = (ck_34_2 when false(ck_34_1));
    ns_St_17_Off_2_1 = (ns_St_17_Off_2 when true(ns_St_17_Off_1));
    ns_St_17_Off_2_0 = (ns_St_17_Off_2 when false(ns_St_17_Off_1));
    ns_St_17_Min_2_1 = (ns_St_17_Min_2 when true(ns_St_17_Min_1));
    ns_St_17_Min_2_0 = (ns_St_17_Min_2 when false(ns_St_17_Min_1));
    ns_St_17_Max_2_1 = (ns_St_17_Max_2 when true(ns_St_17_Max_1));
    ns_St_17_Max_2_0 = (ns_St_17_Max_2 when false(ns_St_17_Max_1));
    v_339 = false fby ns_1_3;
    v_340 = false fby ns_2_3;
    ck_33_1 = v_339;
    ck_33_2 = v_340;
    r_St_17_Off =
      if ((c1_2 when false(ck_33_1)) when false(ck_33_2_0))
      then true
      else v_130;
    s_St_17_Off_1 =
      if ((c1_2 when false(ck_33_1)) when false(ck_33_2_0))
      then true
      else v_129_1;
    s_St_17_Off_2 =
      if ((c1_2 when false(ck_33_1)) when false(ck_33_2_0))
      then false
      else v_129_2;
    v_130 =
      if ((c2_2 when false(ck_33_1)) when false(ck_33_2_0))
      then true
      else ((pnr when false(ck_33_1)) when false(ck_33_2_0));
    v_129_1 =
      if ((c2_2 when false(ck_33_1)) when false(ck_33_2_0))
      then true
      else false;
    v_129_2 =
      if ((c2_2 when false(ck_33_1)) when false(ck_33_2_0))
      then true
      else false;
    v_129_2_1 = (v_129_2 when true(v_129_1));
    v_129_2_0 = (v_129_2 when false(v_129_1));
    r_St_17_Min = if v_126 then true else v_128;
    s_St_17_Min_1 = if v_126 then false else v_127_1;
    s_St_17_Min_2 = if v_126 then false else v_127_2;
    v_128 =
      if ((c2_2 when true(ck_33_1)) when false(ck_33_2_1))
      then true
      else ((pnr when true(ck_33_1)) when false(ck_33_2_1));
    v_127_1 =
      if ((c2_2 when true(ck_33_1)) when false(ck_33_2_1))
      then true
      else true;
    v_127_2 =
      if ((c2_2 when true(ck_33_1)) when false(ck_33_2_1))
      then true
      else false;
    v_126 = not(((c1_2 when true(ck_33_1)) when false(ck_33_2_1)));
    v_127_2_1 = (v_127_2 when true(v_127_1));
    v_127_2_0 = (v_127_2 when false(v_127_1));
    r_St_17_Max = if v_122 then true else v_125;
    s_St_17_Max_1 = if v_122 then true else v_124_1;
    s_St_17_Max_2 = if v_122 then false else v_124_2;
    v_125 =
      if v_123 then true else ((pnr when true(ck_33_1)) when true(ck_33_2_1));
    v_124_1 = if v_123 then false else true;
    v_124_2 = if v_123 then false else true;
    v_123 = not(((c2_2 when true(ck_33_1)) when true(ck_33_2_1)));
    v_122 = not(((c1_2 when true(ck_33_1)) when true(ck_33_2_1)));
    v_124_2_1 = (v_124_2 when true(v_124_1));
    v_124_2_0 = (v_124_2 when false(v_124_1));
    v_341 = merge ck_33_2_1 (true -> s_St_17_Max_1)(false -> s_St_17_Min_1);
    v_342 = merge ck_33_2_1 (true -> s_St_17_Max_2)(false -> s_St_17_Min_2);
    v_343 =
      merge ck_33_2_0
        (true -> ((true when false(ck_33_1)) when true(ck_33_2_0)))
        (false -> s_St_17_Off_1);
    v_344 =
      merge ck_33_2_0
        (true -> ((true when false(ck_33_1)) when true(ck_33_2_0)))
        (false -> s_St_17_Off_2);
    s_1_3 = merge ck_33_1 (true -> v_341)(false -> v_343);
    s_2_3 = merge ck_33_1 (true -> v_342)(false -> v_344);
    v_345 = merge ck_33_2_1 (true -> r_St_17_Max)(false -> r_St_17_Min);
    v_346 =
      merge ck_33_2_0
        (true -> ((true when false(ck_33_1)) when true(ck_33_2_0)))
        (false -> r_St_17_Off);
    r = merge ck_33_1 (true -> v_345)(false -> v_346);
    ck_33_2_1 = (ck_33_2 when true(ck_33_1));
    ck_33_2_0 = (ck_33_2 when false(ck_33_1));
    s_St_17_Off_2_1 = (s_St_17_Off_2 when true(s_St_17_Off_1));
    s_St_17_Off_2_0 = (s_St_17_Off_2 when false(s_St_17_Off_1));
    s_St_17_Min_2_1 = (s_St_17_Min_2 when true(s_St_17_Min_1));
    s_St_17_Min_2_0 = (s_St_17_Min_2 when false(s_St_17_Min_1));
    s_St_17_Max_2_1 = (s_St_17_Max_2 when true(s_St_17_Max_1));
    s_St_17_Max_2_0 = (s_St_17_Max_2 when false(s_St_17_Max_1));
    c1_1 = c_per1;
    c2_1 = c_per2;
    pnr_1 = false fby nr_1;
    ck_32_1 = s_1_1;
    ck_32_2 = s_1_2;
    p_state_1_St_18_Down = 0;
    nr_1_St_18_Down = false;
    ns_1_St_18_Down_1 = true;
    ns_1_St_18_Down_2 = true;
    p_state_1_St_18_Mid = 1;
    nr_1_St_18_Mid = false;
    ns_1_St_18_Mid_1 = true;
    ns_1_St_18_Mid_2 = false;
    p_state_1_St_18_Up = 2;
    nr_1_St_18_Up = false;
    ns_1_St_18_Up_1 = false;
    ns_1_St_18_Up_2 = false;
    v_347 =
      merge ck_32_2_1
        (true -> p_state_1_St_18_Down)(false -> p_state_1_St_18_Mid);
    v_348 =
      merge ck_32_2_0
        (true -> ((0 when false(ck_32_1)) when true(ck_32_2_0)))
        (false -> p_state_1_St_18_Up);
    p_state_1 = merge ck_32_1 (true -> v_347)(false -> v_348);
    v_349 =
      merge ck_32_2_1 (true -> ns_1_St_18_Down_1)(false -> ns_1_St_18_Mid_1);
    v_350 =
      merge ck_32_2_1 (true -> ns_1_St_18_Down_2)(false -> ns_1_St_18_Mid_2);
    v_351 =
      merge ck_32_2_0
        (true -> ((true when false(ck_32_1)) when true(ck_32_2_0)))
        (false -> ns_1_St_18_Up_1);
    v_352 =
      merge ck_32_2_0
        (true -> ((true when false(ck_32_1)) when true(ck_32_2_0)))
        (false -> ns_1_St_18_Up_2);
    ns_1_1 = merge ck_32_1 (true -> v_349)(false -> v_351);
    ns_1_2 = merge ck_32_1 (true -> v_350)(false -> v_352);
    v_353 =
      merge ck_32_2_1 (true -> nr_1_St_18_Down)(false -> nr_1_St_18_Mid);
    v_354 =
      merge ck_32_2_0
        (true -> ((true when false(ck_32_1)) when true(ck_32_2_0)))
        (false -> nr_1_St_18_Up);
    nr_1 = merge ck_32_1 (true -> v_353)(false -> v_354);
    ck_32_2_1 = (ck_32_2 when true(ck_32_1));
    ck_32_2_0 = (ck_32_2 when false(ck_32_1));
    ns_1_St_18_Down_2_1 = (ns_1_St_18_Down_2 when true(ns_1_St_18_Down_1));
    ns_1_St_18_Down_2_0 = (ns_1_St_18_Down_2 when false(ns_1_St_18_Down_1));
    ns_1_St_18_Mid_2_1 = (ns_1_St_18_Mid_2 when true(ns_1_St_18_Mid_1));
    ns_1_St_18_Mid_2_0 = (ns_1_St_18_Mid_2 when false(ns_1_St_18_Mid_1));
    ns_1_St_18_Up_2_1 = (ns_1_St_18_Up_2 when true(ns_1_St_18_Up_1));
    ns_1_St_18_Up_2_0 = (ns_1_St_18_Up_2 when false(ns_1_St_18_Up_1));
    v_355 = true fby ns_1_1;
    v_356 = true fby ns_1_2;
    ck_31_1 = v_355;
    ck_31_2 = v_356;
    r_1_St_18_Down =
      if ((c1_1 when true(ck_31_1)) when true(ck_31_2_1))
      then true
      else v_121;
    s_1_St_18_Down_1 =
      if ((c1_1 when true(ck_31_1)) when true(ck_31_2_1))
      then true
      else v_120_1;
    s_1_St_18_Down_2 =
      if ((c1_1 when true(ck_31_1)) when true(ck_31_2_1))
      then false
      else v_120_2;
    v_121 =
      if ((c2_1 when true(ck_31_1)) when true(ck_31_2_1))
      then true
      else ((pnr_1 when true(ck_31_1)) when true(ck_31_2_1));
    v_120_1 =
      if ((c2_1 when true(ck_31_1)) when true(ck_31_2_1))
      then false
      else true;
    v_120_2 =
      if ((c2_1 when true(ck_31_1)) when true(ck_31_2_1))
      then false
      else true;
    v_120_2_1 = (v_120_2 when true(v_120_1));
    v_120_2_0 = (v_120_2 when false(v_120_1));
    r_1_St_18_Mid = if v_117 then true else v_119;
    s_1_St_18_Mid_1 = if v_117 then true else v_118_1;
    s_1_St_18_Mid_2 = if v_117 then true else v_118_2;
    v_119 =
      if ((c2_1 when true(ck_31_1)) when false(ck_31_2_1))
      then true
      else ((pnr_1 when true(ck_31_1)) when false(ck_31_2_1));
    v_118_1 =
      if ((c2_1 when true(ck_31_1)) when false(ck_31_2_1))
      then false
      else true;
    v_118_2 =
      if ((c2_1 when true(ck_31_1)) when false(ck_31_2_1))
      then false
      else false;
    v_117 = not(((c1_1 when true(ck_31_1)) when false(ck_31_2_1)));
    v_118_2_1 = (v_118_2 when true(v_118_1));
    v_118_2_0 = (v_118_2 when false(v_118_1));
    r_1_St_18_Up = if v_113 then true else v_116;
    s_1_St_18_Up_1 = if v_113 then true else v_115_1;
    s_1_St_18_Up_2 = if v_113 then false else v_115_2;
    v_116 =
      if v_114
      then true
      else ((pnr_1 when false(ck_31_1)) when false(ck_31_2_0));
    v_115_1 = if v_114 then true else false;
    v_115_2 = if v_114 then true else false;
    v_114 = not(((c2_1 when false(ck_31_1)) when false(ck_31_2_0)));
    v_113 = not(((c1_1 when false(ck_31_1)) when false(ck_31_2_0)));
    v_115_2_1 = (v_115_2 when true(v_115_1));
    v_115_2_0 = (v_115_2 when false(v_115_1));
    v_357 =
      merge ck_31_2_1 (true -> s_1_St_18_Down_1)(false -> s_1_St_18_Mid_1);
    v_358 =
      merge ck_31_2_1 (true -> s_1_St_18_Down_2)(false -> s_1_St_18_Mid_2);
    v_359 =
      merge ck_31_2_0
        (true -> ((true when false(ck_31_1)) when true(ck_31_2_0)))
        (false -> s_1_St_18_Up_1);
    v_360 =
      merge ck_31_2_0
        (true -> ((true when false(ck_31_1)) when true(ck_31_2_0)))
        (false -> s_1_St_18_Up_2);
    s_1_1 = merge ck_31_1 (true -> v_357)(false -> v_359);
    s_1_2 = merge ck_31_1 (true -> v_358)(false -> v_360);
    v_361 = merge ck_31_2_1 (true -> r_1_St_18_Down)(false -> r_1_St_18_Mid);
    v_362 =
      merge ck_31_2_0
        (true -> ((true when false(ck_31_1)) when true(ck_31_2_0)))
        (false -> r_1_St_18_Up);
    r_1 = merge ck_31_1 (true -> v_361)(false -> v_362);
    ck_31_2_1 = (ck_31_2 when true(ck_31_1));
    ck_31_2_0 = (ck_31_2 when false(ck_31_1));
    s_1_St_18_Down_2_1 = (s_1_St_18_Down_2 when true(s_1_St_18_Down_1));
    s_1_St_18_Down_2_0 = (s_1_St_18_Down_2 when false(s_1_St_18_Down_1));
    s_1_St_18_Mid_2_1 = (s_1_St_18_Mid_2 when true(s_1_St_18_Mid_1));
    s_1_St_18_Mid_2_0 = (s_1_St_18_Mid_2 when false(s_1_St_18_Mid_1));
    s_1_St_18_Up_2_1 = (s_1_St_18_Up_2 when true(s_1_St_18_Up_1));
    s_1_St_18_Up_2_0 = (s_1_St_18_Up_2 when false(s_1_St_18_Up_1));
    c1 = c_luz1;
    c2 = c_luz2;
    pnr_2 = false fby nr_2;
    ck_30_1 = s_2_1;
    ck_30_2 = s_2_2;
    l_state_1_St_19_None = 0;
    nr_2_St_19_None = false;
    ns_2_St_19_None_1 = true;
    ns_2_St_19_None_2 = false;
    l_state_1_St_19_Some = 1;
    nr_2_St_19_Some = false;
    ns_2_St_19_Some_1 = false;
    ns_2_St_19_Some_2 = false;
    l_state_1_St_19_All = 2;
    nr_2_St_19_All = false;
    ns_2_St_19_All_1 = true;
    ns_2_St_19_All_2 = true;
    v_363 =
      merge ck_30_2_1
        (true -> l_state_1_St_19_All)(false -> l_state_1_St_19_None);
    v_364 =
      merge ck_30_2_0
        (true -> ((0 when false(ck_30_1)) when true(ck_30_2_0)))
        (false -> l_state_1_St_19_Some);
    l_state_1 = merge ck_30_1 (true -> v_363)(false -> v_364);
    v_365 =
      merge ck_30_2_1 (true -> ns_2_St_19_All_1)(false -> ns_2_St_19_None_1);
    v_366 =
      merge ck_30_2_1 (true -> ns_2_St_19_All_2)(false -> ns_2_St_19_None_2);
    v_367 =
      merge ck_30_2_0
        (true -> ((true when false(ck_30_1)) when true(ck_30_2_0)))
        (false -> ns_2_St_19_Some_1);
    v_368 =
      merge ck_30_2_0
        (true -> ((true when false(ck_30_1)) when true(ck_30_2_0)))
        (false -> ns_2_St_19_Some_2);
    ns_2_1 = merge ck_30_1 (true -> v_365)(false -> v_367);
    ns_2_2 = merge ck_30_1 (true -> v_366)(false -> v_368);
    v_369 =
      merge ck_30_2_1 (true -> nr_2_St_19_All)(false -> nr_2_St_19_None);
    v_370 =
      merge ck_30_2_0
        (true -> ((true when false(ck_30_1)) when true(ck_30_2_0)))
        (false -> nr_2_St_19_Some);
    nr_2 = merge ck_30_1 (true -> v_369)(false -> v_370);
    ck_30_2_1 = (ck_30_2 when true(ck_30_1));
    ck_30_2_0 = (ck_30_2 when false(ck_30_1));
    ns_2_St_19_None_2_1 = (ns_2_St_19_None_2 when true(ns_2_St_19_None_1));
    ns_2_St_19_None_2_0 = (ns_2_St_19_None_2 when false(ns_2_St_19_None_1));
    ns_2_St_19_Some_2_1 = (ns_2_St_19_Some_2 when true(ns_2_St_19_Some_1));
    ns_2_St_19_Some_2_0 = (ns_2_St_19_Some_2 when false(ns_2_St_19_Some_1));
    ns_2_St_19_All_2_1 = (ns_2_St_19_All_2 when true(ns_2_St_19_All_1));
    ns_2_St_19_All_2_0 = (ns_2_St_19_All_2 when false(ns_2_St_19_All_1));
    v_371 = true fby ns_2_1;
    v_372 = false fby ns_2_2;
    ck_29_1 = v_371;
    ck_29_2 = v_372;
    r_2_St_19_None =
      if ((c1 when true(ck_29_1)) when false(ck_29_2_1)) then true else v_112;
    s_2_St_19_None_1 =
      if ((c1 when true(ck_29_1)) when false(ck_29_2_1))
      then false
      else v_111_1;
    s_2_St_19_None_2 =
      if ((c1 when true(ck_29_1)) when false(ck_29_2_1))
      then false
      else v_111_2;
    v_112 =
      if ((c2 when true(ck_29_1)) when false(ck_29_2_1))
      then true
      else ((pnr_2 when true(ck_29_1)) when false(ck_29_2_1));
    v_111_1 =
      if ((c2 when true(ck_29_1)) when false(ck_29_2_1)) then true else true;
    v_111_2 =
      if ((c2 when true(ck_29_1)) when false(ck_29_2_1)) then true else false;
    v_111_2_1 = (v_111_2 when true(v_111_1));
    v_111_2_0 = (v_111_2 when false(v_111_1));
    r_2_St_19_Some = if v_108 then true else v_110;
    s_2_St_19_Some_1 = if v_108 then true else v_109_1;
    s_2_St_19_Some_2 = if v_108 then false else v_109_2;
    v_110 =
      if ((c2 when false(ck_29_1)) when false(ck_29_2_0))
      then true
      else ((pnr_2 when false(ck_29_1)) when false(ck_29_2_0));
    v_109_1 =
      if ((c2 when false(ck_29_1)) when false(ck_29_2_0))
      then true
      else false;
    v_109_2 =
      if ((c2 when false(ck_29_1)) when false(ck_29_2_0))
      then true
      else false;
    v_108 = not(((c1 when false(ck_29_1)) when false(ck_29_2_0)));
    v_109_2_1 = (v_109_2 when true(v_109_1));
    v_109_2_0 = (v_109_2 when false(v_109_1));
    r_2_St_19_All = if v_104 then true else v_107;
    s_2_St_19_All_1 = if v_104 then false else v_106_1;
    s_2_St_19_All_2 = if v_104 then false else v_106_2;
    v_107 =
      if v_105
      then true
      else ((pnr_2 when true(ck_29_1)) when true(ck_29_2_1));
    v_106_1 = if v_105 then true else true;
    v_106_2 = if v_105 then false else true;
    v_105 = not(((c2 when true(ck_29_1)) when true(ck_29_2_1)));
    v_104 = not(((c1 when true(ck_29_1)) when true(ck_29_2_1)));
    v_106_2_1 = (v_106_2 when true(v_106_1));
    v_106_2_0 = (v_106_2 when false(v_106_1));
    v_373 =
      merge ck_29_2_1 (true -> s_2_St_19_All_1)(false -> s_2_St_19_None_1);
    v_374 =
      merge ck_29_2_1 (true -> s_2_St_19_All_2)(false -> s_2_St_19_None_2);
    v_375 =
      merge ck_29_2_0
        (true -> ((true when false(ck_29_1)) when true(ck_29_2_0)))
        (false -> s_2_St_19_Some_1);
    v_376 =
      merge ck_29_2_0
        (true -> ((true when false(ck_29_1)) when true(ck_29_2_0)))
        (false -> s_2_St_19_Some_2);
    s_2_1 = merge ck_29_1 (true -> v_373)(false -> v_375);
    s_2_2 = merge ck_29_1 (true -> v_374)(false -> v_376);
    v_377 = merge ck_29_2_1 (true -> r_2_St_19_All)(false -> r_2_St_19_None);
    v_378 =
      merge ck_29_2_0
        (true -> ((true when false(ck_29_1)) when true(ck_29_2_0)))
        (false -> r_2_St_19_Some);
    r_2 = merge ck_29_1 (true -> v_377)(false -> v_378);
    ck_29_2_1 = (ck_29_2 when true(ck_29_1));
    ck_29_2_0 = (ck_29_2 when false(ck_29_1));
    s_2_St_19_None_2_1 = (s_2_St_19_None_2 when true(s_2_St_19_None_1));
    s_2_St_19_None_2_0 = (s_2_St_19_None_2 when false(s_2_St_19_None_1));
    s_2_St_19_Some_2_1 = (s_2_St_19_Some_2 when true(s_2_St_19_Some_1));
    s_2_St_19_Some_2_0 = (s_2_St_19_Some_2 when false(s_2_St_19_Some_1));
    s_2_St_19_All_2_1 = (s_2_St_19_All_2 when true(s_2_St_19_All_1));
    s_2_St_19_All_2_0 = (s_2_St_19_All_2 when false(s_2_St_19_All_1));
    c_2 = c_jan;
    pnr_3 = false fby nr_3;
    ck_28_1 = s_3_1;
    w_open_1_St_20_Closed = false;
    nr_3_St_20_Closed = false;
    ns_3_St_20_Closed_1 = true;
    w_open_1_St_20_Open = true;
    nr_3_St_20_Open = false;
    ns_3_St_20_Open_1 = false;
    w_open_1 =
      merge ck_28_1
        (true -> w_open_1_St_20_Closed)(false -> w_open_1_St_20_Open);
    ns_3_1 =
      merge ck_28_1 (true -> ns_3_St_20_Closed_1)(false -> ns_3_St_20_Open_1);
    nr_3 =
      merge ck_28_1 (true -> nr_3_St_20_Closed)(false -> nr_3_St_20_Open);
    ck_27_1 = true fby ns_3_1;
    r_3_St_20_Closed =
      if (c_2 when true(ck_27_1)) then true else (pnr_3 when true(ck_27_1));
    s_3_St_20_Closed_1 = if (c_2 when true(ck_27_1)) then false else true;
    r_3_St_20_Open = if v_103 then true else (pnr_3 when false(ck_27_1));
    s_3_St_20_Open_1 = if v_103 then true else false;
    v_103 = not((c_2 when false(ck_27_1)));
    s_3_1 =
      merge ck_27_1 (true -> s_3_St_20_Closed_1)(false -> s_3_St_20_Open_1);
    r_3 = merge ck_27_1 (true -> r_3_St_20_Closed)(false -> r_3_St_20_Open);
    c_1 = c_pc;
    pnr_4 = false fby nr_4;
    ck_26_1 = s_4_1;
    pc_on_1_St_21_Off = false;
    nr_4_St_21_Off = false;
    ns_4_St_21_Off_1 = true;
    pc_on_1_St_21_On = true;
    nr_4_St_21_On = false;
    ns_4_St_21_On_1 = false;
    pc_on_1 =
      merge ck_26_1 (true -> pc_on_1_St_21_Off)(false -> pc_on_1_St_21_On);
    ns_4_1 =
      merge ck_26_1 (true -> ns_4_St_21_Off_1)(false -> ns_4_St_21_On_1);
    nr_4 = merge ck_26_1 (true -> nr_4_St_21_Off)(false -> nr_4_St_21_On);
    ck_25_1 = true fby ns_4_1;
    r_4_St_21_Off =
      if (c_1 when true(ck_25_1)) then true else (pnr_4 when true(ck_25_1));
    s_4_St_21_Off_1 = if (c_1 when true(ck_25_1)) then false else true;
    r_4_St_21_On = if v_102 then true else (pnr_4 when false(ck_25_1));
    s_4_St_21_On_1 = if v_102 then true else false;
    v_102 = not((c_1 when false(ck_25_1)));
    s_4_1 = merge ck_25_1 (true -> s_4_St_21_Off_1)(false -> s_4_St_21_On_1);
    r_4 = merge ck_25_1 (true -> r_4_St_21_Off)(false -> r_4_St_21_On);
    arrived = p_arrived;
    pnr_5 = false fby nr_5;
    ck_24_1 = s_5_1;
    presence_1_St_22_Not_Present = false;
    nr_5_St_22_Not_Present = false;
    ns_5_St_22_Not_Present_1 = true;
    presence_1_St_22_Preent = true;
    nr_5_St_22_Preent = false;
    ns_5_St_22_Preent_1 = false;
    presence_1 =
      merge ck_24_1
        (true -> presence_1_St_22_Not_Present)
        (false -> presence_1_St_22_Preent);
    ns_5_1 =
      merge ck_24_1
        (true -> ns_5_St_22_Not_Present_1)(false -> ns_5_St_22_Preent_1);
    nr_5 =
      merge ck_24_1
        (true -> nr_5_St_22_Not_Present)(false -> nr_5_St_22_Preent);
    ck_23_1 = true fby ns_5_1;
    r_5_St_22_Not_Present =
      if (arrived when true(ck_23_1))
      then true
      else (pnr_5 when true(ck_23_1));
    s_5_St_22_Not_Present_1 =
      if (arrived when true(ck_23_1)) then false else true;
    r_5_St_22_Preent =
      if (arrived when false(ck_23_1))
      then true
      else (pnr_5 when false(ck_23_1));
    s_5_St_22_Preent_1 =
      if (arrived when false(ck_23_1)) then true else false;
    s_5_1 =
      merge ck_23_1
        (true -> s_5_St_22_Not_Present_1)(false -> s_5_St_22_Preent_1);
    r_5 =
      merge ck_23_1
        (true -> r_5_St_22_Not_Present)(false -> r_5_St_22_Preent);
    c = c_rot;
    pnr_6 = false fby nr_6;
    ck_22_1 = s_6_1;
    r_on_St_23_Off = false;
    nr_6_St_23_Off = false;
    ns_6_St_23_Off_1 = true;
    r_on_St_23_On = true;
    nr_6_St_23_On = false;
    ns_6_St_23_On_1 = false;
    r_on = merge ck_22_1 (true -> r_on_St_23_Off)(false -> r_on_St_23_On);
    ns_6_1 =
      merge ck_22_1 (true -> ns_6_St_23_Off_1)(false -> ns_6_St_23_On_1);
    nr_6 = merge ck_22_1 (true -> nr_6_St_23_Off)(false -> nr_6_St_23_On);
    ck_21_1 = true fby ns_6_1;
    r_6_St_23_Off =
      if (c when true(ck_21_1)) then true else (pnr_6 when true(ck_21_1));
    s_6_St_23_Off_1 = if (c when true(ck_21_1)) then false else true;
    r_6_St_23_On = if v_101 then true else (pnr_6 when false(ck_21_1));
    s_6_St_23_On_1 = if v_101 then true else false;
    v_101 = not((c when false(ck_21_1)));
    s_6_1 = merge ck_21_1 (true -> s_6_St_23_Off_1)(false -> s_6_St_23_On_1);
    r_6 = merge ck_21_1 (true -> r_6_St_23_Off)(false -> r_6_St_23_On);
    push = abre_porta;
    c_porta_1 = c_porta;
    pnr_7 = false fby nr_7;
    ck_20_1 = s_7_1;
    porta_open_St_24_Closed = false;
    nr_7_St_24_Closed = false;
    ns_7_St_24_Closed_1 = true;
    porta_open_St_24_Open = true;
    nr_7_St_24_Open = false;
    ns_7_St_24_Open_1 = false;
    porta_open =
      merge ck_20_1
        (true -> porta_open_St_24_Closed)(false -> porta_open_St_24_Open);
    ns_7_1 =
      merge ck_20_1 (true -> ns_7_St_24_Closed_1)(false -> ns_7_St_24_Open_1);
    nr_7 =
      merge ck_20_1 (true -> nr_7_St_24_Closed)(false -> nr_7_St_24_Open);
    ck_19_1 = true fby ns_7_1;
    r_7_St_24_Closed = if v_100 then true else (pnr_7 when true(ck_19_1));
    s_7_St_24_Closed_1 = if v_100 then false else true;
    v_100 = not((c_porta_1 when true(ck_19_1)));
    r_7_St_24_Open =
      if (c_porta_1 when false(ck_19_1))
      then true
      else (pnr_7 when false(ck_19_1));
    s_7_St_24_Open_1 =
      if (c_porta_1 when false(ck_19_1)) then true else false;
    s_7_1 =
      merge ck_19_1 (true -> s_7_St_24_Closed_1)(false -> s_7_St_24_Open_1);
    r_7 = merge ck_19_1 (true -> r_7_St_24_Closed)(false -> r_7_St_24_Open);
    shift = shift_turno;
    pnr_8 = false fby nr_8;
    ck_18_1 = s_8_1;
    turno_St_25_Dia = false;
    nr_8_St_25_Dia = false;
    ns_8_St_25_Dia_1 = true;
    turno_St_25_Noite = true;
    nr_8_St_25_Noite = false;
    ns_8_St_25_Noite_1 = false;
    turno =
      merge ck_18_1 (true -> turno_St_25_Dia)(false -> turno_St_25_Noite);
    ns_8_1 =
      merge ck_18_1 (true -> ns_8_St_25_Dia_1)(false -> ns_8_St_25_Noite_1);
    nr_8 = merge ck_18_1 (true -> nr_8_St_25_Dia)(false -> nr_8_St_25_Noite);
    ck_1 = true fby ns_8_1;
    r_8_St_25_Dia =
      if (shift when true(ck_1)) then true else (pnr_8 when true(ck_1));
    s_8_St_25_Dia_1 = if (shift when true(ck_1)) then false else true;
    r_8_St_25_Noite =
      if (shift when false(ck_1)) then true else (pnr_8 when false(ck_1));
    s_8_St_25_Noite_1 = if (shift when false(ck_1)) then true else false;
    s_8_1 = merge ck_1 (true -> s_8_St_25_Dia_1)(false -> s_8_St_25_Noite_1);
    r_8 = merge ck_1 (true -> r_8_St_25_Dia)(false -> r_8_St_25_Noite);
    night = turno;
    p_open = porta_open;
    r_on1 = r_on;
    presence = presence_1;
    pc_on = pc_on_1;
    w_open = w_open_1;
    l_state = l_state_1;
    p_state = p_state_1;
    ar_state = ar_state_1;
    ns_2_3_1 = (ns_2_3 when true(ns_1_3));
    ns_2_3_0 = (ns_2_3 when false(ns_1_3));
    s_2_3_1 = (s_2_3 when true(s_1_3));
    s_2_3_0 = (s_2_3 when false(s_1_3));
    ns_1_2_1 = (ns_1_2 when true(ns_1_1));
    ns_1_2_0 = (ns_1_2 when false(ns_1_1));
    s_1_2_1 = (s_1_2 when true(s_1_1));
    s_1_2_0 = (s_1_2 when false(s_1_1));
    ns_2_2_1 = (ns_2_2 when true(ns_2_1));
    ns_2_2_0 = (ns_2_2 when false(ns_2_1));
    s_2_2_1 = (s_2_2 when true(s_2_1));
    s_2_2_0 = (s_2_2 when false(s_2_1))
  tel

