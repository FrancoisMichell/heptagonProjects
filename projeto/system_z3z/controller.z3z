% --- Generated the 14/8/2018 at 10:9 --- %
% --- heptagon compiler, version 1.03.00 (compiled mon. aug. 6 15:37:40 CET 2018) --- %
% --- Command line: /usr/local/bin/heptc -target c -target z3z -s controller system.ept --- %

set_reorder(2);read("Property.lib");read("Synthesis.lib");read("Verif_Determ.lib");read("Simul.lib");read("Synthesis_Partial_order.lib");read("Orbite.lib");
% -- dependencies --- %

% ---------- process controller ---------- %

declare(controller_change_shift, controller_worker, controller_cleaner,
        controller_light_switch, controller_blind_switch,
        controller_c_blind_2, controller_c_light_2, controller_c_blind_1,
        controller_c_light_1, controller_c_closet, controller_c_air_2,
        controller_c_air_1, controller_c_window, controller_c_pc,
        controller_c_door, controller_ck_1, controller_pnr_9,
        controller_ck_10_1, controller_pnr_8, controller_ck_12_1,
        controller_pnr_7, controller_ck_14_1, controller_pnr_6,
        controller_ck_16_1, controller_pnr_5, controller_ck_18_1,
        controller_pnr_4, controller_ck_20_1, controller_pnr_3,
        controller_v_239, controller_v_238, controller_pnr_2,
        controller_ck_24_1, controller_pnr_1, controller_ck_26_1,
        controller_pnr, controller_error_state);
conditions : [controller_change_shift, controller_worker, controller_cleaner,
              controller_light_switch, controller_blind_switch,
              controller_c_blind_2, controller_c_light_2,
              controller_c_blind_1, controller_c_light_1,
              controller_c_closet, controller_c_air_2, controller_c_air_1,
              controller_c_window, controller_c_pc, controller_c_door];
states : [controller_ck_1, controller_pnr_9, controller_ck_10_1,
          controller_pnr_8, controller_ck_12_1, controller_pnr_7,
          controller_ck_14_1, controller_pnr_6, controller_ck_16_1,
          controller_pnr_5, controller_ck_18_1, controller_pnr_4,
          controller_ck_20_1, controller_pnr_3, controller_v_239,
          controller_v_238, controller_pnr_2, controller_ck_24_1,
          controller_pnr_1, controller_ck_26_1, controller_pnr,
          controller_error_state];
controllables : [controller_c_blind_2, controller_c_light_2,
                 controller_c_blind_1, controller_c_light_1,
                 controller_c_closet, controller_c_air_2, controller_c_air_1,
                 controller_c_window, controller_c_pc, controller_c_door];
evolutions : [];
initialisations : [];
controller_change : controller_change_shift;
controller_arrived : controller_worker;
controller_arrived_1 : controller_cleaner;
controller_c : controller_c_pc;
controller_c_1 : controller_c_door;
controller_c_2 : controller_c_closet;
controller_c_3 : controller_c_window;
controller_ck_22_2 : controller_v_239;
controller_ck_22_1 : controller_v_238;
controller_c2 : controller_c_air_2;
controller_c1 : controller_c_air_1;
controller_c2_1 : controller_c_light_2;
controller_c1_1 : controller_c_light_1;
controller_sw : controller_light_switch;
controller_c2_2 : controller_c_blind_2;
controller_c1_2 : controller_c_blind_1;
controller_sw_1 : controller_blind_switch;
controller_s_9_St_17_Noite_1 : ((1 when controller_change) default -1);
controller_r_9_St_17_Noite : ((1 when controller_change)
  default controller_pnr_9);
controller_s_9_St_17_Dia_1 : ((-1 when controller_change) default 1);
controller_s_9_1 : ((controller_s_9_St_17_Dia_1 when controller_ck_1)
  default controller_s_9_St_17_Noite_1);
controller_r_9_St_17_Dia : ((1 when controller_change)
  default controller_pnr_9);
controller_r_9 : ((controller_r_9_St_17_Dia when controller_ck_1)
  default controller_r_9_St_17_Noite);
controller_ck_9_1 : controller_s_9_1;
controller_ns_9_St_17_Noite_1 : -1;
controller_nr_9_St_17_Noite : -1;
controller_night_1_St_17_Noite : 1;
controller_ns_9_St_17_Dia_1 : 1;
controller_ns_9_1 : ((controller_ns_9_St_17_Dia_1 when controller_ck_9_1)
  default controller_ns_9_St_17_Noite_1);
controller_nr_9_St_17_Dia : -1;
controller_nr_9 : ((controller_nr_9_St_17_Dia when controller_ck_9_1)
  default controller_nr_9_St_17_Noite);
controller_night_1_St_17_Dia : -1;
controller_night_1 : ((controller_night_1_St_17_Dia when controller_ck_9_1)
  default controller_night_1_St_17_Noite);
controller_night : controller_night_1;
controller_s_8_St_16_Present_1 : ((1 when controller_arrived) default -1);
controller_r_8_St_16_Present : ((1 when controller_arrived)
  default controller_pnr_8);
controller_s_8_St_16_Not_Present_1 : ((-1 when controller_arrived)
  default 1);
controller_s_8_1 : ((controller_s_8_St_16_Not_Present_1
  when controller_ck_10_1) default controller_s_8_St_16_Present_1);
controller_r_8_St_16_Not_Present : ((1 when controller_arrived)
  default controller_pnr_8);
controller_r_8 : ((controller_r_8_St_16_Not_Present when controller_ck_10_1)
  default controller_r_8_St_16_Present);
controller_ck_11_1 : controller_s_8_1;
controller_ns_8_St_16_Present_1 : -1;
controller_nr_8_St_16_Present : -1;
controller_presence_St_16_Present : 1;
controller_ns_8_St_16_Not_Present_1 : 1;
controller_ns_8_1 : ((controller_ns_8_St_16_Not_Present_1
  when controller_ck_11_1) default controller_ns_8_St_16_Present_1);
controller_nr_8_St_16_Not_Present : -1;
controller_nr_8 : ((controller_nr_8_St_16_Not_Present
  when controller_ck_11_1) default controller_nr_8_St_16_Present);
controller_presence_St_16_Not_Present : -1;
controller_presence : ((controller_presence_St_16_Not_Present
  when controller_ck_11_1) default controller_presence_St_16_Present);
controller_worker_presence : controller_presence;
controller_s_7_St_15_Present_1 : ((1 when controller_arrived_1) default -1);
controller_r_7_St_15_Present : ((1 when controller_arrived_1)
  default controller_pnr_7);
controller_s_7_St_15_Not_Present_1 : ((-1 when controller_arrived_1)
  default 1);
controller_s_7_1 : ((controller_s_7_St_15_Not_Present_1
  when controller_ck_12_1) default controller_s_7_St_15_Present_1);
controller_r_7_St_15_Not_Present : ((1 when controller_arrived_1)
  default controller_pnr_7);
controller_r_7 : ((controller_r_7_St_15_Not_Present when controller_ck_12_1)
  default controller_r_7_St_15_Present);
controller_ck_13_1 : controller_s_7_1;
controller_ns_7_St_15_Present_1 : -1;
controller_nr_7_St_15_Present : -1;
controller_presence_1_St_15_Present : 1;
controller_ns_7_St_15_Not_Present_1 : 1;
controller_ns_7_1 : ((controller_ns_7_St_15_Not_Present_1
  when controller_ck_13_1) default controller_ns_7_St_15_Present_1);
controller_nr_7_St_15_Not_Present : -1;
controller_nr_7 : ((controller_nr_7_St_15_Not_Present
  when controller_ck_13_1) default controller_nr_7_St_15_Present);
controller_presence_1_St_15_Not_Present : -1;
controller_presence_1 : ((controller_presence_1_St_15_Not_Present
  when controller_ck_13_1) default controller_presence_1_St_15_Present);
controller_cleaner_presence : controller_presence_1;
controller_v_186 : (not controller_c);
controller_s_6_St_14_On_1 : ((1 when controller_v_186) default -1);
controller_r_6_St_14_On : ((1 when controller_v_186)
  default controller_pnr_6);
controller_s_6_St_14_Off_1 : ((-1 when controller_c) default 1);
controller_s_6_1 : ((controller_s_6_St_14_Off_1 when controller_ck_14_1)
  default controller_s_6_St_14_On_1);
controller_r_6_St_14_Off : ((1 when controller_c) default controller_pnr_6);
controller_r_6 : ((controller_r_6_St_14_Off when controller_ck_14_1)
  default controller_r_6_St_14_On);
controller_ck_15_1 : controller_s_6_1;
controller_ns_6_St_14_On_1 : -1;
controller_nr_6_St_14_On : -1;
controller_computer_on_St_14_On : a_const(1);
controller_ns_6_St_14_Off_1 : 1;
controller_ns_6_1 : ((controller_ns_6_St_14_Off_1 when controller_ck_15_1)
  default controller_ns_6_St_14_On_1);
controller_nr_6_St_14_Off : -1;
controller_nr_6 : ((controller_nr_6_St_14_Off when controller_ck_15_1)
  default controller_nr_6_St_14_On);
controller_computer_on_St_14_Off : a_const(0);
controller_computer_on : a_part(controller_ck_15_1, a_const(0),
                                controller_computer_on_St_14_Off,
                                controller_computer_on_St_14_On);
controller_pc_status : controller_computer_on;
controller_v_187 : (not controller_c_1);
controller_s_5_St_13_Open_1 : ((1 when controller_v_187) default -1);
controller_r_5_St_13_Open : ((1 when controller_v_187)
  default controller_pnr_5);
controller_v_188 : (not controller_c_1);
controller_s_5_St_13_Closed_1 : ((-1 when controller_v_188) default 1);
controller_s_5_1 : ((controller_s_5_St_13_Closed_1 when controller_ck_16_1)
  default controller_s_5_St_13_Open_1);
controller_r_5_St_13_Closed : ((1 when controller_v_188)
  default controller_pnr_5);
controller_r_5 : ((controller_r_5_St_13_Closed when controller_ck_16_1)
  default controller_r_5_St_13_Open);
controller_ck_17_1 : controller_s_5_1;
controller_ns_5_St_13_Open_1 : -1;
controller_nr_5_St_13_Open : -1;
controller_door_status_1_St_13_Open : a_const(1);
controller_ns_5_St_13_Closed_1 : 1;
controller_ns_5_1 : ((controller_ns_5_St_13_Closed_1 when controller_ck_17_1)
  default controller_ns_5_St_13_Open_1);
controller_nr_5_St_13_Closed : -1;
controller_nr_5 : ((controller_nr_5_St_13_Closed when controller_ck_17_1)
  default controller_nr_5_St_13_Open);
controller_door_status_1_St_13_Closed : a_const(0);
controller_door_status_1 : a_part(controller_ck_17_1, a_const(0),
                                  controller_door_status_1_St_13_Closed,
                                  controller_door_status_1_St_13_Open);
controller_door_status : controller_door_status_1;
controller_s_4_St_12_Open_1 : ((1 when controller_c_2) default -1);
controller_r_4_St_12_Open : ((1 when controller_c_2)
  default controller_pnr_4);
controller_v_189 : (not controller_c_2);
controller_s_4_St_12_Locked_1 : ((-1 when controller_v_189) default 1);
controller_s_4_1 : ((controller_s_4_St_12_Locked_1 when controller_ck_18_1)
  default controller_s_4_St_12_Open_1);
controller_r_4_St_12_Locked : ((1 when controller_v_189)
  default controller_pnr_4);
controller_r_4 : ((controller_r_4_St_12_Locked when controller_ck_18_1)
  default controller_r_4_St_12_Open);
controller_ck_19_1 : controller_s_4_1;
controller_ns_4_St_12_Open_1 : -1;
controller_nr_4_St_12_Open : -1;
controller_closet_status_1_St_12_Open : a_const(1);
controller_ns_4_St_12_Locked_1 : 1;
controller_ns_4_1 : ((controller_ns_4_St_12_Locked_1 when controller_ck_19_1)
  default controller_ns_4_St_12_Open_1);
controller_nr_4_St_12_Locked : -1;
controller_nr_4 : ((controller_nr_4_St_12_Locked when controller_ck_19_1)
  default controller_nr_4_St_12_Open);
controller_closet_status_1_St_12_Locked : a_const(0);
controller_closet_status_1 : a_part(controller_ck_19_1, a_const(0),
                                    controller_closet_status_1_St_12_Locked,
                                    controller_closet_status_1_St_12_Open);
controller_closet_status : controller_closet_status_1;
controller_s_3_St_11_Open_1 : ((1 when controller_c_3) default -1);
controller_r_3_St_11_Open : ((1 when controller_c_3)
  default controller_pnr_3);
controller_v_190 : (not controller_c_3);
controller_s_3_St_11_Closed_1 : ((-1 when controller_v_190) default 1);
controller_s_3_1 : ((controller_s_3_St_11_Closed_1 when controller_ck_20_1)
  default controller_s_3_St_11_Open_1);
controller_r_3_St_11_Closed : ((1 when controller_v_190)
  default controller_pnr_3);
controller_r_3 : ((controller_r_3_St_11_Closed when controller_ck_20_1)
  default controller_r_3_St_11_Open);
controller_ck_21_1 : controller_s_3_1;
controller_ns_3_St_11_Open_1 : -1;
controller_nr_3_St_11_Open : -1;
controller_window_status_1_St_11_Open : a_const(1);
controller_ns_3_St_11_Closed_1 : 1;
controller_ns_3_1 : ((controller_ns_3_St_11_Closed_1 when controller_ck_21_1)
  default controller_ns_3_St_11_Open_1);
controller_nr_3_St_11_Closed : -1;
controller_nr_3 : ((controller_nr_3_St_11_Closed when controller_ck_21_1)
  default controller_nr_3_St_11_Open);
controller_window_status_1_St_11_Closed : a_const(0);
controller_window_status_1 : a_part(controller_ck_21_1, a_const(0),
                                    controller_window_status_1_St_11_Closed,
                                    controller_window_status_1_St_11_Open);
controller_window_status : controller_window_status_1;
controller_ck_22_2_0 : controller_ck_22_2;
controller_ck_22_2_1 : controller_ck_22_2;
controller_v_191 : (not controller_c1);
controller_v_192 : (not controller_c2);
controller_v_193_2 : ((-1 when controller_v_192) default 1);
controller_v_193_1 : ((-1 when controller_v_192) default 1);
controller_v_194 : ((1 when controller_v_192) default controller_pnr_2);
controller_s_2_St_10_Max_2 : ((-1 when controller_v_191)
  default controller_v_193_2);
controller_s_2_St_10_Max_1 : ((1 when controller_v_191)
  default controller_v_193_1);
controller_r_2_St_10_Max : ((1 when controller_v_191)
  default controller_v_194);
controller_v_195 : (not controller_c1);
controller_v_196 : (not controller_c2);
controller_v_197_2 : ((1 when controller_v_196) default -1);
controller_v_197_1 : ((1 when controller_v_196) default 1);
controller_v_198 : ((1 when controller_v_196) default controller_pnr_2);
controller_s_2_St_10_Min_2 : ((-1 when controller_v_195)
  default controller_v_197_2);
controller_v_241 : ((controller_s_2_St_10_Max_2 when controller_ck_22_2_1)
  default controller_s_2_St_10_Min_2);
controller_s_2_St_10_Min_1 : ((-1 when controller_v_195)
  default controller_v_197_1);
controller_v_240 : ((controller_s_2_St_10_Max_1 when controller_ck_22_2_1)
  default controller_s_2_St_10_Min_1);
controller_r_2_St_10_Min : ((1 when controller_v_195)
  default controller_v_198);
controller_v_244 : ((controller_r_2_St_10_Max when controller_ck_22_2_1)
  default controller_r_2_St_10_Min);
controller_s_2_St_10_Max_2_0 : controller_s_2_St_10_Max_2;
controller_s_2_St_10_Max_2_1 : controller_s_2_St_10_Max_2;
controller_s_2_St_10_Min_2_0 : controller_s_2_St_10_Min_2;
controller_s_2_St_10_Min_2_1 : controller_s_2_St_10_Min_2;
controller_v_193_2_0 : controller_v_193_2;
controller_v_193_2_1 : controller_v_193_2;
controller_v_197_2_0 : controller_v_197_2;
controller_v_197_2_1 : controller_v_197_2;
controller_v_199 : (not controller_c2);
controller_v_200_2 : ((1 when controller_v_199) default -1);
controller_v_200_1 : ((1 when controller_v_199) default -1);
controller_v_201 : ((1 when controller_v_199) default controller_pnr_2);
controller_s_2_St_10_Off_2 : ((-1 when controller_c1)
  default controller_v_200_2);
controller_v_243 : ((1 when controller_ck_22_2_0)
  default controller_s_2_St_10_Off_2);
controller_s_2_St_10_Off_1 : ((1 when controller_c1)
  default controller_v_200_1);
controller_v_242 : ((1 when controller_ck_22_2_0)
  default controller_s_2_St_10_Off_1);
controller_r_2_St_10_Off : ((1 when controller_c1) default controller_v_201);
controller_v_245 : ((1 when controller_ck_22_2_0)
  default controller_r_2_St_10_Off);
controller_s_2_St_10_Off_2_0 : controller_s_2_St_10_Off_2;
controller_s_2_St_10_Off_2_1 : controller_s_2_St_10_Off_2;
controller_r_2 : ((controller_v_244 when controller_ck_22_1)
  default controller_v_245);
controller_s_2_2 : ((controller_v_241 when controller_ck_22_1)
  default controller_v_243);
controller_s_2_1 : ((controller_v_240 when controller_ck_22_1)
  default controller_v_242);
controller_s_2_2_0 : controller_s_2_2;
controller_s_2_2_1 : controller_s_2_2;
controller_v_200_2_0 : controller_v_200_2;
controller_v_200_2_1 : controller_v_200_2;
controller_ck_23_2 : controller_s_2_2;
controller_ck_23_1 : controller_s_2_1;
controller_ck_23_2_0 : controller_ck_23_2;
controller_ck_23_2_1 : controller_ck_23_2;
controller_ns_2_St_10_Max_2 : 1;
controller_ns_2_St_10_Max_1 : 1;
controller_nr_2_St_10_Max : -1;
controller_air_status_1_St_10_Max : a_const(2);
controller_ns_2_St_10_Min_2 : -1;
controller_v_233 : ((controller_ns_2_St_10_Max_2 when controller_ck_23_2_1)
  default controller_ns_2_St_10_Min_2);
controller_ns_2_St_10_Min_1 : 1;
controller_v_232 : ((controller_ns_2_St_10_Max_1 when controller_ck_23_2_1)
  default controller_ns_2_St_10_Min_1);
controller_nr_2_St_10_Min : -1;
controller_v_236 : ((controller_nr_2_St_10_Max when controller_ck_23_2_1)
  default controller_nr_2_St_10_Min);
controller_air_status_1_St_10_Min : a_const(1);
controller_v_230 : a_part(controller_ck_23_2_1, a_const(0),
                          controller_air_status_1_St_10_Max,
                          controller_air_status_1_St_10_Min);
controller_ns_2_St_10_Max_2_0 : controller_ns_2_St_10_Max_2;
controller_ns_2_St_10_Max_2_1 : controller_ns_2_St_10_Max_2;
controller_ns_2_St_10_Min_2_0 : controller_ns_2_St_10_Min_2;
controller_ns_2_St_10_Min_2_1 : controller_ns_2_St_10_Min_2;
controller_ns_2_St_10_Off_2 : -1;
controller_v_235 : ((1 when controller_ck_23_2_0)
  default controller_ns_2_St_10_Off_2);
controller_ns_2_St_10_Off_1 : -1;
controller_v_234 : ((1 when controller_ck_23_2_0)
  default controller_ns_2_St_10_Off_1);
controller_nr_2_St_10_Off : -1;
controller_v_237 : ((1 when controller_ck_23_2_0)
  default controller_nr_2_St_10_Off);
controller_air_status_1_St_10_Off : a_const(0);
controller_v_231 : a_part(controller_ck_23_2_0, a_const(0), a_const(0),
                          controller_air_status_1_St_10_Off);
controller_ns_2_St_10_Off_2_0 : controller_ns_2_St_10_Off_2;
controller_ns_2_St_10_Off_2_1 : controller_ns_2_St_10_Off_2;
controller_nr_2 : ((controller_v_236 when controller_ck_23_1)
  default controller_v_237);
controller_ns_2_2 : ((controller_v_233 when controller_ck_23_1)
  default controller_v_235);
controller_ns_2_1 : ((controller_v_232 when controller_ck_23_1)
  default controller_v_234);
controller_air_status_1 : a_part(controller_ck_23_1, a_const(0),
                                 controller_v_230, controller_v_231);
controller_ns_2_2_0 : controller_ns_2_2;
controller_ns_2_2_1 : controller_ns_2_2;
controller_air_status : controller_air_status_1;
controller_v_202 : (controller_c1_1 and controller_sw);
controller_v_203 : (not controller_c2_1);
controller_v_204 : (controller_v_202 or controller_v_203);
controller_s_1_St_9_On_1 : ((1 when controller_v_204) default -1);
controller_r_1_St_9_On : ((1 when controller_v_204)
  default controller_pnr_1);
controller_v_205 : (controller_c1_1 and controller_sw);
controller_v_206 : (not controller_c2_1);
controller_v_207 : (controller_v_205 or controller_v_206);
controller_s_1_St_9_Off_1 : ((-1 when controller_v_207) default 1);
controller_s_1_1 : ((controller_s_1_St_9_Off_1 when controller_ck_24_1)
  default controller_s_1_St_9_On_1);
controller_r_1_St_9_Off : ((1 when controller_v_207)
  default controller_pnr_1);
controller_r_1 : ((controller_r_1_St_9_Off when controller_ck_24_1)
  default controller_r_1_St_9_On);
controller_ck_25_1 : controller_s_1_1;
controller_ns_1_St_9_On_1 : -1;
controller_nr_1_St_9_On : -1;
controller_light_source_status_St_9_On : a_const(1);
controller_ns_1_St_9_Off_1 : 1;
controller_ns_1_1 : ((controller_ns_1_St_9_Off_1 when controller_ck_25_1)
  default controller_ns_1_St_9_On_1);
controller_nr_1_St_9_Off : -1;
controller_nr_1 : ((controller_nr_1_St_9_Off when controller_ck_25_1)
  default controller_nr_1_St_9_On);
controller_light_source_status_St_9_Off : a_const(0);
controller_light_source_status : a_part(controller_ck_25_1, a_const(0),
                                        controller_light_source_status_St_9_Off,
                                        controller_light_source_status_St_9_On);
controller_light_status : controller_light_source_status;
controller_v_208 : (controller_c1_2 and controller_sw_1);
controller_v_209 : (not controller_c2_2);
controller_v_210 : (controller_v_208 or controller_v_209);
controller_s_St_8_On_1 : ((1 when controller_v_210) default -1);
controller_r_St_8_On : ((1 when controller_v_210) default controller_pnr);
controller_v_211 : (controller_c1_2 and controller_sw_1);
controller_v_212 : (not controller_c2_2);
controller_v_213 : (controller_v_211 or controller_v_212);
controller_s_St_8_Off_1 : ((-1 when controller_v_213) default 1);
controller_s_1_2 : ((controller_s_St_8_Off_1 when controller_ck_26_1)
  default controller_s_St_8_On_1);
controller_r_St_8_Off : ((1 when controller_v_213) default controller_pnr);
controller_r : ((controller_r_St_8_Off when controller_ck_26_1)
  default controller_r_St_8_On);
controller_ck_27_1 : controller_s_1_2;
controller_ns_St_8_On_1 : -1;
controller_nr_St_8_On : -1;
controller_light_source_status_1_St_8_On : a_const(1);
controller_ns_St_8_Off_1 : 1;
controller_ns_1_2 : ((controller_ns_St_8_Off_1 when controller_ck_27_1)
  default controller_ns_St_8_On_1);
controller_nr_St_8_Off : -1;
controller_nr : ((controller_nr_St_8_Off when controller_ck_27_1)
  default controller_nr_St_8_On);
controller_light_source_status_1_St_8_Off : a_const(0);
controller_light_source_status_1 : a_part(controller_ck_27_1, a_const(
                                          0),
                                          controller_light_source_status_1_St_8_Off,
                                          controller_light_source_status_1_St_8_On);
controller_blind_status : controller_light_source_status_1;
initialisations : concat(initialisations, [(controller_ck_1 = 1)]);
evolutions : concat(evolutions, [(controller_ns_9_1 default controller_ck_1)]);
initialisations : concat(initialisations, [(controller_pnr_9 = -1)]);
evolutions : concat(evolutions, [(controller_nr_9 default controller_pnr_9)]);
initialisations : concat(initialisations, [(controller_ck_10_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_8_1 default controller_ck_10_1)]);
initialisations : concat(initialisations, [(controller_pnr_8 = -1)]);
evolutions : concat(evolutions, [(controller_nr_8 default controller_pnr_8)]);
initialisations : concat(initialisations, [(controller_ck_12_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_7_1 default controller_ck_12_1)]);
initialisations : concat(initialisations, [(controller_pnr_7 = -1)]);
evolutions : concat(evolutions, [(controller_nr_7 default controller_pnr_7)]);
initialisations : concat(initialisations, [(controller_ck_14_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_6_1 default controller_ck_14_1)]);
initialisations : concat(initialisations, [(controller_pnr_6 = -1)]);
evolutions : concat(evolutions, [(controller_nr_6 default controller_pnr_6)]);
initialisations : concat(initialisations, [(controller_ck_16_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_5_1 default controller_ck_16_1)]);
initialisations : concat(initialisations, [(controller_pnr_5 = -1)]);
evolutions : concat(evolutions, [(controller_nr_5 default controller_pnr_5)]);
initialisations : concat(initialisations, [(controller_ck_18_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_4_1 default controller_ck_18_1)]);
initialisations : concat(initialisations, [(controller_pnr_4 = -1)]);
evolutions : concat(evolutions, [(controller_nr_4 default controller_pnr_4)]);
initialisations : concat(initialisations, [(controller_ck_20_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_3_1 default controller_ck_20_1)]);
initialisations : concat(initialisations, [(controller_pnr_3 = -1)]);
evolutions : concat(evolutions, [(controller_nr_3 default controller_pnr_3)]);
initialisations : concat(initialisations, [(controller_v_239 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_2_2 default controller_v_239)]);
initialisations : concat(initialisations, [(controller_v_238 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_2_1 default controller_v_238)]);
initialisations : concat(initialisations, [(controller_pnr_2 = -1)]);
evolutions : concat(evolutions, [(controller_nr_2 default controller_pnr_2)]);
initialisations : concat(initialisations, [(controller_ck_24_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_1_1 default controller_ck_24_1)]);
initialisations : concat(initialisations, [(controller_pnr_1 = -1)]);
evolutions : concat(evolutions, [(controller_nr_1 default controller_pnr_1)]);
initialisations : concat(initialisations, [(controller_ck_26_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_1_2 default controller_ck_26_1)]);
initialisations : concat(initialisations, [(controller_pnr = -1)]);
evolutions : concat(evolutions, [(controller_nr default controller_pnr)]);
controller_v_168 : (a_iminv(controller_closet_status, 1) + 1);
controller_v_169 : (not controller_v_168);
controller_v_165 : (a_iminv(controller_window_status, 1) + 1);
controller_v_166 : (not controller_v_165);
controller_v_162 : (a_iminv(controller_pc_status, 1) + 1);
controller_v_163 : (not controller_v_162);
controller_v_159 : (a_iminv(controller_door_status, 1) + 1);
controller_v_160 : (not controller_v_159);
controller_v_156 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_157 : (not controller_v_156);
controller_v_153 : (a_iminv(controller_light_status, 1) + 1);
controller_v_154 : (not controller_v_153);
controller_v_150 : (a_iminv(controller_air_status, 2) + 1);
controller_v_151 : (not controller_v_150);
controller_v_148 : (a_iminv(controller_air_status, 1) + 1);
controller_v_149 : (not controller_v_148);
controller_v_152 : (controller_v_149 and controller_v_151);
controller_v_155 : (controller_v_152 and controller_v_154);
controller_v_158 : (controller_v_155 and controller_v_157);
controller_v_161 : (controller_v_158 and controller_v_160);
controller_v_164 : (controller_v_161 and controller_v_163);
controller_v_167 : (controller_v_164 and controller_v_166);
controller_v_170 : (controller_v_167 and controller_v_169);
controller_v_145 : (not controller_cleaner_presence);
controller_v_144 : (not controller_worker_presence);
controller_v_146 : (controller_v_144 and controller_v_145);
controller_v_147 : (not controller_v_146);
controller_rule0 : (controller_v_147 or controller_v_170);
controller_v_143 : (a_iminv(controller_light_status, 1) + 1);
controller_v_140 : (a_inf(controller_light_status, 1) + 1);
controller_v_138 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_139 : (controller_v_138 and controller_night);
controller_v_141 : (controller_v_139 and controller_v_140);
controller_v_142 : (not controller_v_141);
controller_rule1 : (controller_v_142 or controller_v_143);
controller_v_171 : (controller_rule0 and controller_rule1);
controller_v_137 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_134 : (a_inf(controller_blind_status, 1) + 1);
controller_v_132 : (a_sup(controller_light_status, 2) + 1);
controller_v_130 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_131 : (controller_v_130 and controller_night);
controller_v_133 : (controller_v_131 and controller_v_132);
controller_v_135 : (controller_v_133 and controller_v_134);
controller_v_136 : (not controller_v_135);
controller_rule1_3 : (controller_v_136 or controller_v_137);
controller_v_172 : (controller_v_171 and controller_rule1_3);
controller_v_128 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_127 : (a_iminv(controller_light_status, 1) + 1);
controller_v_129 : (controller_v_127 or controller_v_128);
controller_v_124 : (a_inf(controller_blind_status, 1) + 1);
controller_v_122 : (a_inf(controller_light_status, 1) + 1);
controller_v_120 : (not controller_night);
controller_v_119 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_121 : (controller_v_119 and controller_v_120);
controller_v_123 : (controller_v_121 and controller_v_122);
controller_v_125 : (controller_v_123 and controller_v_124);
controller_v_126 : (not controller_v_125);
controller_rule2 : (controller_v_126 or controller_v_129);
controller_v_173 : (controller_v_172 and controller_rule2);
controller_v_118 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_115 : (a_inf(controller_blind_status, 1) + 1);
controller_v_113 : (a_sup(controller_light_status, 2) + 1);
controller_v_112 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_114 : (controller_v_112 and controller_v_113);
controller_v_116 : (controller_v_114 and controller_v_115);
controller_v_117 : (not controller_v_116);
controller_rule1_1 : (controller_v_117 or controller_v_118);
controller_v_174 : (controller_v_173 and controller_rule1_1);
controller_v_111 : (a_iminv(controller_light_status, 1) + 1);
controller_v_108 : (a_sup(controller_blind_status, 2) + 1);
controller_v_106 : (a_inf(controller_light_status, 1) + 1);
controller_v_105 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_107 : (controller_v_105 and controller_v_106);
controller_v_109 : (controller_v_107 and controller_v_108);
controller_v_110 : (not controller_v_109);
controller_rule1_2 : (controller_v_110 or controller_v_111);
controller_v_175 : (controller_v_174 and controller_rule1_2);
controller_v_104 : (a_iminv(controller_air_status, 2) + 1);
controller_v_101 : (a_inf(controller_air_status, 2) + 1);
controller_v_100 : (controller_worker_presence
  and controller_cleaner_presence);
controller_v_102 : (controller_v_100 and controller_v_101);
controller_v_103 : (not controller_v_102);
controller_rule5 : (controller_v_103 or controller_v_104);
controller_v_176 : (controller_v_175 and controller_rule5);
controller_v_97 : (a_iminv(controller_window_status, 1) + 1);
controller_v_98 : (not controller_v_97);
controller_v_94 : (a_iminv(controller_door_status, 1) + 1);
controller_v_95 : (not controller_v_94);
controller_v_93 : (a_iminv(controller_air_status, 1) + 1);
controller_v_96 : (controller_v_93 and controller_v_95);
controller_v_99 : (controller_v_96 and controller_v_98);
controller_v_90 : (a_inf(controller_air_status, 2) + 1);
controller_v_88 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_86 : (controller_worker_presence
  and controller_cleaner_presence);
controller_v_87 : (not controller_v_86);
controller_v_89 : (controller_v_87 and controller_v_88);
controller_v_91 : (controller_v_89 and controller_v_90);
controller_v_92 : (not controller_v_91);
controller_rule6 : (controller_v_92 or controller_v_99);
controller_v_177 : (controller_v_176 and controller_rule6);
controller_v_84 : (a_iminv(controller_door_status, 1) + 1);
controller_v_82 : (a_iminv(controller_window_status, 1) + 1);
controller_v_81 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_83 : (controller_v_81 and controller_v_82);
controller_v_85 : (controller_v_83 and controller_v_84);
controller_v_78 : (a_inf(controller_door_status, 1) + 1);
controller_v_76 : (a_inf(controller_window_status, 1) + 1);
controller_v_74 : (a_inf(controller_blind_status, 1) + 1);
controller_v_72 : (a_sup(controller_air_status, 3) + 1);
controller_v_71 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_73 : (controller_v_71 and controller_v_72);
controller_v_75 : (controller_v_73 and controller_v_74);
controller_v_77 : (controller_v_75 and controller_v_76);
controller_v_79 : (controller_v_77 and controller_v_78);
controller_v_80 : (not controller_v_79);
controller_rule6_1 : (controller_v_80 or controller_v_85);
controller_v_178 : (controller_v_177 and controller_rule6_1);
controller_v_69 : (a_iminv(controller_door_status, 1) + 1);
controller_v_67 : (a_iminv(controller_window_status, 1) + 1);
controller_v_68 : (not controller_v_67);
controller_v_70 : (controller_v_68 and controller_v_69);
controller_v_64 : (a_inf(controller_door_status, 1) + 1);
controller_v_62 : (a_sup(controller_blind_status, 2) + 1);
controller_v_60 : (a_sup(controller_air_status, 3) + 1);
controller_v_59 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_61 : (controller_v_59 and controller_v_60);
controller_v_63 : (controller_v_61 and controller_v_62);
controller_v_65 : (controller_v_63 and controller_v_64);
controller_v_66 : (not controller_v_65);
controller_rule6_2 : (controller_v_66 or controller_v_70);
controller_v_179 : (controller_v_178 and controller_rule6_2);
controller_v_58 : (a_iminv(controller_door_status, 1) + 1);
controller_v_55 : (a_inf(controller_door_status, 1) + 1);
controller_v_53 : (a_sup(controller_window_status, 2) + 1);
controller_v_51 : (a_sup(controller_air_status, 3) + 1);
controller_v_50 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_52 : (controller_v_50 and controller_v_51);
controller_v_54 : (controller_v_52 and controller_v_53);
controller_v_56 : (controller_v_54 and controller_v_55);
controller_v_57 : (not controller_v_56);
controller_rule6_3 : (controller_v_57 or controller_v_58);
controller_v_180 : (controller_v_179 and controller_rule6_3);
controller_v_47 : (a_iminv(controller_door_status, 1) + 1);
controller_v_48 : (not controller_v_47);
controller_v_45 : (a_iminv(controller_window_status, 1) + 1);
controller_v_44 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_46 : (controller_v_44 and controller_v_45);
controller_v_49 : (controller_v_46 and controller_v_48);
controller_v_41 : (a_sup(controller_door_status, 2) + 1);
controller_v_39 : (a_inf(controller_window_status, 1) + 1);
controller_v_37 : (a_inf(controller_blind_status, 1) + 1);
controller_v_35 : (a_sup(controller_air_status, 3) + 1);
controller_v_34 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_36 : (controller_v_34 and controller_v_35);
controller_v_38 : (controller_v_36 and controller_v_37);
controller_v_40 : (controller_v_38 and controller_v_39);
controller_v_42 : (controller_v_40 and controller_v_41);
controller_v_43 : (not controller_v_42);
controller_rule6_4 : (controller_v_43 or controller_v_49);
controller_v_181 : (controller_v_180 and controller_rule6_4);
controller_v_33 : (a_iminv(controller_pc_status, 1) + 1);
controller_v_30 : (a_inf(controller_pc_status, 1) + 1);
controller_v_31 : (controller_worker_presence and controller_v_30);
controller_v_32 : (not controller_v_31);
controller_rule7 : (controller_v_32 or controller_v_33);
controller_v_182 : (controller_v_181 and controller_rule7);
controller_v_29 : (a_iminv(controller_pc_status, 0) + 1);
controller_v_26 : (a_inf(controller_pc_status, 1) + 1);
controller_v_25 : (not controller_worker_presence);
controller_v_27 : (controller_v_25 and controller_v_26);
controller_v_28 : (not controller_v_27);
controller_rule7_5 : (controller_v_28 or controller_v_29);
controller_v_183 : (controller_v_182 and controller_rule7_5);
controller_v_24 : (a_iminv(controller_closet_status, 1) + 1);
controller_v_21 : (a_inf(controller_closet_status, 1) + 1);
controller_v_22 : (controller_cleaner_presence and controller_v_21);
controller_v_23 : (not controller_v_22);
controller_rule8 : (controller_v_23 or controller_v_24);
controller_v_184 : (controller_v_183 and controller_rule8);
controller_v_20 : (a_iminv(controller_closet_status, 0) + 1);
controller_v_17 : (a_inf(controller_closet_status, 1) + 1);
controller_v : (not controller_cleaner_presence);
controller_v_18 : (controller_v and controller_v_17);
controller_v_19 : (not controller_v_18);
controller_rule8_5 : (controller_v_19 or controller_v_20);
controller_v_185 : (controller_v_184 and controller_rule8_5);
controller_assume : 1;
controller_guarantee : controller_v_185;
initialisations : concat(initialisations, [(controller_error_state = 1)]);
evolutions : concat(evolutions, [controller_guarantee]);
constraints : [((controller_change_shift^2) = 1), ((controller_worker^2)
               = 1), ((controller_cleaner^2) = 1),
               ((controller_light_switch^2) = 1),
               ((controller_blind_switch^2) = 1), ((controller_c_blind_2^2)
               = 1), ((controller_c_light_2^2) = 1),
               ((controller_c_blind_1^2) = 1), ((controller_c_light_1^2)
               = 1), ((controller_c_closet^2) = 1), ((controller_c_air_2^2)
               = 1), ((controller_c_air_1^2) = 1), ((controller_c_window^2)
               = 1), ((controller_c_pc^2) = 1), ((controller_c_door^2) = 1),
               (controller_assume = 1)];

% --- outputs : [controller_night, controller_worker_presence,
                 controller_cleaner_presence, controller_door_status,
                 controller_pc_status, controller_window_status,
                 controller_closet_status, controller_air_status,
                 controller_light_status, controller_blind_status] --- %
controller : processus(conditions, states, evolutions, initialisations,
                       [gen(constraints)], controllables);
controller_init : initial(controller);
controller : S_Security(controller,B_True(controller,controller_error_state));
dcs_result : equal(controller_init,initial(controller));
if dcs_result then
    print("controller: synthesis succeeded.")
else
    print("controller: synthesis failed.");

if dcs_result then
    print("Triangulation and controller generation...")
else
    quit(1);
declare(p_controller_c_blind_2, p_controller_c_light_2,
        p_controller_c_blind_1, p_controller_c_light_1,
        p_controller_c_closet, p_controller_c_air_2, p_controller_c_air_1,
        p_controller_c_window, p_controller_c_pc, p_controller_c_door);
phantom_vars : [p_controller_c_blind_2, p_controller_c_light_2,
                p_controller_c_blind_1, p_controller_c_light_1,
                p_controller_c_closet, p_controller_c_air_2,
                p_controller_c_air_1, p_controller_c_window,
                p_controller_c_pc, p_controller_c_door];
controller_triang : Triang(constraint(controller),controllables,phantom_vars);
controller_inputs : [controller_change_shift, controller_worker,
                     controller_cleaner, controller_light_switch,
                     controller_blind_switch, controller_ck_1,
                     controller_pnr_9, controller_ck_10_1, controller_pnr_8,
                     controller_ck_12_1, controller_pnr_7,
                     controller_ck_14_1, controller_pnr_6,
                     controller_ck_16_1, controller_pnr_5,
                     controller_ck_18_1, controller_pnr_4,
                     controller_ck_20_1, controller_pnr_3, controller_v_239,
                     controller_v_238, controller_pnr_2, controller_ck_24_1,
                     controller_pnr_1, controller_ck_26_1, controller_pnr,
                     p_controller_c_blind_2, p_controller_c_light_2,
                     p_controller_c_blind_1, p_controller_c_light_1,
                     p_controller_c_closet, p_controller_c_air_2,
                     p_controller_c_air_1, p_controller_c_window,
                     p_controller_c_pc, p_controller_c_door];
heptagon_controller("controller_controller.ept","controller",controller_inputs,controllables,controller_triang);

