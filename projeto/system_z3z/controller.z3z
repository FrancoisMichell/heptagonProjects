% --- Generated the 25/6/2018 at 10:48 --- %
% --- heptagon compiler, version 1.03.00 (compiled thu. may. 3 2:35:29 CET 2018) --- %
% --- Command line: /usr/local/bin/heptc -target c -target z3z -s controller system.ept --- %

set_reorder(2);read("Property.lib");read("Synthesis.lib");read("Verif_Determ.lib");read("Simul.lib");read("Synthesis_Partial_order.lib");read("Orbite.lib");
% -- dependencies --- %

% ---------- process controller ---------- %

declare(controller_shift_turno, controller_abre_porta, controller_p_arrived,
        controller_c_ar2, controller_c_ar1, controller_c_per2,
        controller_c_per1, controller_c_luz2, controller_c_luz1,
        controller_c_jan, controller_c_pc, controller_c_rot,
        controller_c_porta, controller_ck_1, controller_pnr_8,
        controller_ck_19_1, controller_pnr_7, controller_ck_21_1,
        controller_pnr_6, controller_ck_23_1, controller_pnr_5,
        controller_ck_25_1, controller_pnr_4, controller_ck_27_1,
        controller_pnr_3, controller_v_372, controller_v_371,
        controller_pnr_2, controller_v_356, controller_v_355,
        controller_pnr_1, controller_v_340, controller_v_339, controller_pnr,
        controller_error_state);
conditions : [controller_shift_turno, controller_abre_porta,
              controller_p_arrived, controller_c_ar2, controller_c_ar1,
              controller_c_per2, controller_c_per1, controller_c_luz2,
              controller_c_luz1, controller_c_jan, controller_c_pc,
              controller_c_rot, controller_c_porta];
states : [controller_ck_1, controller_pnr_8, controller_ck_19_1,
          controller_pnr_7, controller_ck_21_1, controller_pnr_6,
          controller_ck_23_1, controller_pnr_5, controller_ck_25_1,
          controller_pnr_4, controller_ck_27_1, controller_pnr_3,
          controller_v_372, controller_v_371, controller_pnr_2,
          controller_v_356, controller_v_355, controller_pnr_1,
          controller_v_340, controller_v_339, controller_pnr,
          controller_error_state];
controllables : [controller_c_ar2, controller_c_ar1, controller_c_per2,
                 controller_c_per1, controller_c_luz2, controller_c_luz1,
                 controller_c_jan, controller_c_pc, controller_c_rot,
                 controller_c_porta];
evolutions : [];
initialisations : [];
controller_shift : controller_shift_turno;
controller_c_porta_1 : controller_c_porta;
controller_push : controller_abre_porta;
controller_c : controller_c_rot;
controller_arrived : controller_p_arrived;
controller_c_1 : controller_c_pc;
controller_c_2 : controller_c_jan;
controller_ck_29_2 : controller_v_372;
controller_ck_29_1 : controller_v_371;
controller_c2 : controller_c_luz2;
controller_c1 : controller_c_luz1;
controller_ck_31_2 : controller_v_356;
controller_ck_31_1 : controller_v_355;
controller_c2_1 : controller_c_per2;
controller_c1_1 : controller_c_per1;
controller_ck_33_2 : controller_v_340;
controller_ck_33_1 : controller_v_339;
controller_c2_2 : controller_c_ar2;
controller_c1_2 : controller_c_ar1;
controller_s_8_St_25_Noite_1 : ((1 when controller_shift) default -1);
controller_r_8_St_25_Noite : ((1 when controller_shift)
  default controller_pnr_8);
controller_s_8_St_25_Dia_1 : ((-1 when controller_shift) default 1);
controller_s_8_1 : ((controller_s_8_St_25_Dia_1 when controller_ck_1)
  default controller_s_8_St_25_Noite_1);
controller_r_8_St_25_Dia : ((1 when controller_shift)
  default controller_pnr_8);
controller_r_8 : ((controller_r_8_St_25_Dia when controller_ck_1)
  default controller_r_8_St_25_Noite);
controller_ck_18_1 : controller_s_8_1;
controller_ns_8_St_25_Noite_1 : -1;
controller_nr_8_St_25_Noite : -1;
controller_turno_St_25_Noite : 1;
controller_ns_8_St_25_Dia_1 : 1;
controller_ns_8_1 : ((controller_ns_8_St_25_Dia_1 when controller_ck_18_1)
  default controller_ns_8_St_25_Noite_1);
controller_nr_8_St_25_Dia : -1;
controller_nr_8 : ((controller_nr_8_St_25_Dia when controller_ck_18_1)
  default controller_nr_8_St_25_Noite);
controller_turno_St_25_Dia : -1;
controller_turno : ((controller_turno_St_25_Dia when controller_ck_18_1)
  default controller_turno_St_25_Noite);
controller_night : controller_turno;
controller_s_7_St_24_Open_1 : ((1 when controller_c_porta_1) default -1);
controller_r_7_St_24_Open : ((1 when controller_c_porta_1)
  default controller_pnr_7);
controller_v_100 : (not controller_c_porta_1);
controller_s_7_St_24_Closed_1 : ((-1 when controller_v_100) default 1);
controller_s_7_1 : ((controller_s_7_St_24_Closed_1 when controller_ck_19_1)
  default controller_s_7_St_24_Open_1);
controller_r_7_St_24_Closed : ((1 when controller_v_100)
  default controller_pnr_7);
controller_r_7 : ((controller_r_7_St_24_Closed when controller_ck_19_1)
  default controller_r_7_St_24_Open);
controller_ck_20_1 : controller_s_7_1;
controller_ns_7_St_24_Open_1 : -1;
controller_nr_7_St_24_Open : -1;
controller_porta_open_St_24_Open : 1;
controller_ns_7_St_24_Closed_1 : 1;
controller_ns_7_1 : ((controller_ns_7_St_24_Closed_1 when controller_ck_20_1)
  default controller_ns_7_St_24_Open_1);
controller_nr_7_St_24_Closed : -1;
controller_nr_7 : ((controller_nr_7_St_24_Closed when controller_ck_20_1)
  default controller_nr_7_St_24_Open);
controller_porta_open_St_24_Closed : -1;
controller_porta_open : ((controller_porta_open_St_24_Closed
  when controller_ck_20_1) default controller_porta_open_St_24_Open);
controller_p_open : controller_porta_open;
controller_v_101 : (not controller_c);
controller_s_6_St_23_On_1 : ((1 when controller_v_101) default -1);
controller_r_6_St_23_On : ((1 when controller_v_101)
  default controller_pnr_6);
controller_s_6_St_23_Off_1 : ((-1 when controller_c) default 1);
controller_s_6_1 : ((controller_s_6_St_23_Off_1 when controller_ck_21_1)
  default controller_s_6_St_23_On_1);
controller_r_6_St_23_Off : ((1 when controller_c) default controller_pnr_6);
controller_r_6 : ((controller_r_6_St_23_Off when controller_ck_21_1)
  default controller_r_6_St_23_On);
controller_ck_22_1 : controller_s_6_1;
controller_ns_6_St_23_On_1 : -1;
controller_nr_6_St_23_On : -1;
controller_r_on_St_23_On : 1;
controller_ns_6_St_23_Off_1 : 1;
controller_ns_6_1 : ((controller_ns_6_St_23_Off_1 when controller_ck_22_1)
  default controller_ns_6_St_23_On_1);
controller_nr_6_St_23_Off : -1;
controller_nr_6 : ((controller_nr_6_St_23_Off when controller_ck_22_1)
  default controller_nr_6_St_23_On);
controller_r_on_St_23_Off : -1;
controller_r_on : ((controller_r_on_St_23_Off when controller_ck_22_1)
  default controller_r_on_St_23_On);
controller_r_on1 : controller_r_on;
controller_s_5_St_22_Preent_1 : ((1 when controller_arrived) default -1);
controller_r_5_St_22_Preent : ((1 when controller_arrived)
  default controller_pnr_5);
controller_s_5_St_22_Not_Present_1 : ((-1 when controller_arrived)
  default 1);
controller_s_5_1 : ((controller_s_5_St_22_Not_Present_1
  when controller_ck_23_1) default controller_s_5_St_22_Preent_1);
controller_r_5_St_22_Not_Present : ((1 when controller_arrived)
  default controller_pnr_5);
controller_r_5 : ((controller_r_5_St_22_Not_Present when controller_ck_23_1)
  default controller_r_5_St_22_Preent);
controller_ck_24_1 : controller_s_5_1;
controller_ns_5_St_22_Preent_1 : -1;
controller_nr_5_St_22_Preent : -1;
controller_presence_1_St_22_Preent : 1;
controller_ns_5_St_22_Not_Present_1 : 1;
controller_ns_5_1 : ((controller_ns_5_St_22_Not_Present_1
  when controller_ck_24_1) default controller_ns_5_St_22_Preent_1);
controller_nr_5_St_22_Not_Present : -1;
controller_nr_5 : ((controller_nr_5_St_22_Not_Present
  when controller_ck_24_1) default controller_nr_5_St_22_Preent);
controller_presence_1_St_22_Not_Present : -1;
controller_presence_1 : ((controller_presence_1_St_22_Not_Present
  when controller_ck_24_1) default controller_presence_1_St_22_Preent);
controller_presence : controller_presence_1;
controller_v_102 : (not controller_c_1);
controller_s_4_St_21_On_1 : ((1 when controller_v_102) default -1);
controller_r_4_St_21_On : ((1 when controller_v_102)
  default controller_pnr_4);
controller_s_4_St_21_Off_1 : ((-1 when controller_c_1) default 1);
controller_s_4_1 : ((controller_s_4_St_21_Off_1 when controller_ck_25_1)
  default controller_s_4_St_21_On_1);
controller_r_4_St_21_Off : ((1 when controller_c_1)
  default controller_pnr_4);
controller_r_4 : ((controller_r_4_St_21_Off when controller_ck_25_1)
  default controller_r_4_St_21_On);
controller_ck_26_1 : controller_s_4_1;
controller_ns_4_St_21_On_1 : -1;
controller_nr_4_St_21_On : -1;
controller_pc_on_1_St_21_On : 1;
controller_ns_4_St_21_Off_1 : 1;
controller_ns_4_1 : ((controller_ns_4_St_21_Off_1 when controller_ck_26_1)
  default controller_ns_4_St_21_On_1);
controller_nr_4_St_21_Off : -1;
controller_nr_4 : ((controller_nr_4_St_21_Off when controller_ck_26_1)
  default controller_nr_4_St_21_On);
controller_pc_on_1_St_21_Off : -1;
controller_pc_on_1 : ((controller_pc_on_1_St_21_Off when controller_ck_26_1)
  default controller_pc_on_1_St_21_On);
controller_pc_on : controller_pc_on_1;
controller_v_103 : (not controller_c_2);
controller_s_3_St_20_Open_1 : ((1 when controller_v_103) default -1);
controller_r_3_St_20_Open : ((1 when controller_v_103)
  default controller_pnr_3);
controller_s_3_St_20_Closed_1 : ((-1 when controller_c_2) default 1);
controller_s_3_1 : ((controller_s_3_St_20_Closed_1 when controller_ck_27_1)
  default controller_s_3_St_20_Open_1);
controller_r_3_St_20_Closed : ((1 when controller_c_2)
  default controller_pnr_3);
controller_r_3 : ((controller_r_3_St_20_Closed when controller_ck_27_1)
  default controller_r_3_St_20_Open);
controller_ck_28_1 : controller_s_3_1;
controller_ns_3_St_20_Open_1 : -1;
controller_nr_3_St_20_Open : -1;
controller_w_open_1_St_20_Open : 1;
controller_ns_3_St_20_Closed_1 : 1;
controller_ns_3_1 : ((controller_ns_3_St_20_Closed_1 when controller_ck_28_1)
  default controller_ns_3_St_20_Open_1);
controller_nr_3_St_20_Closed : -1;
controller_nr_3 : ((controller_nr_3_St_20_Closed when controller_ck_28_1)
  default controller_nr_3_St_20_Open);
controller_w_open_1_St_20_Closed : -1;
controller_w_open_1 : ((controller_w_open_1_St_20_Closed
  when controller_ck_28_1) default controller_w_open_1_St_20_Open);
controller_w_open : controller_w_open_1;
controller_ck_29_2_0 : controller_ck_29_2;
controller_ck_29_2_1 : controller_ck_29_2;
controller_v_104 : (not controller_c1);
controller_v_105 : (not controller_c2);
controller_v_106_2 : ((-1 when controller_v_105) default 1);
controller_v_106_1 : ((1 when controller_v_105) default 1);
controller_v_107 : ((1 when controller_v_105) default controller_pnr_2);
controller_s_2_St_19_All_2 : ((-1 when controller_v_104)
  default controller_v_106_2);
controller_s_2_St_19_All_1 : ((-1 when controller_v_104)
  default controller_v_106_1);
controller_r_2_St_19_All : ((1 when controller_v_104)
  default controller_v_107);
controller_v_111_2 : ((1 when controller_c2) default -1);
controller_v_111_1 : ((1 when controller_c2) default 1);
controller_v_112 : ((1 when controller_c2) default controller_pnr_2);
controller_s_2_St_19_None_2 : ((-1 when controller_c1)
  default controller_v_111_2);
controller_v_374 : ((controller_s_2_St_19_All_2 when controller_ck_29_2_1)
  default controller_s_2_St_19_None_2);
controller_s_2_St_19_None_1 : ((-1 when controller_c1)
  default controller_v_111_1);
controller_v_373 : ((controller_s_2_St_19_All_1 when controller_ck_29_2_1)
  default controller_s_2_St_19_None_1);
controller_r_2_St_19_None : ((1 when controller_c1)
  default controller_v_112);
controller_v_377 : ((controller_r_2_St_19_All when controller_ck_29_2_1)
  default controller_r_2_St_19_None);
controller_s_2_St_19_All_2_0 : controller_s_2_St_19_All_2;
controller_s_2_St_19_All_2_1 : controller_s_2_St_19_All_2;
controller_s_2_St_19_None_2_0 : controller_s_2_St_19_None_2;
controller_s_2_St_19_None_2_1 : controller_s_2_St_19_None_2;
controller_v_106_2_0 : controller_v_106_2;
controller_v_106_2_1 : controller_v_106_2;
controller_v_108 : (not controller_c1);
controller_v_109_2 : ((1 when controller_c2) default -1);
controller_v_109_1 : ((1 when controller_c2) default -1);
controller_v_110 : ((1 when controller_c2) default controller_pnr_2);
controller_s_2_St_19_Some_2 : ((-1 when controller_v_108)
  default controller_v_109_2);
controller_v_376 : ((1 when controller_ck_29_2_0)
  default controller_s_2_St_19_Some_2);
controller_s_2_St_19_Some_1 : ((1 when controller_v_108)
  default controller_v_109_1);
controller_v_375 : ((1 when controller_ck_29_2_0)
  default controller_s_2_St_19_Some_1);
controller_r_2_St_19_Some : ((1 when controller_v_108)
  default controller_v_110);
controller_v_378 : ((1 when controller_ck_29_2_0)
  default controller_r_2_St_19_Some);
controller_s_2_St_19_Some_2_0 : controller_s_2_St_19_Some_2;
controller_s_2_St_19_Some_2_1 : controller_s_2_St_19_Some_2;
controller_r_2 : ((controller_v_377 when controller_ck_29_1)
  default controller_v_378);
controller_s_2_2 : ((controller_v_374 when controller_ck_29_1)
  default controller_v_376);
controller_s_2_1 : ((controller_v_373 when controller_ck_29_1)
  default controller_v_375);
controller_s_2_2_0 : controller_s_2_2;
controller_s_2_2_1 : controller_s_2_2;
controller_v_109_2_0 : controller_v_109_2;
controller_v_109_2_1 : controller_v_109_2;
controller_v_111_2_0 : controller_v_111_2;
controller_v_111_2_1 : controller_v_111_2;
controller_ck_30_2 : controller_s_2_2;
controller_ck_30_1 : controller_s_2_1;
controller_ck_30_2_0 : controller_ck_30_2;
controller_ck_30_2_1 : controller_ck_30_2;
controller_ns_2_St_19_All_2 : 1;
controller_ns_2_St_19_All_1 : 1;
controller_nr_2_St_19_All : -1;
controller_l_state_1_St_19_All : a_const(2);
controller_ns_2_St_19_None_2 : -1;
controller_v_366 : ((controller_ns_2_St_19_All_2 when controller_ck_30_2_1)
  default controller_ns_2_St_19_None_2);
controller_ns_2_St_19_None_1 : 1;
controller_v_365 : ((controller_ns_2_St_19_All_1 when controller_ck_30_2_1)
  default controller_ns_2_St_19_None_1);
controller_nr_2_St_19_None : -1;
controller_v_369 : ((controller_nr_2_St_19_All when controller_ck_30_2_1)
  default controller_nr_2_St_19_None);
controller_l_state_1_St_19_None : a_const(0);
controller_v_363 : a_part(controller_ck_30_2_1, a_const(0),
                          controller_l_state_1_St_19_All,
                          controller_l_state_1_St_19_None);
controller_ns_2_St_19_All_2_0 : controller_ns_2_St_19_All_2;
controller_ns_2_St_19_All_2_1 : controller_ns_2_St_19_All_2;
controller_ns_2_St_19_None_2_0 : controller_ns_2_St_19_None_2;
controller_ns_2_St_19_None_2_1 : controller_ns_2_St_19_None_2;
controller_ns_2_St_19_Some_2 : -1;
controller_v_368 : ((1 when controller_ck_30_2_0)
  default controller_ns_2_St_19_Some_2);
controller_ns_2_St_19_Some_1 : -1;
controller_v_367 : ((1 when controller_ck_30_2_0)
  default controller_ns_2_St_19_Some_1);
controller_nr_2_St_19_Some : -1;
controller_v_370 : ((1 when controller_ck_30_2_0)
  default controller_nr_2_St_19_Some);
controller_l_state_1_St_19_Some : a_const(1);
controller_v_364 : a_part(controller_ck_30_2_0, a_const(0), a_const(0),
                          controller_l_state_1_St_19_Some);
controller_ns_2_St_19_Some_2_0 : controller_ns_2_St_19_Some_2;
controller_ns_2_St_19_Some_2_1 : controller_ns_2_St_19_Some_2;
controller_nr_2 : ((controller_v_369 when controller_ck_30_1)
  default controller_v_370);
controller_ns_2_2 : ((controller_v_366 when controller_ck_30_1)
  default controller_v_368);
controller_ns_2_1 : ((controller_v_365 when controller_ck_30_1)
  default controller_v_367);
controller_l_state_1 : a_part(controller_ck_30_1, a_const(0),
                              controller_v_363, controller_v_364);
controller_ns_2_2_0 : controller_ns_2_2;
controller_ns_2_2_1 : controller_ns_2_2;
controller_l_state : controller_l_state_1;
controller_ck_31_2_0 : controller_ck_31_2;
controller_ck_31_2_1 : controller_ck_31_2;
controller_v_113 : (not controller_c1_1);
controller_v_114 : (not controller_c2_1);
controller_v_115_2 : ((1 when controller_v_114) default -1);
controller_v_115_1 : ((1 when controller_v_114) default -1);
controller_v_116 : ((1 when controller_v_114) default controller_pnr_1);
controller_s_1_St_18_Up_2 : ((-1 when controller_v_113)
  default controller_v_115_2);
controller_v_360 : ((1 when controller_ck_31_2_0)
  default controller_s_1_St_18_Up_2);
controller_s_1_St_18_Up_1 : ((1 when controller_v_113)
  default controller_v_115_1);
controller_v_359 : ((1 when controller_ck_31_2_0)
  default controller_s_1_St_18_Up_1);
controller_r_1_St_18_Up : ((1 when controller_v_113)
  default controller_v_116);
controller_v_362 : ((1 when controller_ck_31_2_0)
  default controller_r_1_St_18_Up);
controller_s_1_St_18_Up_2_0 : controller_s_1_St_18_Up_2;
controller_s_1_St_18_Up_2_1 : controller_s_1_St_18_Up_2;
controller_v_115_2_0 : controller_v_115_2;
controller_v_115_2_1 : controller_v_115_2;
controller_v_117 : (not controller_c1_1);
controller_v_118_2 : ((-1 when controller_c2_1) default -1);
controller_v_118_1 : ((-1 when controller_c2_1) default 1);
controller_v_119 : ((1 when controller_c2_1) default controller_pnr_1);
controller_s_1_St_18_Mid_2 : ((1 when controller_v_117)
  default controller_v_118_2);
controller_s_1_St_18_Mid_1 : ((1 when controller_v_117)
  default controller_v_118_1);
controller_r_1_St_18_Mid : ((1 when controller_v_117)
  default controller_v_119);
controller_v_120_2 : ((-1 when controller_c2_1) default 1);
controller_v_120_1 : ((-1 when controller_c2_1) default 1);
controller_v_121 : ((1 when controller_c2_1) default controller_pnr_1);
controller_s_1_St_18_Down_2 : ((-1 when controller_c1_1)
  default controller_v_120_2);
controller_v_358 : ((controller_s_1_St_18_Down_2 when controller_ck_31_2_1)
  default controller_s_1_St_18_Mid_2);
controller_s_1_St_18_Down_1 : ((1 when controller_c1_1)
  default controller_v_120_1);
controller_v_357 : ((controller_s_1_St_18_Down_1 when controller_ck_31_2_1)
  default controller_s_1_St_18_Mid_1);
controller_r_1_St_18_Down : ((1 when controller_c1_1)
  default controller_v_121);
controller_v_361 : ((controller_r_1_St_18_Down when controller_ck_31_2_1)
  default controller_r_1_St_18_Mid);
controller_s_1_St_18_Mid_2_0 : controller_s_1_St_18_Mid_2;
controller_s_1_St_18_Mid_2_1 : controller_s_1_St_18_Mid_2;
controller_s_1_St_18_Down_2_0 : controller_s_1_St_18_Down_2;
controller_s_1_St_18_Down_2_1 : controller_s_1_St_18_Down_2;
controller_r_1 : ((controller_v_361 when controller_ck_31_1)
  default controller_v_362);
controller_s_1_2 : ((controller_v_358 when controller_ck_31_1)
  default controller_v_360);
controller_s_1_1 : ((controller_v_357 when controller_ck_31_1)
  default controller_v_359);
controller_s_1_2_0 : controller_s_1_2;
controller_s_1_2_1 : controller_s_1_2;
controller_v_118_2_0 : controller_v_118_2;
controller_v_118_2_1 : controller_v_118_2;
controller_v_120_2_0 : controller_v_120_2;
controller_v_120_2_1 : controller_v_120_2;
controller_ck_32_2 : controller_s_1_2;
controller_ck_32_1 : controller_s_1_1;
controller_ck_32_2_0 : controller_ck_32_2;
controller_ck_32_2_1 : controller_ck_32_2;
controller_ns_1_St_18_Up_2 : -1;
controller_v_352 : ((1 when controller_ck_32_2_0)
  default controller_ns_1_St_18_Up_2);
controller_ns_1_St_18_Up_1 : -1;
controller_v_351 : ((1 when controller_ck_32_2_0)
  default controller_ns_1_St_18_Up_1);
controller_nr_1_St_18_Up : -1;
controller_v_354 : ((1 when controller_ck_32_2_0)
  default controller_nr_1_St_18_Up);
controller_p_state_1_St_18_Up : a_const(2);
controller_v_348 : a_part(controller_ck_32_2_0, a_const(0), a_const(0),
                          controller_p_state_1_St_18_Up);
controller_ns_1_St_18_Up_2_0 : controller_ns_1_St_18_Up_2;
controller_ns_1_St_18_Up_2_1 : controller_ns_1_St_18_Up_2;
controller_ns_1_St_18_Mid_2 : -1;
controller_ns_1_St_18_Mid_1 : 1;
controller_nr_1_St_18_Mid : -1;
controller_p_state_1_St_18_Mid : a_const(1);
controller_ns_1_St_18_Down_2 : 1;
controller_v_350 : ((controller_ns_1_St_18_Down_2 when controller_ck_32_2_1)
  default controller_ns_1_St_18_Mid_2);
controller_ns_1_St_18_Down_1 : 1;
controller_v_349 : ((controller_ns_1_St_18_Down_1 when controller_ck_32_2_1)
  default controller_ns_1_St_18_Mid_1);
controller_nr_1_St_18_Down : -1;
controller_v_353 : ((controller_nr_1_St_18_Down when controller_ck_32_2_1)
  default controller_nr_1_St_18_Mid);
controller_p_state_1_St_18_Down : a_const(0);
controller_v_347 : a_part(controller_ck_32_2_1, a_const(0),
                          controller_p_state_1_St_18_Down,
                          controller_p_state_1_St_18_Mid);
controller_ns_1_St_18_Mid_2_0 : controller_ns_1_St_18_Mid_2;
controller_ns_1_St_18_Mid_2_1 : controller_ns_1_St_18_Mid_2;
controller_ns_1_St_18_Down_2_0 : controller_ns_1_St_18_Down_2;
controller_ns_1_St_18_Down_2_1 : controller_ns_1_St_18_Down_2;
controller_nr_1 : ((controller_v_353 when controller_ck_32_1)
  default controller_v_354);
controller_ns_1_2 : ((controller_v_350 when controller_ck_32_1)
  default controller_v_352);
controller_ns_1_1 : ((controller_v_349 when controller_ck_32_1)
  default controller_v_351);
controller_p_state_1 : a_part(controller_ck_32_1, a_const(0),
                              controller_v_347, controller_v_348);
controller_ns_1_2_0 : controller_ns_1_2;
controller_ns_1_2_1 : controller_ns_1_2;
controller_p_state : controller_p_state_1;
controller_ck_33_2_0 : controller_ck_33_2;
controller_ck_33_2_1 : controller_ck_33_2;
controller_v_122 : (not controller_c1_2);
controller_v_123 : (not controller_c2_2);
controller_v_124_2 : ((-1 when controller_v_123) default 1);
controller_v_124_1 : ((-1 when controller_v_123) default 1);
controller_v_125 : ((1 when controller_v_123) default controller_pnr);
controller_s_St_17_Max_2 : ((-1 when controller_v_122)
  default controller_v_124_2);
controller_s_St_17_Max_1 : ((1 when controller_v_122)
  default controller_v_124_1);
controller_r_St_17_Max : ((1 when controller_v_122)
  default controller_v_125);
controller_v_126 : (not controller_c1_2);
controller_v_127_2 : ((1 when controller_c2_2) default -1);
controller_v_127_1 : ((1 when controller_c2_2) default 1);
controller_v_128 : ((1 when controller_c2_2) default controller_pnr);
controller_s_St_17_Min_2 : ((-1 when controller_v_126)
  default controller_v_127_2);
controller_v_342 : ((controller_s_St_17_Max_2 when controller_ck_33_2_1)
  default controller_s_St_17_Min_2);
controller_s_St_17_Min_1 : ((-1 when controller_v_126)
  default controller_v_127_1);
controller_v_341 : ((controller_s_St_17_Max_1 when controller_ck_33_2_1)
  default controller_s_St_17_Min_1);
controller_r_St_17_Min : ((1 when controller_v_126)
  default controller_v_128);
controller_v_345 : ((controller_r_St_17_Max when controller_ck_33_2_1)
  default controller_r_St_17_Min);
controller_s_St_17_Max_2_0 : controller_s_St_17_Max_2;
controller_s_St_17_Max_2_1 : controller_s_St_17_Max_2;
controller_s_St_17_Min_2_0 : controller_s_St_17_Min_2;
controller_s_St_17_Min_2_1 : controller_s_St_17_Min_2;
controller_v_124_2_0 : controller_v_124_2;
controller_v_124_2_1 : controller_v_124_2;
controller_v_127_2_0 : controller_v_127_2;
controller_v_127_2_1 : controller_v_127_2;
controller_v_129_2 : ((1 when controller_c2_2) default -1);
controller_v_129_1 : ((1 when controller_c2_2) default -1);
controller_v_130 : ((1 when controller_c2_2) default controller_pnr);
controller_s_St_17_Off_2 : ((-1 when controller_c1_2)
  default controller_v_129_2);
controller_v_344 : ((1 when controller_ck_33_2_0)
  default controller_s_St_17_Off_2);
controller_s_St_17_Off_1 : ((1 when controller_c1_2)
  default controller_v_129_1);
controller_v_343 : ((1 when controller_ck_33_2_0)
  default controller_s_St_17_Off_1);
controller_r_St_17_Off : ((1 when controller_c1_2) default controller_v_130);
controller_v_346 : ((1 when controller_ck_33_2_0)
  default controller_r_St_17_Off);
controller_s_St_17_Off_2_0 : controller_s_St_17_Off_2;
controller_s_St_17_Off_2_1 : controller_s_St_17_Off_2;
controller_r : ((controller_v_345 when controller_ck_33_1)
  default controller_v_346);
controller_s_2_3 : ((controller_v_342 when controller_ck_33_1)
  default controller_v_344);
controller_s_1_3 : ((controller_v_341 when controller_ck_33_1)
  default controller_v_343);
controller_s_2_3_0 : controller_s_2_3;
controller_s_2_3_1 : controller_s_2_3;
controller_v_129_2_0 : controller_v_129_2;
controller_v_129_2_1 : controller_v_129_2;
controller_ck_34_2 : controller_s_2_3;
controller_ck_34_1 : controller_s_1_3;
controller_ck_34_2_0 : controller_ck_34_2;
controller_ck_34_2_1 : controller_ck_34_2;
controller_ns_St_17_Max_2 : 1;
controller_ns_St_17_Max_1 : 1;
controller_nr_St_17_Max : -1;
controller_ar_state_1_St_17_Max : a_const(2);
controller_ns_St_17_Min_2 : -1;
controller_v_334 : ((controller_ns_St_17_Max_2 when controller_ck_34_2_1)
  default controller_ns_St_17_Min_2);
controller_ns_St_17_Min_1 : 1;
controller_v_333 : ((controller_ns_St_17_Max_1 when controller_ck_34_2_1)
  default controller_ns_St_17_Min_1);
controller_nr_St_17_Min : -1;
controller_v_337 : ((controller_nr_St_17_Max when controller_ck_34_2_1)
  default controller_nr_St_17_Min);
controller_ar_state_1_St_17_Min : a_const(1);
controller_v_331 : a_part(controller_ck_34_2_1, a_const(0),
                          controller_ar_state_1_St_17_Max,
                          controller_ar_state_1_St_17_Min);
controller_ns_St_17_Max_2_0 : controller_ns_St_17_Max_2;
controller_ns_St_17_Max_2_1 : controller_ns_St_17_Max_2;
controller_ns_St_17_Min_2_0 : controller_ns_St_17_Min_2;
controller_ns_St_17_Min_2_1 : controller_ns_St_17_Min_2;
controller_ns_St_17_Off_2 : -1;
controller_v_336 : ((1 when controller_ck_34_2_0)
  default controller_ns_St_17_Off_2);
controller_ns_St_17_Off_1 : -1;
controller_v_335 : ((1 when controller_ck_34_2_0)
  default controller_ns_St_17_Off_1);
controller_nr_St_17_Off : -1;
controller_v_338 : ((1 when controller_ck_34_2_0)
  default controller_nr_St_17_Off);
controller_ar_state_1_St_17_Off : a_const(0);
controller_v_332 : a_part(controller_ck_34_2_0, a_const(0), a_const(0),
                          controller_ar_state_1_St_17_Off);
controller_ns_St_17_Off_2_0 : controller_ns_St_17_Off_2;
controller_ns_St_17_Off_2_1 : controller_ns_St_17_Off_2;
controller_nr : ((controller_v_337 when controller_ck_34_1)
  default controller_v_338);
controller_ns_2_3 : ((controller_v_334 when controller_ck_34_1)
  default controller_v_336);
controller_ns_1_3 : ((controller_v_333 when controller_ck_34_1)
  default controller_v_335);
controller_ar_state_1 : a_part(controller_ck_34_1, a_const(0),
                               controller_v_331, controller_v_332);
controller_ns_2_3_0 : controller_ns_2_3;
controller_ns_2_3_1 : controller_ns_2_3;
controller_ar_state : controller_ar_state_1;
initialisations : concat(initialisations, [(controller_ck_1 = 1)]);
evolutions : concat(evolutions, [(controller_ns_8_1 default controller_ck_1)]);
initialisations : concat(initialisations, [(controller_pnr_8 = -1)]);
evolutions : concat(evolutions, [(controller_nr_8 default controller_pnr_8)]);
initialisations : concat(initialisations, [(controller_ck_19_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_7_1 default controller_ck_19_1)]);
initialisations : concat(initialisations, [(controller_pnr_7 = -1)]);
evolutions : concat(evolutions, [(controller_nr_7 default controller_pnr_7)]);
initialisations : concat(initialisations, [(controller_ck_21_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_6_1 default controller_ck_21_1)]);
initialisations : concat(initialisations, [(controller_pnr_6 = -1)]);
evolutions : concat(evolutions, [(controller_nr_6 default controller_pnr_6)]);
initialisations : concat(initialisations, [(controller_ck_23_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_5_1 default controller_ck_23_1)]);
initialisations : concat(initialisations, [(controller_pnr_5 = -1)]);
evolutions : concat(evolutions, [(controller_nr_5 default controller_pnr_5)]);
initialisations : concat(initialisations, [(controller_ck_25_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_4_1 default controller_ck_25_1)]);
initialisations : concat(initialisations, [(controller_pnr_4 = -1)]);
evolutions : concat(evolutions, [(controller_nr_4 default controller_pnr_4)]);
initialisations : concat(initialisations, [(controller_ck_27_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_3_1 default controller_ck_27_1)]);
initialisations : concat(initialisations, [(controller_pnr_3 = -1)]);
evolutions : concat(evolutions, [(controller_nr_3 default controller_pnr_3)]);
initialisations : concat(initialisations, [(controller_v_372 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_2_2 default controller_v_372)]);
initialisations : concat(initialisations, [(controller_v_371 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_2_1 default controller_v_371)]);
initialisations : concat(initialisations, [(controller_pnr_2 = -1)]);
evolutions : concat(evolutions, [(controller_nr_2 default controller_pnr_2)]);
initialisations : concat(initialisations, [(controller_v_356 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_1_2 default controller_v_356)]);
initialisations : concat(initialisations, [(controller_v_355 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_1_1 default controller_v_355)]);
initialisations : concat(initialisations, [(controller_pnr_1 = -1)]);
evolutions : concat(evolutions, [(controller_nr_1 default controller_pnr_1)]);
initialisations : concat(initialisations, [(controller_v_340 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_2_3 default controller_v_340)]);
initialisations : concat(initialisations, [(controller_v_339 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_1_3 default controller_v_339)]);
initialisations : concat(initialisations, [(controller_pnr = -1)]);
evolutions : concat(evolutions, [(controller_nr default controller_pnr)]);
controller_v_94 : (not controller_p_open);
controller_v_95 : (controller_presence and controller_v_94);
controller_rule2 : (not controller_v_95);
controller_v_92 : (not controller_p_open);
controller_v_91 : (not controller_night);
controller_v_93 : (controller_v_91 and controller_v_92);
controller_rule3 : (not controller_v_93);
controller_v_96 : (controller_rule2 and controller_rule3);
controller_v_89 : (not controller_presence);
controller_v_90 : (controller_v_89 and controller_night);
controller_rule4 : (controller_v_90 or controller_p_open);
controller_v_97 : (controller_v_96 and controller_rule4);
controller_v_88 : (a_iminv(controller_l_state, 2) + 1);
controller_v_86 : (not controller_presence);
controller_v_87 : (controller_v_86 and controller_night);
controller_rule5 : (controller_v_87 or controller_v_88);
controller_v_84 : (a_iminv(controller_ar_state, 0) + 1);
controller_v_82 : (a_iminv(controller_p_state, 0) + 1);
controller_v_80 : (a_iminv(controller_l_state, 0) + 1);
controller_v_78 : (not controller_w_open);
controller_v_76 : (not controller_pc_on);
controller_v_75 : (not controller_r_on1);
controller_v_77 : (controller_v_75 and controller_v_76);
controller_v_79 : (controller_v_77 and controller_v_78);
controller_v_81 : (controller_v_79 and controller_v_80);
controller_v_83 : (controller_v_81 and controller_v_82);
controller_v_85 : (controller_v_83 and controller_v_84);
controller_rule6 : (controller_presence or controller_v_85);
controller_v_98 : (controller_v_97 and controller_rule6);
controller_v_74 : (a_iminv(controller_ar_state, 1) + 1);
controller_v : (not controller_night);
controller_v_72 : (controller_presence and controller_v);
controller_v_73 : (not controller_v_72);
controller_rule7 : (controller_v_73 or controller_v_74);
controller_v_99 : (controller_v_98 and controller_rule7);
controller_assume : 1;
controller_guarantee : controller_v_99;
initialisations : concat(initialisations, [(controller_error_state = 1)]);
evolutions : concat(evolutions, [controller_guarantee]);
constraints : [((controller_shift_turno^2) = 1), ((controller_abre_porta^2)
               = 1), ((controller_p_arrived^2) = 1), ((controller_c_ar2^2)
               = 1), ((controller_c_ar1^2) = 1), ((controller_c_per2^2) = 1),
               ((controller_c_per1^2) = 1), ((controller_c_luz2^2) = 1),
               ((controller_c_luz1^2) = 1), ((controller_c_jan^2) = 1),
               ((controller_c_pc^2) = 1), ((controller_c_rot^2) = 1),
               ((controller_c_porta^2) = 1), (controller_assume = 1)];

% --- outputs : [controller_night, controller_p_open, controller_r_on1,
                 controller_presence, controller_pc_on, controller_w_open,
                 controller_l_state, controller_p_state, controller_ar_state] --- %
controller : processus(conditions, states, evolutions, initialisations,
                       [gen(constraints)], controllables);
controller_init : initial(controller);
controller : S_Security(controller,B_True(controller,controller_error_state));
dcs_result : equal(controller_init,initial(controller));
if dcs_result then
    print("controller: synthesis succeeded.")
else
    print("controller: synthesis failed.");

if dcs_result then
    print("Triangulation and controller generation...")
else
    quit(1);
declare(p_controller_c_ar2, p_controller_c_ar1, p_controller_c_per2,
        p_controller_c_per1, p_controller_c_luz2, p_controller_c_luz1,
        p_controller_c_jan, p_controller_c_pc, p_controller_c_rot,
        p_controller_c_porta);
phantom_vars : [p_controller_c_ar2, p_controller_c_ar1, p_controller_c_per2,
                p_controller_c_per1, p_controller_c_luz2,
                p_controller_c_luz1, p_controller_c_jan, p_controller_c_pc,
                p_controller_c_rot, p_controller_c_porta];
controller_triang : Triang(constraint(controller),controllables,phantom_vars);
controller_inputs : [controller_shift_turno, controller_abre_porta,
                     controller_p_arrived, controller_ck_1, controller_pnr_8,
                     controller_ck_19_1, controller_pnr_7,
                     controller_ck_21_1, controller_pnr_6,
                     controller_ck_23_1, controller_pnr_5,
                     controller_ck_25_1, controller_pnr_4,
                     controller_ck_27_1, controller_pnr_3, controller_v_372,
                     controller_v_371, controller_pnr_2, controller_v_356,
                     controller_v_355, controller_pnr_1, controller_v_340,
                     controller_v_339, controller_pnr, p_controller_c_ar2,
                     p_controller_c_ar1, p_controller_c_per2,
                     p_controller_c_per1, p_controller_c_luz2,
                     p_controller_c_luz1, p_controller_c_jan,
                     p_controller_c_pc, p_controller_c_rot,
                     p_controller_c_porta];
heptagon_controller("controller_controller.ept","controller",controller_inputs,controllables,controller_triang);

