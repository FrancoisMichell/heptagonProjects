% --- Generated the 16/7/2018 at 14:7 --- %
% --- heptagon compiler, version 1.03.00 (compiled fri. jun. 15 15:41:53 CET 2018) --- %
% --- Command line: /usr/local/bin/heptc -target c -target z3z -s controller system.ept --- %

set_reorder(2);read("Property.lib");read("Synthesis.lib");read("Verif_Determ.lib");read("Simul.lib");read("Synthesis_Partial_order.lib");read("Orbite.lib");
% -- dependencies --- %

% ---------- process controller ---------- %

declare(controller_change_shift, controller_worker, controller_cleaner,
        controller_air_failed_recovered, controller_light_switch,
        controller_light_failed_recovered, controller_blind_switch,
        controller_blind_failed_recovered, controller_c_blind_2,
        controller_c_blind_1, controller_c_light_2, controller_c_light_1,
        controller_c_closet, controller_c_air_2, controller_c_air_1,
        controller_c_window, controller_c_pc, controller_c_door,
        controller_ck_1, controller_pnr_15, controller_ck_21_1,
        controller_pnr_14, controller_ck_23_1, controller_pnr_13,
        controller_ck_25_1, controller_pnr_12, controller_ck_27_1,
        controller_pnr_11, controller_ck_29_1, controller_pnr_10,
        controller_ck_31_1, controller_pnr_9, controller_v_221,
        controller_v_220, controller_pnr_8, controller_ck_35_1,
        controller_pnr_7, controller_ck_37_1, controller_pnr_6,
        controller_ck_39_1, controller_pnr_5, controller_ck_41_1,
        controller_pnr_4, controller_ck_43_1, controller_pnr,
        controller_error_state);
conditions : [controller_change_shift, controller_worker, controller_cleaner,
              controller_air_failed_recovered, controller_light_switch,
              controller_light_failed_recovered, controller_blind_switch,
              controller_blind_failed_recovered, controller_c_blind_2,
              controller_c_blind_1, controller_c_light_2,
              controller_c_light_1, controller_c_closet, controller_c_air_2,
              controller_c_air_1, controller_c_window, controller_c_pc,
              controller_c_door];
states : [controller_ck_1, controller_pnr_15, controller_ck_21_1,
          controller_pnr_14, controller_ck_23_1, controller_pnr_13,
          controller_ck_25_1, controller_pnr_12, controller_ck_27_1,
          controller_pnr_11, controller_ck_29_1, controller_pnr_10,
          controller_ck_31_1, controller_pnr_9, controller_v_221,
          controller_v_220, controller_pnr_8, controller_ck_35_1,
          controller_pnr_7, controller_ck_37_1, controller_pnr_6,
          controller_ck_39_1, controller_pnr_5, controller_ck_41_1,
          controller_pnr_4, controller_ck_43_1, controller_pnr,
          controller_error_state];
controllables : [controller_c_blind_2, controller_c_blind_1,
                 controller_c_light_2, controller_c_light_1,
                 controller_c_closet, controller_c_air_2, controller_c_air_1,
                 controller_c_window, controller_c_pc, controller_c_door];
evolutions : [];
initialisations : [];
controller_change : controller_change_shift;
controller_c_door_1 : controller_c_door;
controller_c : controller_c_closet;
controller_arrived : controller_worker;
controller_arrived_1 : controller_cleaner;
controller_c_1 : controller_c_pc;
controller_c_2 : controller_c_window;
controller_ck_33_2 : controller_v_221;
controller_ck_33_1 : controller_v_220;
controller_failed_recovered : controller_air_failed_recovered;
controller_failed_recovered_1 : controller_failed_recovered;
controller_c2 : controller_c_air_2;
controller_c2_1 : controller_c2;
controller_c1 : controller_c_air_1;
controller_c1_1 : controller_c1;
controller_failed_recovered_4 : controller_light_failed_recovered;
controller_failed_recovered_2 : controller_failed_recovered_4;
controller_c2_4 : controller_c_light_2;
controller_sw_1 : controller_c2_4;
controller_c1_4 : controller_c_light_1;
controller_c2_2 : controller_c1_4;
controller_sw : controller_light_switch;
controller_c1_2 : controller_sw;
controller_failed_recovered_5 : controller_blind_failed_recovered;
controller_failed_recovered_3 : controller_failed_recovered_5;
controller_c2_5 : controller_c_blind_2;
controller_sw_2 : controller_c2_5;
controller_c1_5 : controller_c_blind_1;
controller_c2_3 : controller_c1_5;
controller_sw_3 : controller_blind_switch;
controller_c1_3 : controller_sw_3;
controller_s_15_St_28_Noite_1 : ((1 when controller_change) default -1);
controller_r_15_St_28_Noite : ((1 when controller_change)
  default controller_pnr_15);
controller_s_15_St_28_Dia_1 : ((-1 when controller_change) default 1);
controller_s_15_1 : ((controller_s_15_St_28_Dia_1 when controller_ck_1)
  default controller_s_15_St_28_Noite_1);
controller_r_15_St_28_Dia : ((1 when controller_change)
  default controller_pnr_15);
controller_r_15 : ((controller_r_15_St_28_Dia when controller_ck_1)
  default controller_r_15_St_28_Noite);
controller_ck_20_1 : controller_s_15_1;
controller_ns_15_St_28_Noite_1 : -1;
controller_nr_15_St_28_Noite : -1;
controller_night_1_St_28_Noite : 1;
controller_ns_15_St_28_Dia_1 : 1;
controller_ns_15_1 : ((controller_ns_15_St_28_Dia_1 when controller_ck_20_1)
  default controller_ns_15_St_28_Noite_1);
controller_nr_15_St_28_Dia : -1;
controller_nr_15 : ((controller_nr_15_St_28_Dia when controller_ck_20_1)
  default controller_nr_15_St_28_Noite);
controller_night_1_St_28_Dia : -1;
controller_night_1 : ((controller_night_1_St_28_Dia when controller_ck_20_1)
  default controller_night_1_St_28_Noite);
controller_night : controller_night_1;
controller_v_150 : (not controller_c_door_1);
controller_s_14_St_27_Open_1 : ((1 when controller_v_150) default -1);
controller_r_14_St_27_Open : ((1 when controller_v_150)
  default controller_pnr_14);
controller_v_151 : (not controller_c_door_1);
controller_s_14_St_27_Closed_1 : ((-1 when controller_v_151) default 1);
controller_s_14_1 : ((controller_s_14_St_27_Closed_1 when controller_ck_21_1)
  default controller_s_14_St_27_Open_1);
controller_r_14_St_27_Closed : ((1 when controller_v_151)
  default controller_pnr_14);
controller_r_14 : ((controller_r_14_St_27_Closed when controller_ck_21_1)
  default controller_r_14_St_27_Open);
controller_ck_22_1 : controller_s_14_1;
controller_ns_14_St_27_Open_1 : -1;
controller_nr_14_St_27_Open : -1;
controller_door_open_1_St_27_Open : 1;
controller_ns_14_St_27_Closed_1 : 1;
controller_ns_14_1 : ((controller_ns_14_St_27_Closed_1
  when controller_ck_22_1) default controller_ns_14_St_27_Open_1);
controller_nr_14_St_27_Closed : -1;
controller_nr_14 : ((controller_nr_14_St_27_Closed when controller_ck_22_1)
  default controller_nr_14_St_27_Open);
controller_door_open_1_St_27_Closed : -1;
controller_door_open_1 : ((controller_door_open_1_St_27_Closed
  when controller_ck_22_1) default controller_door_open_1_St_27_Open);
controller_door_open : controller_door_open_1;
controller_s_13_St_26_Open_1 : ((1 when controller_c) default -1);
controller_r_13_St_26_Open : ((1 when controller_c)
  default controller_pnr_13);
controller_v_152 : (not controller_c);
controller_s_13_St_26_Locked_1 : ((-1 when controller_v_152) default 1);
controller_s_13_1 : ((controller_s_13_St_26_Locked_1 when controller_ck_23_1)
  default controller_s_13_St_26_Open_1);
controller_r_13_St_26_Locked : ((1 when controller_v_152)
  default controller_pnr_13);
controller_r_13 : ((controller_r_13_St_26_Locked when controller_ck_23_1)
  default controller_r_13_St_26_Open);
controller_ck_24_1 : controller_s_13_1;
controller_ns_13_St_26_Open_1 : -1;
controller_nr_13_St_26_Open : -1;
controller_closet_open_1_St_26_Open : 1;
controller_ns_13_St_26_Locked_1 : 1;
controller_ns_13_1 : ((controller_ns_13_St_26_Locked_1
  when controller_ck_24_1) default controller_ns_13_St_26_Open_1);
controller_nr_13_St_26_Locked : -1;
controller_nr_13 : ((controller_nr_13_St_26_Locked when controller_ck_24_1)
  default controller_nr_13_St_26_Open);
controller_closet_open_1_St_26_Locked : -1;
controller_closet_open_1 : ((controller_closet_open_1_St_26_Locked
  when controller_ck_24_1) default controller_closet_open_1_St_26_Open);
controller_closet_open : controller_closet_open_1;
controller_s_12_St_25_Present_1 : ((1 when controller_arrived) default -1);
controller_r_12_St_25_Present : ((1 when controller_arrived)
  default controller_pnr_12);
controller_s_12_St_25_Not_Present_1 : ((-1 when controller_arrived)
  default 1);
controller_s_12_1 : ((controller_s_12_St_25_Not_Present_1
  when controller_ck_25_1) default controller_s_12_St_25_Present_1);
controller_r_12_St_25_Not_Present : ((1 when controller_arrived)
  default controller_pnr_12);
controller_r_12 : ((controller_r_12_St_25_Not_Present
  when controller_ck_25_1) default controller_r_12_St_25_Present);
controller_ck_26_1 : controller_s_12_1;
controller_ns_12_St_25_Present_1 : -1;
controller_nr_12_St_25_Present : -1;
controller_presence_St_25_Present : 1;
controller_ns_12_St_25_Not_Present_1 : 1;
controller_ns_12_1 : ((controller_ns_12_St_25_Not_Present_1
  when controller_ck_26_1) default controller_ns_12_St_25_Present_1);
controller_nr_12_St_25_Not_Present : -1;
controller_nr_12 : ((controller_nr_12_St_25_Not_Present
  when controller_ck_26_1) default controller_nr_12_St_25_Present);
controller_presence_St_25_Not_Present : -1;
controller_presence : ((controller_presence_St_25_Not_Present
  when controller_ck_26_1) default controller_presence_St_25_Present);
controller_worker_presence : controller_presence;
controller_s_11_St_24_Present_1 : ((1 when controller_arrived_1) default -1);
controller_r_11_St_24_Present : ((1 when controller_arrived_1)
  default controller_pnr_11);
controller_s_11_St_24_Not_Present_1 : ((-1 when controller_arrived_1)
  default 1);
controller_s_11_1 : ((controller_s_11_St_24_Not_Present_1
  when controller_ck_27_1) default controller_s_11_St_24_Present_1);
controller_r_11_St_24_Not_Present : ((1 when controller_arrived_1)
  default controller_pnr_11);
controller_r_11 : ((controller_r_11_St_24_Not_Present
  when controller_ck_27_1) default controller_r_11_St_24_Present);
controller_ck_28_1 : controller_s_11_1;
controller_ns_11_St_24_Present_1 : -1;
controller_nr_11_St_24_Present : -1;
controller_presence_1_St_24_Present : 1;
controller_ns_11_St_24_Not_Present_1 : 1;
controller_ns_11_1 : ((controller_ns_11_St_24_Not_Present_1
  when controller_ck_28_1) default controller_ns_11_St_24_Present_1);
controller_nr_11_St_24_Not_Present : -1;
controller_nr_11 : ((controller_nr_11_St_24_Not_Present
  when controller_ck_28_1) default controller_nr_11_St_24_Present);
controller_presence_1_St_24_Not_Present : -1;
controller_presence_1 : ((controller_presence_1_St_24_Not_Present
  when controller_ck_28_1) default controller_presence_1_St_24_Present);
controller_cleaner_presence : controller_presence_1;
controller_v_153 : (not controller_c_1);
controller_s_10_St_23_On_1 : ((1 when controller_v_153) default -1);
controller_r_10_St_23_On : ((1 when controller_v_153)
  default controller_pnr_10);
controller_v_154 : (not controller_c_1);
controller_s_10_St_23_Off_1 : ((-1 when controller_v_154) default 1);
controller_s_10_1 : ((controller_s_10_St_23_Off_1 when controller_ck_29_1)
  default controller_s_10_St_23_On_1);
controller_r_10_St_23_Off : ((1 when controller_v_154)
  default controller_pnr_10);
controller_r_10 : ((controller_r_10_St_23_Off when controller_ck_29_1)
  default controller_r_10_St_23_On);
controller_ck_30_1 : controller_s_10_1;
controller_ns_10_St_23_On_1 : -1;
controller_nr_10_St_23_On : -1;
controller_computer_on_St_23_On : 1;
controller_ns_10_St_23_Off_1 : 1;
controller_ns_10_1 : ((controller_ns_10_St_23_Off_1 when controller_ck_30_1)
  default controller_ns_10_St_23_On_1);
controller_nr_10_St_23_Off : -1;
controller_nr_10 : ((controller_nr_10_St_23_Off when controller_ck_30_1)
  default controller_nr_10_St_23_On);
controller_computer_on_St_23_Off : -1;
controller_computer_on : ((controller_computer_on_St_23_Off
  when controller_ck_30_1) default controller_computer_on_St_23_On);
controller_pc_on : controller_computer_on;
controller_s_9_St_22_Open_1 : ((1 when controller_c_2) default -1);
controller_r_9_St_22_Open : ((1 when controller_c_2)
  default controller_pnr_9);
controller_v_155 : (not controller_c_2);
controller_s_9_St_22_Closed_1 : ((-1 when controller_v_155) default 1);
controller_s_9_1 : ((controller_s_9_St_22_Closed_1 when controller_ck_31_1)
  default controller_s_9_St_22_Open_1);
controller_r_9_St_22_Closed : ((1 when controller_v_155)
  default controller_pnr_9);
controller_r_9 : ((controller_r_9_St_22_Closed when controller_ck_31_1)
  default controller_r_9_St_22_Open);
controller_ck_32_1 : controller_s_9_1;
controller_ns_9_St_22_Open_1 : -1;
controller_nr_9_St_22_Open : -1;
controller_window_open_1_St_22_Open : 1;
controller_ns_9_St_22_Closed_1 : 1;
controller_ns_9_1 : ((controller_ns_9_St_22_Closed_1 when controller_ck_32_1)
  default controller_ns_9_St_22_Open_1);
controller_nr_9_St_22_Closed : -1;
controller_nr_9 : ((controller_nr_9_St_22_Closed when controller_ck_32_1)
  default controller_nr_9_St_22_Open);
controller_window_open_1_St_22_Closed : -1;
controller_window_open_1 : ((controller_window_open_1_St_22_Closed
  when controller_ck_32_1) default controller_window_open_1_St_22_Open);
controller_window_open : controller_window_open_1;
controller_ck_33_2_0 : controller_ck_33_2;
controller_ck_33_2_1 : controller_ck_33_2;
controller_v_156 : (not controller_c1_1);
controller_v_157 : (not controller_c2_1);
controller_v_158_2 : ((-1 when controller_v_157) default 1);
controller_v_158_1 : ((-1 when controller_v_157) default 1);
controller_v_159 : ((1 when controller_v_157) default controller_pnr_8);
controller_s_8_St_21_Max_2 : ((-1 when controller_v_156)
  default controller_v_158_2);
controller_s_8_St_21_Max_1 : ((1 when controller_v_156)
  default controller_v_158_1);
controller_r_8_St_21_Max : ((1 when controller_v_156)
  default controller_v_159);
controller_v_160 : (not controller_c1_1);
controller_v_161 : (not controller_c2_1);
controller_v_162_2 : ((1 when controller_v_161) default -1);
controller_v_162_1 : ((1 when controller_v_161) default 1);
controller_v_163 : ((1 when controller_v_161) default controller_pnr_8);
controller_s_8_St_21_Min_2 : ((-1 when controller_v_160)
  default controller_v_162_2);
controller_v_223 : ((controller_s_8_St_21_Max_2 when controller_ck_33_2_1)
  default controller_s_8_St_21_Min_2);
controller_s_8_St_21_Min_1 : ((-1 when controller_v_160)
  default controller_v_162_1);
controller_v_222 : ((controller_s_8_St_21_Max_1 when controller_ck_33_2_1)
  default controller_s_8_St_21_Min_1);
controller_r_8_St_21_Min : ((1 when controller_v_160)
  default controller_v_163);
controller_v_226 : ((controller_r_8_St_21_Max when controller_ck_33_2_1)
  default controller_r_8_St_21_Min);
controller_s_8_St_21_Max_2_0 : controller_s_8_St_21_Max_2;
controller_s_8_St_21_Max_2_1 : controller_s_8_St_21_Max_2;
controller_s_8_St_21_Min_2_0 : controller_s_8_St_21_Min_2;
controller_s_8_St_21_Min_2_1 : controller_s_8_St_21_Min_2;
controller_v_158_2_0 : controller_v_158_2;
controller_v_158_2_1 : controller_v_158_2;
controller_v_162_2_0 : controller_v_162_2;
controller_v_162_2_1 : controller_v_162_2;
controller_v_164 : (not controller_c1_1);
controller_v_165 : (not controller_c2_1);
controller_v_166_2 : ((1 when controller_v_165) default -1);
controller_v_166_1 : ((1 when controller_v_165) default -1);
controller_v_167 : ((1 when controller_v_165) default controller_pnr_8);
controller_s_8_St_21_Off_2 : ((-1 when controller_v_164)
  default controller_v_166_2);
controller_v_225 : ((1 when controller_ck_33_2_0)
  default controller_s_8_St_21_Off_2);
controller_s_8_St_21_Off_1 : ((1 when controller_v_164)
  default controller_v_166_1);
controller_v_224 : ((1 when controller_ck_33_2_0)
  default controller_s_8_St_21_Off_1);
controller_r_8_St_21_Off : ((1 when controller_v_164)
  default controller_v_167);
controller_v_227 : ((1 when controller_ck_33_2_0)
  default controller_r_8_St_21_Off);
controller_s_8_St_21_Off_2_0 : controller_s_8_St_21_Off_2;
controller_s_8_St_21_Off_2_1 : controller_s_8_St_21_Off_2;
controller_r_8 : ((controller_v_226 when controller_ck_33_1)
  default controller_v_227);
controller_s_8_2 : ((controller_v_223 when controller_ck_33_1)
  default controller_v_225);
controller_s_8_1 : ((controller_v_222 when controller_ck_33_1)
  default controller_v_224);
controller_s_8_2_0 : controller_s_8_2;
controller_s_8_2_1 : controller_s_8_2;
controller_v_166_2_0 : controller_v_166_2;
controller_v_166_2_1 : controller_v_166_2;
controller_ck_34_2 : controller_s_8_2;
controller_ck_34_1 : controller_s_8_1;
controller_ck_34_2_0 : controller_ck_34_2;
controller_ck_34_2_1 : controller_ck_34_2;
controller_ns_8_St_21_Max_2 : 1;
controller_ns_8_St_21_Max_1 : 1;
controller_nr_8_St_21_Max : -1;
controller_air_state_1_St_21_Max : a_const(2);
controller_ns_8_St_21_Min_2 : -1;
controller_v_215 : ((controller_ns_8_St_21_Max_2 when controller_ck_34_2_1)
  default controller_ns_8_St_21_Min_2);
controller_ns_8_St_21_Min_1 : 1;
controller_v_214 : ((controller_ns_8_St_21_Max_1 when controller_ck_34_2_1)
  default controller_ns_8_St_21_Min_1);
controller_nr_8_St_21_Min : -1;
controller_v_218 : ((controller_nr_8_St_21_Max when controller_ck_34_2_1)
  default controller_nr_8_St_21_Min);
controller_air_state_1_St_21_Min : a_const(1);
controller_v_212 : a_part(controller_ck_34_2_1, a_const(0),
                          controller_air_state_1_St_21_Max,
                          controller_air_state_1_St_21_Min);
controller_ns_8_St_21_Max_2_0 : controller_ns_8_St_21_Max_2;
controller_ns_8_St_21_Max_2_1 : controller_ns_8_St_21_Max_2;
controller_ns_8_St_21_Min_2_0 : controller_ns_8_St_21_Min_2;
controller_ns_8_St_21_Min_2_1 : controller_ns_8_St_21_Min_2;
controller_ns_8_St_21_Off_2 : -1;
controller_v_217 : ((1 when controller_ck_34_2_0)
  default controller_ns_8_St_21_Off_2);
controller_ns_8_St_21_Off_1 : -1;
controller_v_216 : ((1 when controller_ck_34_2_0)
  default controller_ns_8_St_21_Off_1);
controller_nr_8_St_21_Off : -1;
controller_v_219 : ((1 when controller_ck_34_2_0)
  default controller_nr_8_St_21_Off);
controller_air_state_1_St_21_Off : a_const(0);
controller_v_213 : a_part(controller_ck_34_2_0, a_const(0), a_const(0),
                          controller_air_state_1_St_21_Off);
controller_ns_8_St_21_Off_2_0 : controller_ns_8_St_21_Off_2;
controller_ns_8_St_21_Off_2_1 : controller_ns_8_St_21_Off_2;
controller_nr_8 : ((controller_v_218 when controller_ck_34_1)
  default controller_v_219);
controller_ns_8_2 : ((controller_v_215 when controller_ck_34_1)
  default controller_v_217);
controller_ns_8_1 : ((controller_v_214 when controller_ck_34_1)
  default controller_v_216);
controller_air_state_1 : a_part(controller_ck_34_1, a_const(0),
                                controller_v_212, controller_v_213);
controller_ns_8_2_0 : controller_ns_8_2;
controller_ns_8_2_1 : controller_ns_8_2;
controller_air_state_2 : controller_air_state_1;
controller_air_state : controller_air_state_2;
controller_s_7_St_20_Falha_1 : ((-1 when controller_failed_recovered_1)
  default 1);
controller_r_7_St_20_Falha : ((1 when controller_failed_recovered_1)
  default controller_pnr_7);
controller_s_7_St_20_Funcionando_1 : ((1 when controller_failed_recovered_1)
  default -1);
controller_s_7_1 : ((controller_s_7_St_20_Falha_1 when controller_ck_35_1)
  default controller_s_7_St_20_Funcionando_1);
controller_r_7_St_20_Funcionando : ((1 when controller_failed_recovered_1)
  default controller_pnr_7);
controller_r_7 : ((controller_r_7_St_20_Falha when controller_ck_35_1)
  default controller_r_7_St_20_Funcionando);
controller_ck_36_1 : controller_s_7_1;
controller_ns_7_St_20_Falha_1 : 1;
controller_nr_7_St_20_Falha : -1;
controller_failed_1_St_20_Falha : 1;
controller_ns_7_St_20_Funcionando_1 : -1;
controller_ns_7_1 : ((controller_ns_7_St_20_Falha_1 when controller_ck_36_1)
  default controller_ns_7_St_20_Funcionando_1);
controller_nr_7_St_20_Funcionando : -1;
controller_nr_7 : ((controller_nr_7_St_20_Falha when controller_ck_36_1)
  default controller_nr_7_St_20_Funcionando);
controller_failed_1_St_20_Funcionando : -1;
controller_failed_1 : ((controller_failed_1_St_20_Falha
  when controller_ck_36_1) default controller_failed_1_St_20_Funcionando);
controller_failed : controller_failed_1;
controller_air_failed : controller_failed;
controller_v_168 : (controller_c1_2 and controller_sw_1);
controller_v_169 : (not controller_c2_2);
controller_v_170 : (controller_v_168 or controller_v_169);
controller_s_6_St_19_On_1 : ((1 when controller_v_170) default -1);
controller_r_6_St_19_On : ((1 when controller_v_170)
  default controller_pnr_6);
controller_v_171 : (controller_c1_2 and controller_sw_1);
controller_v_172 : (not controller_c2_2);
controller_v_173 : (controller_v_171 or controller_v_172);
controller_s_6_St_19_Off_1 : ((-1 when controller_v_173) default 1);
controller_s_6_1 : ((controller_s_6_St_19_Off_1 when controller_ck_37_1)
  default controller_s_6_St_19_On_1);
controller_r_6_St_19_Off : ((1 when controller_v_173)
  default controller_pnr_6);
controller_r_6 : ((controller_r_6_St_19_Off when controller_ck_37_1)
  default controller_r_6_St_19_On);
controller_ck_38_1 : controller_s_6_1;
controller_ns_6_St_19_On_1 : -1;
controller_nr_6_St_19_On : -1;
controller_lamp_on_St_19_On : 1;
controller_ns_6_St_19_Off_1 : 1;
controller_ns_6_1 : ((controller_ns_6_St_19_Off_1 when controller_ck_38_1)
  default controller_ns_6_St_19_On_1);
controller_nr_6_St_19_Off : -1;
controller_nr_6 : ((controller_nr_6_St_19_Off when controller_ck_38_1)
  default controller_nr_6_St_19_On);
controller_lamp_on_St_19_Off : -1;
controller_lamp_on : ((controller_lamp_on_St_19_Off when controller_ck_38_1)
  default controller_lamp_on_St_19_On);
controller_lamp : controller_lamp_on;
controller_light_on : controller_lamp;
controller_s_5_St_18_Falha_1 : ((-1 when controller_failed_recovered_2)
  default 1);
controller_r_5_St_18_Falha : ((1 when controller_failed_recovered_2)
  default controller_pnr_5);
controller_s_5_St_18_Funcionando_1 : ((1 when controller_failed_recovered_2)
  default -1);
controller_s_5_1 : ((controller_s_5_St_18_Falha_1 when controller_ck_39_1)
  default controller_s_5_St_18_Funcionando_1);
controller_r_5_St_18_Funcionando : ((1 when controller_failed_recovered_2)
  default controller_pnr_5);
controller_r_5 : ((controller_r_5_St_18_Falha when controller_ck_39_1)
  default controller_r_5_St_18_Funcionando);
controller_ck_40_1 : controller_s_5_1;
controller_ns_5_St_18_Falha_1 : 1;
controller_nr_5_St_18_Falha : -1;
controller_failed_2_St_18_Falha : 1;
controller_ns_5_St_18_Funcionando_1 : -1;
controller_ns_5_1 : ((controller_ns_5_St_18_Falha_1 when controller_ck_40_1)
  default controller_ns_5_St_18_Funcionando_1);
controller_nr_5_St_18_Funcionando : -1;
controller_nr_5 : ((controller_nr_5_St_18_Falha when controller_ck_40_1)
  default controller_nr_5_St_18_Funcionando);
controller_failed_2_St_18_Funcionando : -1;
controller_failed_2 : ((controller_failed_2_St_18_Falha
  when controller_ck_40_1) default controller_failed_2_St_18_Funcionando);
controller_failed_4 : controller_failed_2;
controller_light_failed : controller_failed_4;
controller_v_174 : (controller_c1_3 and controller_sw_2);
controller_v_175 : (not controller_c2_3);
controller_v_176 : (controller_v_174 or controller_v_175);
controller_s_4_St_17_Up_1 : ((1 when controller_v_176) default -1);
controller_r_4_St_17_Up : ((1 when controller_v_176)
  default controller_pnr_4);
controller_v_177 : (controller_c1_3 and controller_sw_2);
controller_v_178 : (not controller_c2_3);
controller_v_179 : (controller_v_177 or controller_v_178);
controller_s_4_St_17_Down_1 : ((-1 when controller_v_179) default 1);
controller_s_4_1 : ((controller_s_4_St_17_Down_1 when controller_ck_41_1)
  default controller_s_4_St_17_Up_1);
controller_r_4_St_17_Down : ((1 when controller_v_179)
  default controller_pnr_4);
controller_r_4 : ((controller_r_4_St_17_Down when controller_ck_41_1)
  default controller_r_4_St_17_Up);
controller_ck_42_1 : controller_s_4_1;
controller_ns_4_St_17_Up_1 : -1;
controller_nr_4_St_17_Up : -1;
controller_blind_open_St_17_Up : 1;
controller_ns_4_St_17_Down_1 : 1;
controller_ns_4_1 : ((controller_ns_4_St_17_Down_1 when controller_ck_42_1)
  default controller_ns_4_St_17_Up_1);
controller_nr_4_St_17_Down : -1;
controller_nr_4 : ((controller_nr_4_St_17_Down when controller_ck_42_1)
  default controller_nr_4_St_17_Up);
controller_blind_open_St_17_Down : -1;
controller_blind_open : ((controller_blind_open_St_17_Down
  when controller_ck_42_1) default controller_blind_open_St_17_Up);
controller_blind : controller_blind_open;
controller_blind_up : controller_blind;
controller_s_St_16_Falha_1 : ((-1 when controller_failed_recovered_3)
  default 1);
controller_r_St_16_Falha : ((1 when controller_failed_recovered_3)
  default controller_pnr);
controller_s_St_16_Funcionando_1 : ((1 when controller_failed_recovered_3)
  default -1);
controller_s_1 : ((controller_s_St_16_Falha_1 when controller_ck_43_1)
  default controller_s_St_16_Funcionando_1);
controller_r_St_16_Funcionando : ((1 when controller_failed_recovered_3)
  default controller_pnr);
controller_r : ((controller_r_St_16_Falha when controller_ck_43_1)
  default controller_r_St_16_Funcionando);
controller_ck_44_1 : controller_s_1;
controller_ns_St_16_Falha_1 : 1;
controller_nr_St_16_Falha : -1;
controller_failed_3_St_16_Falha : 1;
controller_ns_St_16_Funcionando_1 : -1;
controller_ns_1 : ((controller_ns_St_16_Falha_1 when controller_ck_44_1)
  default controller_ns_St_16_Funcionando_1);
controller_nr_St_16_Funcionando : -1;
controller_nr : ((controller_nr_St_16_Falha when controller_ck_44_1)
  default controller_nr_St_16_Funcionando);
controller_failed_3_St_16_Funcionando : -1;
controller_failed_3 : ((controller_failed_3_St_16_Falha
  when controller_ck_44_1) default controller_failed_3_St_16_Funcionando);
controller_failed_5 : controller_failed_3;
controller_blind_failed : controller_failed_5;
initialisations : concat(initialisations, [(controller_ck_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_15_1 default controller_ck_1)]);
initialisations : concat(initialisations, [(controller_pnr_15 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_15 default controller_pnr_15)]);
initialisations : concat(initialisations, [(controller_ck_21_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_14_1 default controller_ck_21_1)]);
initialisations : concat(initialisations, [(controller_pnr_14 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_14 default controller_pnr_14)]);
initialisations : concat(initialisations, [(controller_ck_23_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_13_1 default controller_ck_23_1)]);
initialisations : concat(initialisations, [(controller_pnr_13 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_13 default controller_pnr_13)]);
initialisations : concat(initialisations, [(controller_ck_25_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_12_1 default controller_ck_25_1)]);
initialisations : concat(initialisations, [(controller_pnr_12 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_12 default controller_pnr_12)]);
initialisations : concat(initialisations, [(controller_ck_27_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_11_1 default controller_ck_27_1)]);
initialisations : concat(initialisations, [(controller_pnr_11 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_11 default controller_pnr_11)]);
initialisations : concat(initialisations, [(controller_ck_29_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_10_1 default controller_ck_29_1)]);
initialisations : concat(initialisations, [(controller_pnr_10 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_10 default controller_pnr_10)]);
initialisations : concat(initialisations, [(controller_ck_31_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_9_1 default controller_ck_31_1)]);
initialisations : concat(initialisations, [(controller_pnr_9 = -1)]);
evolutions : concat(evolutions, [(controller_nr_9 default controller_pnr_9)]);
initialisations : concat(initialisations, [(controller_v_221 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_8_2 default controller_v_221)]);
initialisations : concat(initialisations, [(controller_v_220 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_8_1 default controller_v_220)]);
initialisations : concat(initialisations, [(controller_pnr_8 = -1)]);
evolutions : concat(evolutions, [(controller_nr_8 default controller_pnr_8)]);
initialisations : concat(initialisations, [(controller_ck_35_1 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_7_1 default controller_ck_35_1)]);
initialisations : concat(initialisations, [(controller_pnr_7 = -1)]);
evolutions : concat(evolutions, [(controller_nr_7 default controller_pnr_7)]);
initialisations : concat(initialisations, [(controller_ck_37_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_6_1 default controller_ck_37_1)]);
initialisations : concat(initialisations, [(controller_pnr_6 = -1)]);
evolutions : concat(evolutions, [(controller_nr_6 default controller_pnr_6)]);
initialisations : concat(initialisations, [(controller_ck_39_1 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_5_1 default controller_ck_39_1)]);
initialisations : concat(initialisations, [(controller_pnr_5 = -1)]);
evolutions : concat(evolutions, [(controller_nr_5 default controller_pnr_5)]);
initialisations : concat(initialisations, [(controller_ck_41_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_4_1 default controller_ck_41_1)]);
initialisations : concat(initialisations, [(controller_pnr_4 = -1)]);
evolutions : concat(evolutions, [(controller_nr_4 default controller_pnr_4)]);
initialisations : concat(initialisations, [(controller_ck_43_1 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_1 default controller_ck_43_1)]);
initialisations : concat(initialisations, [(controller_pnr = -1)]);
evolutions : concat(evolutions, [(controller_nr default controller_pnr)]);
controller_v_143 : (not controller_blind_up);
controller_v_141 : (not controller_light_on);
controller_v_139 : (a_iminv(controller_air_state, 0) + 1);
controller_v_137 : (not controller_window_open);
controller_v_136 : (not controller_pc_on);
controller_v_138 : (controller_v_136 and controller_v_137);
controller_v_140 : (controller_v_138 and controller_v_139);
controller_v_142 : (controller_v_140 and controller_v_141);
controller_v_144 : (controller_v_142 and controller_v_143);
controller_v_133 : (not controller_blind_failed);
controller_v_131 : (not controller_light_failed);
controller_v_129 : (not controller_air_failed);
controller_v_126 : (not controller_cleaner_presence);
controller_v_125 : (not controller_worker_presence);
controller_v_127 : (controller_v_125 and controller_v_126);
controller_v_128 : (controller_v_127 and controller_night);
controller_v_130 : (controller_v_128 and controller_v_129);
controller_v_132 : (controller_v_130 and controller_v_131);
controller_v_134 : (controller_v_132 and controller_v_133);
controller_v_135 : (not controller_v_134);
controller_rule4 : (controller_v_135 or controller_v_144);
controller_v_123 : (not controller_blind_up);
controller_v_121 : (not controller_light_on);
controller_v_119 : (a_iminv(controller_air_state, 0) + 1);
controller_v_117 : (not controller_window_open);
controller_v_116 : (not controller_pc_on);
controller_v_118 : (controller_v_116 and controller_v_117);
controller_v_120 : (controller_v_118 and controller_v_119);
controller_v_122 : (controller_v_120 and controller_v_121);
controller_v_124 : (controller_v_122 and controller_v_123);
controller_v_113 : (not controller_blind_failed);
controller_v_111 : (not controller_light_failed);
controller_v_109 : (not controller_air_failed);
controller_v_107 : (not controller_night);
controller_v_105 : (not controller_cleaner_presence);
controller_v_104 : (not controller_worker_presence);
controller_v_106 : (controller_v_104 and controller_v_105);
controller_v_108 : (controller_v_106 and controller_v_107);
controller_v_110 : (controller_v_108 and controller_v_109);
controller_v_112 : (controller_v_110 and controller_v_111);
controller_v_114 : (controller_v_112 and controller_v_113);
controller_v_115 : (not controller_v_114);
controller_rule5 : (controller_v_115 or controller_v_124);
controller_v_103 : (a_iminv(controller_air_state, 2) + 1);
controller_v_100 : (not controller_air_failed);
controller_v_98 : (not controller_window_open);
controller_v_94 : (not controller_night);
controller_v_95 : (controller_worker_presence and controller_v_94);
controller_v_96 : (controller_v_95 and controller_pc_on);
controller_v_97 : (controller_v_96 and controller_light_on);
controller_v_99 : (controller_v_97 and controller_v_98);
controller_v_101 : (controller_v_99 and controller_v_100);
controller_v_102 : (not controller_v_101);
controller_rule6 : (controller_v_102 or controller_v_103);
controller_v_92 : (a_iminv(controller_air_state, 1) + 1);
controller_v_90 : (not controller_light_on);
controller_v_91 : (controller_v_90 and controller_blind_up);
controller_v_93 : (controller_v_91 and controller_v_92);
controller_v_87 : (not controller_air_failed);
controller_v_84 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_85 : (controller_v_84 and controller_night);
controller_v_86 : (controller_v_85 and controller_light_failed);
controller_v_88 : (controller_v_86 and controller_v_87);
controller_v_89 : (not controller_v_88);
controller_rule2 : (controller_v_89 or controller_v_93);
controller_v_82 : (a_iminv(controller_air_state, 0) + 1);
controller_v_78 : (not controller_light_on);
controller_v_79 : (controller_v_78 and controller_blind_up);
controller_v_80 : (controller_v_79 and controller_window_open);
controller_v_81 : (controller_v_80 and controller_door_open);
controller_v_83 : (controller_v_81 and controller_v_82);
controller_v_73 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_74 : (controller_v_73 and controller_night);
controller_v_75 : (controller_v_74 and controller_light_failed);
controller_v_76 : (controller_v_75 and controller_air_failed);
controller_v_77 : (not controller_v_76);
controller_rule2_5 : (controller_v_77 or controller_v_83);
controller_v_71 : (a_iminv(controller_air_state, 1) + 1);
controller_v_69 : (not controller_blind_up);
controller_v_70 : (controller_light_on and controller_v_69);
controller_v_72 : (controller_v_70 and controller_v_71);
controller_v_66 : (not controller_air_failed);
controller_v_64 : (not controller_light_failed);
controller_v_62 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_63 : (controller_v_62 and controller_night);
controller_v_65 : (controller_v_63 and controller_v_64);
controller_v_67 : (controller_v_65 and controller_v_66);
controller_v_68 : (not controller_v_67);
controller_rule1 : (controller_v_68 or controller_v_72);
controller_v_60 : (a_iminv(controller_air_state, 0) + 1);
controller_v_57 : (controller_light_on and controller_blind_up);
controller_v_58 : (controller_v_57 and controller_window_open);
controller_v_59 : (controller_v_58 and controller_door_open);
controller_v_61 : (controller_v_59 and controller_v_60);
controller_v_53 : (not controller_light_failed);
controller_v_51 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_52 : (controller_v_51 and controller_night);
controller_v_54 : (controller_v_52 and controller_v_53);
controller_v_55 : (controller_v_54 and controller_air_failed);
controller_v_56 : (not controller_v_55);
controller_rule1_5 : (controller_v_56 or controller_v_61);
controller_v_145 : (controller_rule1 and controller_rule1_5);
controller_v_146 : (controller_v_145 and controller_rule2);
controller_v_147 : (controller_v_146 and controller_rule2_5);
controller_v_148 : (controller_v_147 and controller_rule6);
controller_v_49 : (a_iminv(controller_air_state, 1) + 1);
controller_v_47 : (not controller_pc_on);
controller_v_48 : (controller_v_47 and controller_closet_open);
controller_v_50 : (controller_v_48 and controller_v_49);
controller_v : (not controller_air_failed);
controller_v_45 : (controller_cleaner_presence and controller_v);
controller_v_46 : (not controller_v_45);
controller_rule7 : (controller_v_46 or controller_v_50);
controller_v_149 : (controller_v_148 and controller_rule7);
controller_assume : 1;
controller_guarantee : controller_v_149;
initialisations : concat(initialisations, [(controller_error_state = 1)]);
evolutions : concat(evolutions, [controller_guarantee]);
constraints : [((controller_change_shift^2) = 1), ((controller_worker^2)
               = 1), ((controller_cleaner^2) = 1),
               ((controller_air_failed_recovered^2) = 1),
               ((controller_light_switch^2) = 1),
               ((controller_light_failed_recovered^2) = 1),
               ((controller_blind_switch^2) = 1),
               ((controller_blind_failed_recovered^2) = 1),
               ((controller_c_blind_2^2) = 1), ((controller_c_blind_1^2)
               = 1), ((controller_c_light_2^2) = 1),
               ((controller_c_light_1^2) = 1), ((controller_c_closet^2) = 1),
               ((controller_c_air_2^2) = 1), ((controller_c_air_1^2) = 1),
               ((controller_c_window^2) = 1), ((controller_c_pc^2) = 1),
               ((controller_c_door^2) = 1), (controller_assume = 1)];

% --- outputs : [controller_night, controller_door_open,
                 controller_worker_presence, controller_cleaner_presence,
                 controller_pc_on, controller_window_open,
                 controller_closet_open, controller_air_failed,
                 controller_light_on, controller_light_failed,
                 controller_blind_up, controller_blind_failed,
                 controller_air_state] --- %
controller : processus(conditions, states, evolutions, initialisations,
                       [gen(constraints)], controllables);
controller_init : initial(controller);
controller : S_Security(controller,B_True(controller,controller_error_state));
dcs_result : equal(controller_init,initial(controller));
if dcs_result then
    print("controller: synthesis succeeded.")
else
    print("controller: synthesis failed.");

if dcs_result then
    print("Triangulation and controller generation...")
else
    quit(1);
declare(p_controller_c_blind_2, p_controller_c_blind_1,
        p_controller_c_light_2, p_controller_c_light_1,
        p_controller_c_closet, p_controller_c_air_2, p_controller_c_air_1,
        p_controller_c_window, p_controller_c_pc, p_controller_c_door);
phantom_vars : [p_controller_c_blind_2, p_controller_c_blind_1,
                p_controller_c_light_2, p_controller_c_light_1,
                p_controller_c_closet, p_controller_c_air_2,
                p_controller_c_air_1, p_controller_c_window,
                p_controller_c_pc, p_controller_c_door];
controller_triang : Triang(constraint(controller),controllables,phantom_vars);
controller_inputs : [controller_change_shift, controller_worker,
                     controller_cleaner, controller_air_failed_recovered,
                     controller_light_switch,
                     controller_light_failed_recovered,
                     controller_blind_switch,
                     controller_blind_failed_recovered, controller_ck_1,
                     controller_pnr_15, controller_ck_21_1,
                     controller_pnr_14, controller_ck_23_1,
                     controller_pnr_13, controller_ck_25_1,
                     controller_pnr_12, controller_ck_27_1,
                     controller_pnr_11, controller_ck_29_1,
                     controller_pnr_10, controller_ck_31_1, controller_pnr_9,
                     controller_v_221, controller_v_220, controller_pnr_8,
                     controller_ck_35_1, controller_pnr_7,
                     controller_ck_37_1, controller_pnr_6,
                     controller_ck_39_1, controller_pnr_5,
                     controller_ck_41_1, controller_pnr_4,
                     controller_ck_43_1, controller_pnr,
                     p_controller_c_blind_2, p_controller_c_blind_1,
                     p_controller_c_light_2, p_controller_c_light_1,
                     p_controller_c_closet, p_controller_c_air_2,
                     p_controller_c_air_1, p_controller_c_window,
                     p_controller_c_pc, p_controller_c_door];
heptagon_controller("controller_controller.ept","controller",controller_inputs,controllables,controller_triang);

