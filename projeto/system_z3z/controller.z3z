% --- Generated the 31/7/2018 at 22:4 --- %
% --- heptagon compiler, version 1.03.00 (compiled fri. jun. 15 15:41:53 CET 2018) --- %
% --- Command line: /usr/local/bin/heptc -target c -target z3z -s controller system.ept --- %

set_reorder(2);read("Property.lib");read("Synthesis.lib");read("Verif_Determ.lib");read("Simul.lib");read("Synthesis_Partial_order.lib");read("Orbite.lib");
% -- dependencies --- %

% ---------- process controller ---------- %

declare(controller_change_shift, controller_worker, controller_cleaner,
        controller_air_failed_recovered, controller_light_switch,
        controller_light_failed_recovered, controller_blind_switch,
        controller_blind_failed_recovered, controller_c_blind_2,
        controller_c_light_2, controller_c_blind_1, controller_c_light_1,
        controller_c_closet, controller_c_air_2, controller_c_air_1,
        controller_c_window, controller_c_pc, controller_c_door,
        controller_ck_1, controller_pnr_18, controller_ck_35_1,
        controller_pnr_17, controller_ck_37_1, controller_pnr_16,
        controller_ck_39_1, controller_pnr_15, controller_ck_41_1,
        controller_pnr_14, controller_ck_43_1, controller_pnr_13,
        controller_ck_45_1, controller_pnr_12, controller_v_185,
        controller_v_184, controller_pnr_11, controller_ck_50_1,
        controller_pnr_10, controller_ck_53_1, controller_pnr_9,
        controller_ck_55_1, controller_pnr_8, controller_ck_58_1,
        controller_pnr_7, controller_ck_60_1, controller_pnr,
        controller_error_state);
conditions : [controller_change_shift, controller_worker, controller_cleaner,
              controller_air_failed_recovered, controller_light_switch,
              controller_light_failed_recovered, controller_blind_switch,
              controller_blind_failed_recovered, controller_c_blind_2,
              controller_c_light_2, controller_c_blind_1,
              controller_c_light_1, controller_c_closet, controller_c_air_2,
              controller_c_air_1, controller_c_window, controller_c_pc,
              controller_c_door];
states : [controller_ck_1, controller_pnr_18, controller_ck_35_1,
          controller_pnr_17, controller_ck_37_1, controller_pnr_16,
          controller_ck_39_1, controller_pnr_15, controller_ck_41_1,
          controller_pnr_14, controller_ck_43_1, controller_pnr_13,
          controller_ck_45_1, controller_pnr_12, controller_v_185,
          controller_v_184, controller_pnr_11, controller_ck_50_1,
          controller_pnr_10, controller_ck_53_1, controller_pnr_9,
          controller_ck_55_1, controller_pnr_8, controller_ck_58_1,
          controller_pnr_7, controller_ck_60_1, controller_pnr,
          controller_error_state];
controllables : [controller_c_blind_2, controller_c_light_2,
                 controller_c_blind_1, controller_c_light_1,
                 controller_c_closet, controller_c_air_2, controller_c_air_1,
                 controller_c_window, controller_c_pc, controller_c_door];
evolutions : [];
initialisations : [];
controller_change : controller_change_shift;
controller_c : controller_c_door;
controller_c_1 : controller_c_closet;
controller_arrived : controller_worker;
controller_arrived_1 : controller_cleaner;
controller_c_2 : controller_c_pc;
controller_c_3 : controller_c_window;
controller_ck_48_2 : controller_v_185;
controller_ck_48_1 : controller_v_184;
controller_failed_recovered : controller_air_failed_recovered;
controller_failed_recovered_6 : controller_failed_recovered;
controller_c2 : controller_c_air_2;
controller_c2_2 : controller_c2;
controller_c1 : controller_c_air_1;
controller_c1_2 : controller_c1;
controller_failed_recovered_7 : controller_light_failed_recovered;
controller_failed_recovered_1 : controller_failed_recovered_7;
controller_c2_3 : controller_c_light_2;
controller_c2_1 : controller_c2_3;
controller_c1_3 : controller_c_light_1;
controller_c1_1 : controller_c1_3;
controller_sw : controller_light_switch;
controller_sw_1 : controller_sw;
controller_failed_recovered_8 : controller_blind_failed_recovered;
controller_failed_recovered_1_1 : controller_failed_recovered_8;
controller_c2_4 : controller_c_blind_2;
controller_c2_1_1 : controller_c2_4;
controller_c1_4 : controller_c_blind_1;
controller_c1_1_1 : controller_c1_4;
controller_sw_2 : controller_blind_switch;
controller_sw_1_1 : controller_sw_2;
controller_s_18_St_33_Noite_1 : ((1 when controller_change) default -1);
controller_r_18_St_33_Noite : ((1 when controller_change)
  default controller_pnr_18);
controller_s_18_St_33_Dia_1 : ((-1 when controller_change) default 1);
controller_s_18_1 : ((controller_s_18_St_33_Dia_1 when controller_ck_1)
  default controller_s_18_St_33_Noite_1);
controller_r_18_St_33_Dia : ((1 when controller_change)
  default controller_pnr_18);
controller_r_18 : ((controller_r_18_St_33_Dia when controller_ck_1)
  default controller_r_18_St_33_Noite);
controller_ck_34_1 : controller_s_18_1;
controller_ns_18_St_33_Noite_1 : -1;
controller_nr_18_St_33_Noite : -1;
controller_night_1_St_33_Noite : 1;
controller_ns_18_St_33_Dia_1 : 1;
controller_ns_18_1 : ((controller_ns_18_St_33_Dia_1 when controller_ck_34_1)
  default controller_ns_18_St_33_Noite_1);
controller_nr_18_St_33_Dia : -1;
controller_nr_18 : ((controller_nr_18_St_33_Dia when controller_ck_34_1)
  default controller_nr_18_St_33_Noite);
controller_night_1_St_33_Dia : -1;
controller_night_1 : ((controller_night_1_St_33_Dia when controller_ck_34_1)
  default controller_night_1_St_33_Noite);
controller_night : controller_night_1;
controller_v_114 : (not controller_c);
controller_s_17_St_32_Open_1 : ((1 when controller_v_114) default -1);
controller_r_17_St_32_Open : ((1 when controller_v_114)
  default controller_pnr_17);
controller_v_115 : (not controller_c);
controller_s_17_St_32_Closed_1 : ((-1 when controller_v_115) default 1);
controller_s_17_1 : ((controller_s_17_St_32_Closed_1 when controller_ck_35_1)
  default controller_s_17_St_32_Open_1);
controller_r_17_St_32_Closed : ((1 when controller_v_115)
  default controller_pnr_17);
controller_r_17 : ((controller_r_17_St_32_Closed when controller_ck_35_1)
  default controller_r_17_St_32_Open);
controller_ck_36_1 : controller_s_17_1;
controller_ns_17_St_32_Open_1 : -1;
controller_nr_17_St_32_Open : -1;
controller_door_open_1_St_32_Open : a_const(1);
controller_ns_17_St_32_Closed_1 : 1;
controller_ns_17_1 : ((controller_ns_17_St_32_Closed_1
  when controller_ck_36_1) default controller_ns_17_St_32_Open_1);
controller_nr_17_St_32_Closed : -1;
controller_nr_17 : ((controller_nr_17_St_32_Closed when controller_ck_36_1)
  default controller_nr_17_St_32_Open);
controller_door_open_1_St_32_Closed : a_const(0);
controller_door_open_1 : a_part(controller_ck_36_1, a_const(0),
                                controller_door_open_1_St_32_Closed,
                                controller_door_open_1_St_32_Open);
controller_door_open : controller_door_open_1;
controller_s_16_St_31_Open_1 : ((1 when controller_c_1) default -1);
controller_r_16_St_31_Open : ((1 when controller_c_1)
  default controller_pnr_16);
controller_v_116 : (not controller_c_1);
controller_s_16_St_31_Locked_1 : ((-1 when controller_v_116) default 1);
controller_s_16_1 : ((controller_s_16_St_31_Locked_1 when controller_ck_37_1)
  default controller_s_16_St_31_Open_1);
controller_r_16_St_31_Locked : ((1 when controller_v_116)
  default controller_pnr_16);
controller_r_16 : ((controller_r_16_St_31_Locked when controller_ck_37_1)
  default controller_r_16_St_31_Open);
controller_ck_38_1 : controller_s_16_1;
controller_ns_16_St_31_Open_1 : -1;
controller_nr_16_St_31_Open : -1;
controller_closet_open_1_St_31_Open : a_const(1);
controller_ns_16_St_31_Locked_1 : 1;
controller_ns_16_1 : ((controller_ns_16_St_31_Locked_1
  when controller_ck_38_1) default controller_ns_16_St_31_Open_1);
controller_nr_16_St_31_Locked : -1;
controller_nr_16 : ((controller_nr_16_St_31_Locked when controller_ck_38_1)
  default controller_nr_16_St_31_Open);
controller_closet_open_1_St_31_Locked : a_const(0);
controller_closet_open_1 : a_part(controller_ck_38_1, a_const(0),
                                  controller_closet_open_1_St_31_Locked,
                                  controller_closet_open_1_St_31_Open);
controller_closet_open : controller_closet_open_1;
controller_s_15_St_30_Present_1 : ((1 when controller_arrived) default -1);
controller_r_15_St_30_Present : ((1 when controller_arrived)
  default controller_pnr_15);
controller_s_15_St_30_Not_Present_1 : ((-1 when controller_arrived)
  default 1);
controller_s_15_1 : ((controller_s_15_St_30_Not_Present_1
  when controller_ck_39_1) default controller_s_15_St_30_Present_1);
controller_r_15_St_30_Not_Present : ((1 when controller_arrived)
  default controller_pnr_15);
controller_r_15 : ((controller_r_15_St_30_Not_Present
  when controller_ck_39_1) default controller_r_15_St_30_Present);
controller_ck_40_1 : controller_s_15_1;
controller_ns_15_St_30_Present_1 : -1;
controller_nr_15_St_30_Present : -1;
controller_presence_St_30_Present : 1;
controller_ns_15_St_30_Not_Present_1 : 1;
controller_ns_15_1 : ((controller_ns_15_St_30_Not_Present_1
  when controller_ck_40_1) default controller_ns_15_St_30_Present_1);
controller_nr_15_St_30_Not_Present : -1;
controller_nr_15 : ((controller_nr_15_St_30_Not_Present
  when controller_ck_40_1) default controller_nr_15_St_30_Present);
controller_presence_St_30_Not_Present : -1;
controller_presence : ((controller_presence_St_30_Not_Present
  when controller_ck_40_1) default controller_presence_St_30_Present);
controller_worker_presence : controller_presence;
controller_s_14_St_29_Present_1 : ((1 when controller_arrived_1) default -1);
controller_r_14_St_29_Present : ((1 when controller_arrived_1)
  default controller_pnr_14);
controller_s_14_St_29_Not_Present_1 : ((-1 when controller_arrived_1)
  default 1);
controller_s_14_1 : ((controller_s_14_St_29_Not_Present_1
  when controller_ck_41_1) default controller_s_14_St_29_Present_1);
controller_r_14_St_29_Not_Present : ((1 when controller_arrived_1)
  default controller_pnr_14);
controller_r_14 : ((controller_r_14_St_29_Not_Present
  when controller_ck_41_1) default controller_r_14_St_29_Present);
controller_ck_42_1 : controller_s_14_1;
controller_ns_14_St_29_Present_1 : -1;
controller_nr_14_St_29_Present : -1;
controller_presence_1_St_29_Present : 1;
controller_ns_14_St_29_Not_Present_1 : 1;
controller_ns_14_1 : ((controller_ns_14_St_29_Not_Present_1
  when controller_ck_42_1) default controller_ns_14_St_29_Present_1);
controller_nr_14_St_29_Not_Present : -1;
controller_nr_14 : ((controller_nr_14_St_29_Not_Present
  when controller_ck_42_1) default controller_nr_14_St_29_Present);
controller_presence_1_St_29_Not_Present : -1;
controller_presence_1 : ((controller_presence_1_St_29_Not_Present
  when controller_ck_42_1) default controller_presence_1_St_29_Present);
controller_cleaner_presence : controller_presence_1;
controller_v_117 : (not controller_c_2);
controller_s_13_St_28_On_1 : ((1 when controller_v_117) default -1);
controller_r_13_St_28_On : ((1 when controller_v_117)
  default controller_pnr_13);
controller_v_118 : (not controller_c_2);
controller_s_13_St_28_Off_1 : ((-1 when controller_v_118) default 1);
controller_s_13_1 : ((controller_s_13_St_28_Off_1 when controller_ck_43_1)
  default controller_s_13_St_28_On_1);
controller_r_13_St_28_Off : ((1 when controller_v_118)
  default controller_pnr_13);
controller_r_13 : ((controller_r_13_St_28_Off when controller_ck_43_1)
  default controller_r_13_St_28_On);
controller_ck_44_1 : controller_s_13_1;
controller_ns_13_St_28_On_1 : -1;
controller_nr_13_St_28_On : -1;
controller_computer_on_St_28_On : a_const(1);
controller_ns_13_St_28_Off_1 : 1;
controller_ns_13_1 : ((controller_ns_13_St_28_Off_1 when controller_ck_44_1)
  default controller_ns_13_St_28_On_1);
controller_nr_13_St_28_Off : -1;
controller_nr_13 : ((controller_nr_13_St_28_Off when controller_ck_44_1)
  default controller_nr_13_St_28_On);
controller_computer_on_St_28_Off : a_const(0);
controller_computer_on : a_part(controller_ck_44_1, a_const(0),
                                controller_computer_on_St_28_Off,
                                controller_computer_on_St_28_On);
controller_pc_on : controller_computer_on;
controller_s_12_St_27_Open_1 : ((1 when controller_c_3) default -1);
controller_r_12_St_27_Open : ((1 when controller_c_3)
  default controller_pnr_12);
controller_v_119 : (not controller_c_3);
controller_s_12_St_27_Closed_1 : ((-1 when controller_v_119) default 1);
controller_s_12_1 : ((controller_s_12_St_27_Closed_1 when controller_ck_45_1)
  default controller_s_12_St_27_Open_1);
controller_r_12_St_27_Closed : ((1 when controller_v_119)
  default controller_pnr_12);
controller_r_12 : ((controller_r_12_St_27_Closed when controller_ck_45_1)
  default controller_r_12_St_27_Open);
controller_ck_46_1 : controller_s_12_1;
controller_ns_12_St_27_Open_1 : -1;
controller_nr_12_St_27_Open : -1;
controller_window_open_1_St_27_Open : a_const(1);
controller_ns_12_St_27_Closed_1 : 1;
controller_ns_12_1 : ((controller_ns_12_St_27_Closed_1
  when controller_ck_46_1) default controller_ns_12_St_27_Open_1);
controller_nr_12_St_27_Closed : -1;
controller_nr_12 : ((controller_nr_12_St_27_Closed when controller_ck_46_1)
  default controller_nr_12_St_27_Open);
controller_window_open_1_St_27_Closed : a_const(0);
controller_window_open_1 : a_part(controller_ck_46_1, a_const(0),
                                  controller_window_open_1_St_27_Closed,
                                  controller_window_open_1_St_27_Open);
controller_window_open : controller_window_open_1;
controller_ck_48_2_0 : controller_ck_48_2;
controller_ck_48_2_1 : controller_ck_48_2;
controller_v_120 : (not controller_c1_2);
controller_v_121 : (not controller_c2_2);
controller_v_122_2 : ((-1 when controller_v_121) default 1);
controller_v_122_1 : ((-1 when controller_v_121) default 1);
controller_v_123 : ((1 when controller_v_121) default controller_pnr_11);
controller_s_11_St_26_Max_2 : ((-1 when controller_v_120)
  default controller_v_122_2);
controller_s_11_St_26_Max_1 : ((1 when controller_v_120)
  default controller_v_122_1);
controller_r_11_St_26_Max : ((1 when controller_v_120)
  default controller_v_123);
controller_v_124 : (not controller_c1_2);
controller_v_125 : (not controller_c2_2);
controller_v_126_2 : ((1 when controller_v_125) default -1);
controller_v_126_1 : ((1 when controller_v_125) default 1);
controller_v_127 : ((1 when controller_v_125) default controller_pnr_11);
controller_s_11_St_26_Min_2 : ((-1 when controller_v_124)
  default controller_v_126_2);
controller_v_187 : ((controller_s_11_St_26_Max_2 when controller_ck_48_2_1)
  default controller_s_11_St_26_Min_2);
controller_s_11_St_26_Min_1 : ((-1 when controller_v_124)
  default controller_v_126_1);
controller_v_186 : ((controller_s_11_St_26_Max_1 when controller_ck_48_2_1)
  default controller_s_11_St_26_Min_1);
controller_r_11_St_26_Min : ((1 when controller_v_124)
  default controller_v_127);
controller_v_190 : ((controller_r_11_St_26_Max when controller_ck_48_2_1)
  default controller_r_11_St_26_Min);
controller_s_11_St_26_Max_2_0 : controller_s_11_St_26_Max_2;
controller_s_11_St_26_Max_2_1 : controller_s_11_St_26_Max_2;
controller_s_11_St_26_Min_2_0 : controller_s_11_St_26_Min_2;
controller_s_11_St_26_Min_2_1 : controller_s_11_St_26_Min_2;
controller_v_122_2_0 : controller_v_122_2;
controller_v_122_2_1 : controller_v_122_2;
controller_v_126_2_0 : controller_v_126_2;
controller_v_126_2_1 : controller_v_126_2;
controller_v_128 : (not controller_c1_2);
controller_v_129 : (not controller_c2_2);
controller_v_130_2 : ((1 when controller_v_129) default -1);
controller_v_130_1 : ((1 when controller_v_129) default -1);
controller_v_131 : ((1 when controller_v_129) default controller_pnr_11);
controller_s_11_St_26_Off_2 : ((-1 when controller_v_128)
  default controller_v_130_2);
controller_v_189 : ((1 when controller_ck_48_2_0)
  default controller_s_11_St_26_Off_2);
controller_s_11_St_26_Off_1 : ((1 when controller_v_128)
  default controller_v_130_1);
controller_v_188 : ((1 when controller_ck_48_2_0)
  default controller_s_11_St_26_Off_1);
controller_r_11_St_26_Off : ((1 when controller_v_128)
  default controller_v_131);
controller_v_191 : ((1 when controller_ck_48_2_0)
  default controller_r_11_St_26_Off);
controller_s_11_St_26_Off_2_0 : controller_s_11_St_26_Off_2;
controller_s_11_St_26_Off_2_1 : controller_s_11_St_26_Off_2;
controller_r_11 : ((controller_v_190 when controller_ck_48_1)
  default controller_v_191);
controller_s_11_2 : ((controller_v_187 when controller_ck_48_1)
  default controller_v_189);
controller_s_11_1 : ((controller_v_186 when controller_ck_48_1)
  default controller_v_188);
controller_s_11_2_0 : controller_s_11_2;
controller_s_11_2_1 : controller_s_11_2;
controller_v_130_2_0 : controller_v_130_2;
controller_v_130_2_1 : controller_v_130_2;
controller_ck_49_2 : controller_s_11_2;
controller_ck_49_1 : controller_s_11_1;
controller_ck_49_2_0 : controller_ck_49_2;
controller_ck_49_2_1 : controller_ck_49_2;
controller_ns_11_St_26_Max_2 : 1;
controller_ns_11_St_26_Max_1 : 1;
controller_nr_11_St_26_Max : -1;
controller_air_state_1_St_26_Max : a_const(2);
controller_ns_11_St_26_Min_2 : -1;
controller_v_179 : ((controller_ns_11_St_26_Max_2 when controller_ck_49_2_1)
  default controller_ns_11_St_26_Min_2);
controller_ns_11_St_26_Min_1 : 1;
controller_v_178 : ((controller_ns_11_St_26_Max_1 when controller_ck_49_2_1)
  default controller_ns_11_St_26_Min_1);
controller_nr_11_St_26_Min : -1;
controller_v_182 : ((controller_nr_11_St_26_Max when controller_ck_49_2_1)
  default controller_nr_11_St_26_Min);
controller_air_state_1_St_26_Min : a_const(1);
controller_v_176 : a_part(controller_ck_49_2_1, a_const(0),
                          controller_air_state_1_St_26_Max,
                          controller_air_state_1_St_26_Min);
controller_ns_11_St_26_Max_2_0 : controller_ns_11_St_26_Max_2;
controller_ns_11_St_26_Max_2_1 : controller_ns_11_St_26_Max_2;
controller_ns_11_St_26_Min_2_0 : controller_ns_11_St_26_Min_2;
controller_ns_11_St_26_Min_2_1 : controller_ns_11_St_26_Min_2;
controller_ns_11_St_26_Off_2 : -1;
controller_v_181 : ((1 when controller_ck_49_2_0)
  default controller_ns_11_St_26_Off_2);
controller_ns_11_St_26_Off_1 : -1;
controller_v_180 : ((1 when controller_ck_49_2_0)
  default controller_ns_11_St_26_Off_1);
controller_nr_11_St_26_Off : -1;
controller_v_183 : ((1 when controller_ck_49_2_0)
  default controller_nr_11_St_26_Off);
controller_air_state_1_St_26_Off : a_const(0);
controller_v_177 : a_part(controller_ck_49_2_0, a_const(0), a_const(0),
                          controller_air_state_1_St_26_Off);
controller_ns_11_St_26_Off_2_0 : controller_ns_11_St_26_Off_2;
controller_ns_11_St_26_Off_2_1 : controller_ns_11_St_26_Off_2;
controller_nr_11 : ((controller_v_182 when controller_ck_49_1)
  default controller_v_183);
controller_ns_11_2 : ((controller_v_179 when controller_ck_49_1)
  default controller_v_181);
controller_ns_11_1 : ((controller_v_178 when controller_ck_49_1)
  default controller_v_180);
controller_air_state_1 : a_part(controller_ck_49_1, a_const(0),
                                controller_v_176, controller_v_177);
controller_ns_11_2_0 : controller_ns_11_2;
controller_ns_11_2_1 : controller_ns_11_2;
controller_air_state : controller_air_state_1;
controller_s_10_St_25_Falha_1 : ((-1 when controller_failed_recovered_6)
  default 1);
controller_r_10_St_25_Falha : ((1 when controller_failed_recovered_6)
  default controller_pnr_10);
controller_s_10_St_25_Funcionando_1 : ((1 when controller_failed_recovered_6)
  default -1);
controller_s_10_1 : ((controller_s_10_St_25_Falha_1 when controller_ck_50_1)
  default controller_s_10_St_25_Funcionando_1);
controller_r_10_St_25_Funcionando : ((1 when controller_failed_recovered_6)
  default controller_pnr_10);
controller_r_10 : ((controller_r_10_St_25_Falha when controller_ck_50_1)
  default controller_r_10_St_25_Funcionando);
controller_ck_51_1 : controller_s_10_1;
controller_ns_10_St_25_Falha_1 : 1;
controller_nr_10_St_25_Falha : -1;
controller_failed_6_St_25_Falha : 1;
controller_ns_10_St_25_Funcionando_1 : -1;
controller_ns_10_1 : ((controller_ns_10_St_25_Falha_1
  when controller_ck_51_1) default controller_ns_10_St_25_Funcionando_1);
controller_nr_10_St_25_Funcionando : -1;
controller_nr_10 : ((controller_nr_10_St_25_Falha when controller_ck_51_1)
  default controller_nr_10_St_25_Funcionando);
controller_failed_6_St_25_Funcionando : -1;
controller_failed_6 : ((controller_failed_6_St_25_Falha
  when controller_ck_51_1) default controller_failed_6_St_25_Funcionando);
controller_failed : controller_failed_6;
controller_ck_47 : controller_failed;
controller_out_false : controller_air_state;
controller_out_true : (controller_air_state + a_const(3));
controller_out : a_part(controller_ck_47, a_const(0), controller_out_true,
                        controller_out_false);
controller_air_status : controller_out;
controller_v_132 : (controller_c1_1 and controller_sw_1);
controller_v_133 : (not controller_c2_1);
controller_v_134 : (controller_v_132 or controller_v_133);
controller_s_9_St_24_On_1 : ((1 when controller_v_134) default -1);
controller_r_9_St_24_On : ((1 when controller_v_134)
  default controller_pnr_9);
controller_v_135 : (controller_c1_1 and controller_sw_1);
controller_v_136 : (not controller_c2_1);
controller_v_137 : (controller_v_135 or controller_v_136);
controller_s_9_St_24_Off_1 : ((-1 when controller_v_137) default 1);
controller_s_9_1 : ((controller_s_9_St_24_Off_1 when controller_ck_53_1)
  default controller_s_9_St_24_On_1);
controller_r_9_St_24_Off : ((1 when controller_v_137)
  default controller_pnr_9);
controller_r_9 : ((controller_r_9_St_24_Off when controller_ck_53_1)
  default controller_r_9_St_24_On);
controller_ck_54_1 : controller_s_9_1;
controller_ns_9_St_24_On_1 : -1;
controller_nr_9_St_24_On : -1;
controller_light_source_on_St_24_On : a_const(1);
controller_ns_9_St_24_Off_1 : 1;
controller_ns_9_1 : ((controller_ns_9_St_24_Off_1 when controller_ck_54_1)
  default controller_ns_9_St_24_On_1);
controller_nr_9_St_24_Off : -1;
controller_nr_9 : ((controller_nr_9_St_24_Off when controller_ck_54_1)
  default controller_nr_9_St_24_On);
controller_light_source_on_St_24_Off : a_const(0);
controller_light_source_on : a_part(controller_ck_54_1, a_const(0),
                                    controller_light_source_on_St_24_Off,
                                    controller_light_source_on_St_24_On);
controller_light_source : controller_light_source_on;
controller_s_8_St_23_Falha_1 : ((-1 when controller_failed_recovered_1)
  default 1);
controller_r_8_St_23_Falha : ((1 when controller_failed_recovered_1)
  default controller_pnr_8);
controller_s_8_St_23_Funcionando_1 : ((1 when controller_failed_recovered_1)
  default -1);
controller_s_8_1 : ((controller_s_8_St_23_Falha_1 when controller_ck_55_1)
  default controller_s_8_St_23_Funcionando_1);
controller_r_8_St_23_Funcionando : ((1 when controller_failed_recovered_1)
  default controller_pnr_8);
controller_r_8 : ((controller_r_8_St_23_Falha when controller_ck_55_1)
  default controller_r_8_St_23_Funcionando);
controller_ck_56_1 : controller_s_8_1;
controller_ns_8_St_23_Falha_1 : 1;
controller_nr_8_St_23_Falha : -1;
controller_failed_1_St_23_Falha : 1;
controller_ns_8_St_23_Funcionando_1 : -1;
controller_ns_8_1 : ((controller_ns_8_St_23_Falha_1 when controller_ck_56_1)
  default controller_ns_8_St_23_Funcionando_1);
controller_nr_8_St_23_Funcionando : -1;
controller_nr_8 : ((controller_nr_8_St_23_Falha when controller_ck_56_1)
  default controller_nr_8_St_23_Funcionando);
controller_failed_1_St_23_Funcionando : -1;
controller_failed_1 : ((controller_failed_1_St_23_Falha
  when controller_ck_56_1) default controller_failed_1_St_23_Funcionando);
controller_failed_7 : controller_failed_1;
controller_ck_52 : controller_failed_7;
controller_out_1_false : controller_light_source;
controller_out_1_true : (controller_light_source + a_const(2));
controller_out_1 : a_part(controller_ck_52, a_const(0),
                          controller_out_1_true, controller_out_1_false);
controller_light_status : controller_out_1;
controller_v_138 : (controller_c1_1_1 and controller_sw_1_1);
controller_v_139 : (not controller_c2_1_1);
controller_v_140 : (controller_v_138 or controller_v_139);
controller_s_7_St_22_On_1 : ((1 when controller_v_140) default -1);
controller_r_7_St_22_On : ((1 when controller_v_140)
  default controller_pnr_7);
controller_v_141 : (controller_c1_1_1 and controller_sw_1_1);
controller_v_142 : (not controller_c2_1_1);
controller_v_143 : (controller_v_141 or controller_v_142);
controller_s_7_St_22_Off_1 : ((-1 when controller_v_143) default 1);
controller_s_7_1 : ((controller_s_7_St_22_Off_1 when controller_ck_58_1)
  default controller_s_7_St_22_On_1);
controller_r_7_St_22_Off : ((1 when controller_v_143)
  default controller_pnr_7);
controller_r_7 : ((controller_r_7_St_22_Off when controller_ck_58_1)
  default controller_r_7_St_22_On);
controller_ck_59_1 : controller_s_7_1;
controller_ns_7_St_22_On_1 : -1;
controller_nr_7_St_22_On : -1;
controller_light_source_on_1_St_22_On : a_const(1);
controller_ns_7_St_22_Off_1 : 1;
controller_ns_7_1 : ((controller_ns_7_St_22_Off_1 when controller_ck_59_1)
  default controller_ns_7_St_22_On_1);
controller_nr_7_St_22_Off : -1;
controller_nr_7 : ((controller_nr_7_St_22_Off when controller_ck_59_1)
  default controller_nr_7_St_22_On);
controller_light_source_on_1_St_22_Off : a_const(0);
controller_light_source_on_1 : a_part(controller_ck_59_1, a_const(0),
                                      controller_light_source_on_1_St_22_Off,
                                      controller_light_source_on_1_St_22_On);
controller_light_source_1 : controller_light_source_on_1;
controller_s_St_21_Falha_1 : ((-1 when controller_failed_recovered_1_1)
  default 1);
controller_r_St_21_Falha : ((1 when controller_failed_recovered_1_1)
  default controller_pnr);
controller_s_St_21_Funcionando_1 : ((1 when controller_failed_recovered_1_1)
  default -1);
controller_s_1 : ((controller_s_St_21_Falha_1 when controller_ck_60_1)
  default controller_s_St_21_Funcionando_1);
controller_r_St_21_Funcionando : ((1 when controller_failed_recovered_1_1)
  default controller_pnr);
controller_r : ((controller_r_St_21_Falha when controller_ck_60_1)
  default controller_r_St_21_Funcionando);
controller_ck_61_1 : controller_s_1;
controller_ns_St_21_Falha_1 : 1;
controller_nr_St_21_Falha : -1;
controller_failed_1_1_St_21_Falha : 1;
controller_ns_St_21_Funcionando_1 : -1;
controller_ns_1 : ((controller_ns_St_21_Falha_1 when controller_ck_61_1)
  default controller_ns_St_21_Funcionando_1);
controller_nr_St_21_Funcionando : -1;
controller_nr : ((controller_nr_St_21_Falha when controller_ck_61_1)
  default controller_nr_St_21_Funcionando);
controller_failed_1_1_St_21_Funcionando : -1;
controller_failed_1_1 : ((controller_failed_1_1_St_21_Falha
  when controller_ck_61_1) default controller_failed_1_1_St_21_Funcionando);
controller_failed_8 : controller_failed_1_1;
controller_ck_57 : controller_failed_8;
controller_out_2_false : controller_light_source_1;
controller_out_2_true : (controller_light_source_1 + a_const(2));
controller_out_2 : a_part(controller_ck_57, a_const(0),
                          controller_out_2_true, controller_out_2_false);
controller_blind_status : controller_out_2;
initialisations : concat(initialisations, [(controller_ck_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_18_1 default controller_ck_1)]);
initialisations : concat(initialisations, [(controller_pnr_18 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_18 default controller_pnr_18)]);
initialisations : concat(initialisations, [(controller_ck_35_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_17_1 default controller_ck_35_1)]);
initialisations : concat(initialisations, [(controller_pnr_17 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_17 default controller_pnr_17)]);
initialisations : concat(initialisations, [(controller_ck_37_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_16_1 default controller_ck_37_1)]);
initialisations : concat(initialisations, [(controller_pnr_16 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_16 default controller_pnr_16)]);
initialisations : concat(initialisations, [(controller_ck_39_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_15_1 default controller_ck_39_1)]);
initialisations : concat(initialisations, [(controller_pnr_15 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_15 default controller_pnr_15)]);
initialisations : concat(initialisations, [(controller_ck_41_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_14_1 default controller_ck_41_1)]);
initialisations : concat(initialisations, [(controller_pnr_14 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_14 default controller_pnr_14)]);
initialisations : concat(initialisations, [(controller_ck_43_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_13_1 default controller_ck_43_1)]);
initialisations : concat(initialisations, [(controller_pnr_13 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_13 default controller_pnr_13)]);
initialisations : concat(initialisations, [(controller_ck_45_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_12_1 default controller_ck_45_1)]);
initialisations : concat(initialisations, [(controller_pnr_12 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_12 default controller_pnr_12)]);
initialisations : concat(initialisations, [(controller_v_185 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_11_2 default controller_v_185)]);
initialisations : concat(initialisations, [(controller_v_184 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_11_1 default controller_v_184)]);
initialisations : concat(initialisations, [(controller_pnr_11 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_11 default controller_pnr_11)]);
initialisations : concat(initialisations, [(controller_ck_50_1 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_10_1 default controller_ck_50_1)]);
initialisations : concat(initialisations, [(controller_pnr_10 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_10 default controller_pnr_10)]);
initialisations : concat(initialisations, [(controller_ck_53_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_9_1 default controller_ck_53_1)]);
initialisations : concat(initialisations, [(controller_pnr_9 = -1)]);
evolutions : concat(evolutions, [(controller_nr_9 default controller_pnr_9)]);
initialisations : concat(initialisations, [(controller_ck_55_1 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_8_1 default controller_ck_55_1)]);
initialisations : concat(initialisations, [(controller_pnr_8 = -1)]);
evolutions : concat(evolutions, [(controller_nr_8 default controller_pnr_8)]);
initialisations : concat(initialisations, [(controller_ck_58_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_7_1 default controller_ck_58_1)]);
initialisations : concat(initialisations, [(controller_pnr_7 = -1)]);
evolutions : concat(evolutions, [(controller_nr_7 default controller_pnr_7)]);
initialisations : concat(initialisations, [(controller_ck_60_1 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_1 default controller_ck_60_1)]);
initialisations : concat(initialisations, [(controller_pnr = -1)]);
evolutions : concat(evolutions, [(controller_nr default controller_pnr)]);
controller_v_104 : (a_iminv(controller_blind_status, 0) + 1);
controller_v_103 : (a_iminv(controller_light_status, 1) + 1);
controller_v_105 : (controller_v_103 and controller_v_104);
controller_v_100 : (a_inf(controller_blind_status, 1) + 1);
controller_v_98 : (a_inf(controller_light_status, 1) + 1);
controller_v_96 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_97 : (controller_v_96 and controller_night);
controller_v_99 : (controller_v_97 and controller_v_98);
controller_v_101 : (controller_v_99 and controller_v_100);
controller_v_102 : (not controller_v_101);
controller_rule1 : (controller_v_102 or controller_v_105);
controller_v_95 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_92 : (a_inf(controller_blind_status, 1) + 1);
controller_v_90 : (a_sup(controller_light_status, 2) + 1);
controller_v_88 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_89 : (controller_v_88 and controller_night);
controller_v_91 : (controller_v_89 and controller_v_90);
controller_v_93 : (controller_v_91 and controller_v_92);
controller_v_94 : (not controller_v_93);
controller_rule2 : (controller_v_94 or controller_v_95);
controller_v_86 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_85 : (a_iminv(controller_light_status, 1) + 1);
controller_v_87 : (controller_v_85 or controller_v_86);
controller_v_82 : (a_inf(controller_blind_status, 1) + 1);
controller_v_80 : (a_inf(controller_light_status, 1) + 1);
controller_v_78 : (not controller_night);
controller_v_77 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_79 : (controller_v_77 and controller_v_78);
controller_v_81 : (controller_v_79 and controller_v_80);
controller_v_83 : (controller_v_81 and controller_v_82);
controller_v_84 : (not controller_v_83);
controller_rule3 : (controller_v_84 or controller_v_87);
controller_v_106 : (controller_rule1 and controller_rule3);
controller_v_74 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_75 : (not controller_v_74);
controller_v_71 : (a_iminv(controller_light_status, 1) + 1);
controller_v_72 : (not controller_v_71);
controller_v_68 : (a_iminv(controller_air_status, 2) + 1);
controller_v_69 : (not controller_v_68);
controller_v_66 : (a_iminv(controller_air_status, 1) + 1);
controller_v_67 : (not controller_v_66);
controller_v_70 : (controller_v_67 and controller_v_69);
controller_v_73 : (controller_v_70 and controller_v_72);
controller_v_76 : (controller_v_73 and controller_v_75);
controller_v_63 : (not controller_cleaner_presence);
controller_v_62 : (not controller_worker_presence);
controller_v_64 : (controller_v_62 and controller_v_63);
controller_v_65 : (not controller_v_64);
controller_rule4 : (controller_v_65 or controller_v_76);
controller_v_107 : (controller_v_106 and controller_rule4);
controller_v_61 : (a_iminv(controller_air_status, 1) + 1);
controller_v_57 : (a_inf(controller_air_status, 2) + 1);
controller_v_55 : (not controller_worker_presence);
controller_v_56 : (controller_v_55 and controller_cleaner_presence);
controller_v_58 : (controller_v_56 and controller_v_57);
controller_v_53 : (a_inf(controller_air_status, 2) + 1);
controller_v_51 : (not controller_cleaner_presence);
controller_v_52 : (controller_worker_presence and controller_v_51);
controller_v_54 : (controller_v_52 and controller_v_53);
controller_v_59 : (controller_v_54 or controller_v_58);
controller_v_60 : (not controller_v_59);
controller_rule5 : (controller_v_60 or controller_v_61);
controller_v_108 : (controller_v_107 and controller_rule5);
controller_v_50 : (a_iminv(controller_air_status, 2) + 1);
controller_v_47 : (a_inf(controller_air_status, 2) + 1);
controller_v_46 : (controller_worker_presence
  and controller_cleaner_presence);
controller_v_48 : (controller_v_46 and controller_v_47);
controller_v_49 : (not controller_v_48);
controller_rule6 : (controller_v_49 or controller_v_50);
controller_v_109 : (controller_v_108 and controller_rule6);
controller_v_45 : (a_iminv(controller_pc_on, 1) + 1);
controller_v_44 : (not controller_worker_presence);
controller_rule7 : (controller_v_44 or controller_v_45);
controller_v_110 : (controller_v_109 and controller_rule7);
controller_v_43 : (a_iminv(controller_pc_on, 0) + 1);
controller_v_41 : (not controller_worker_presence);
controller_v_42 : (not controller_v_41);
controller_rule7_5 : (controller_v_42 or controller_v_43);
controller_v_111 : (controller_v_110 and controller_rule7_5);
controller_v_40 : (a_iminv(controller_closet_open, 1) + 1);
controller_v_39 : (not controller_cleaner_presence);
controller_rule8 : (controller_v_39 or controller_v_40);
controller_v_112 : (controller_v_111 and controller_rule8);
controller_v_38 : (a_iminv(controller_closet_open, 0) + 1);
controller_v : (not controller_cleaner_presence);
controller_v_37 : (not controller_v);
controller_rule8_5 : (controller_v_37 or controller_v_38);
controller_v_113 : (controller_v_112 and controller_rule8_5);
controller_assume : 1;
controller_guarantee : controller_v_113;
initialisations : concat(initialisations, [(controller_error_state = 1)]);
evolutions : concat(evolutions, [controller_guarantee]);
constraints : [((controller_change_shift^2) = 1), ((controller_worker^2)
               = 1), ((controller_cleaner^2) = 1),
               ((controller_air_failed_recovered^2) = 1),
               ((controller_light_switch^2) = 1),
               ((controller_light_failed_recovered^2) = 1),
               ((controller_blind_switch^2) = 1),
               ((controller_blind_failed_recovered^2) = 1),
               ((controller_c_blind_2^2) = 1), ((controller_c_light_2^2)
               = 1), ((controller_c_blind_1^2) = 1),
               ((controller_c_light_1^2) = 1), ((controller_c_closet^2) = 1),
               ((controller_c_air_2^2) = 1), ((controller_c_air_1^2) = 1),
               ((controller_c_window^2) = 1), ((controller_c_pc^2) = 1),
               ((controller_c_door^2) = 1), (controller_assume = 1)];

% --- outputs : [controller_night, controller_worker_presence,
                 controller_cleaner_presence, controller_door_open,
                 controller_pc_on, controller_window_open,
                 controller_closet_open, controller_air_status,
                 controller_light_status, controller_blind_status] --- %
controller : processus(conditions, states, evolutions, initialisations,
                       [gen(constraints)], controllables);
controller_init : initial(controller);
controller : S_Security(controller,B_True(controller,controller_error_state));
dcs_result : equal(controller_init,initial(controller));
if dcs_result then
    print("controller: synthesis succeeded.")
else
    print("controller: synthesis failed.");

if dcs_result then
    print("Triangulation and controller generation...")
else
    quit(1);
declare(p_controller_c_blind_2, p_controller_c_light_2,
        p_controller_c_blind_1, p_controller_c_light_1,
        p_controller_c_closet, p_controller_c_air_2, p_controller_c_air_1,
        p_controller_c_window, p_controller_c_pc, p_controller_c_door);
phantom_vars : [p_controller_c_blind_2, p_controller_c_light_2,
                p_controller_c_blind_1, p_controller_c_light_1,
                p_controller_c_closet, p_controller_c_air_2,
                p_controller_c_air_1, p_controller_c_window,
                p_controller_c_pc, p_controller_c_door];
controller_triang : Triang(constraint(controller),controllables,phantom_vars);
controller_inputs : [controller_change_shift, controller_worker,
                     controller_cleaner, controller_air_failed_recovered,
                     controller_light_switch,
                     controller_light_failed_recovered,
                     controller_blind_switch,
                     controller_blind_failed_recovered, controller_ck_1,
                     controller_pnr_18, controller_ck_35_1,
                     controller_pnr_17, controller_ck_37_1,
                     controller_pnr_16, controller_ck_39_1,
                     controller_pnr_15, controller_ck_41_1,
                     controller_pnr_14, controller_ck_43_1,
                     controller_pnr_13, controller_ck_45_1,
                     controller_pnr_12, controller_v_185, controller_v_184,
                     controller_pnr_11, controller_ck_50_1,
                     controller_pnr_10, controller_ck_53_1, controller_pnr_9,
                     controller_ck_55_1, controller_pnr_8,
                     controller_ck_58_1, controller_pnr_7,
                     controller_ck_60_1, controller_pnr,
                     p_controller_c_blind_2, p_controller_c_light_2,
                     p_controller_c_blind_1, p_controller_c_light_1,
                     p_controller_c_closet, p_controller_c_air_2,
                     p_controller_c_air_1, p_controller_c_window,
                     p_controller_c_pc, p_controller_c_door];
heptagon_controller("controller_controller.ept","controller",controller_inputs,controllables,controller_triang);

