% --- Generated the 21/7/2018 at 18:39 --- %
% --- heptagon compiler, version 1.03.00 (compiled fri. jun. 15 15:41:53 CET 2018) --- %
% --- Command line: /usr/local/bin/heptc -target c -target z3z -s controller system.ept --- %

set_reorder(2);read("Property.lib");read("Synthesis.lib");read("Verif_Determ.lib");read("Simul.lib");read("Synthesis_Partial_order.lib");read("Orbite.lib");
% -- dependencies --- %

% ---------- process controller ---------- %

declare(controller_change_shift, controller_worker, controller_cleaner,
        controller_air_failed_recovered, controller_light_switch,
        controller_light_failed_recovered, controller_blind_switch,
        controller_blind_failed_recovered, controller_c_blind_2,
        controller_c_blind_1, controller_c_light_2, controller_c_light_1,
        controller_c_closet, controller_c_air_2, controller_c_air_1,
        controller_c_window, controller_c_pc, controller_c_door,
        controller_ck_1, controller_pnr_14, controller_ck_19_1,
        controller_pnr_13, controller_ck_21_1, controller_pnr_12,
        controller_ck_23_1, controller_pnr_11, controller_ck_25_1,
        controller_pnr_10, controller_ck_27_1, controller_pnr_9,
        controller_ck_29_1, controller_pnr_8, controller_v_272,
        controller_v_271, controller_pnr_7, controller_ck_34_1,
        controller_pnr_6, controller_ck_37_1, controller_pnr_5,
        controller_ck_39_1, controller_pnr_4, controller_ck_42_1,
        controller_pnr_3, controller_ck_44_1, controller_pnr,
        controller_error_state);
conditions : [controller_change_shift, controller_worker, controller_cleaner,
              controller_air_failed_recovered, controller_light_switch,
              controller_light_failed_recovered, controller_blind_switch,
              controller_blind_failed_recovered, controller_c_blind_2,
              controller_c_blind_1, controller_c_light_2,
              controller_c_light_1, controller_c_closet, controller_c_air_2,
              controller_c_air_1, controller_c_window, controller_c_pc,
              controller_c_door];
states : [controller_ck_1, controller_pnr_14, controller_ck_19_1,
          controller_pnr_13, controller_ck_21_1, controller_pnr_12,
          controller_ck_23_1, controller_pnr_11, controller_ck_25_1,
          controller_pnr_10, controller_ck_27_1, controller_pnr_9,
          controller_ck_29_1, controller_pnr_8, controller_v_272,
          controller_v_271, controller_pnr_7, controller_ck_34_1,
          controller_pnr_6, controller_ck_37_1, controller_pnr_5,
          controller_ck_39_1, controller_pnr_4, controller_ck_42_1,
          controller_pnr_3, controller_ck_44_1, controller_pnr,
          controller_error_state];
controllables : [controller_c_blind_2, controller_c_blind_1,
                 controller_c_light_2, controller_c_light_1,
                 controller_c_closet, controller_c_air_2, controller_c_air_1,
                 controller_c_window, controller_c_pc, controller_c_door];
evolutions : [];
initialisations : [];
controller_change : controller_change_shift;
controller_c : controller_c_door;
controller_c_1 : controller_c_closet;
controller_arrived : controller_worker;
controller_arrived_1 : controller_cleaner;
controller_c_2 : controller_c_pc;
controller_c_3 : controller_c_window;
controller_ck_32_2 : controller_v_272;
controller_ck_32_1 : controller_v_271;
controller_failed_recovered : controller_air_failed_recovered;
controller_failed_recovered_1 : controller_failed_recovered;
controller_c2 : controller_c_air_2;
controller_c2_1 : controller_c2;
controller_c1 : controller_c_air_1;
controller_c1_1 : controller_c1;
controller_failed_recovered_3 : controller_light_failed_recovered;
controller_failed_recovered_2 : controller_failed_recovered_3;
controller_c2_3 : controller_c_light_2;
controller_sw_1 : controller_c2_3;
controller_c1_3 : controller_c_light_1;
controller_c2_2 : controller_c1_3;
controller_sw : controller_light_switch;
controller_c1_2 : controller_sw;
controller_failed_recovered_4 : controller_blind_failed_recovered;
controller_failed_recovered_2_1 : controller_failed_recovered_4;
controller_c2_4 : controller_c_blind_2;
controller_sw_1_1 : controller_c2_4;
controller_c1_4 : controller_c_blind_1;
controller_c2_2_1 : controller_c1_4;
controller_sw_2 : controller_blind_switch;
controller_c1_2_1 : controller_sw_2;
controller_s_14_St_25_Noite_1 : ((1 when controller_change) default -1);
controller_r_14_St_25_Noite : ((1 when controller_change)
  default controller_pnr_14);
controller_s_14_St_25_Dia_1 : ((-1 when controller_change) default 1);
controller_s_14_1 : ((controller_s_14_St_25_Dia_1 when controller_ck_1)
  default controller_s_14_St_25_Noite_1);
controller_r_14_St_25_Dia : ((1 when controller_change)
  default controller_pnr_14);
controller_r_14 : ((controller_r_14_St_25_Dia when controller_ck_1)
  default controller_r_14_St_25_Noite);
controller_ck_18_1 : controller_s_14_1;
controller_ns_14_St_25_Noite_1 : -1;
controller_nr_14_St_25_Noite : -1;
controller_night_1_St_25_Noite : 1;
controller_ns_14_St_25_Dia_1 : 1;
controller_ns_14_1 : ((controller_ns_14_St_25_Dia_1 when controller_ck_18_1)
  default controller_ns_14_St_25_Noite_1);
controller_nr_14_St_25_Dia : -1;
controller_nr_14 : ((controller_nr_14_St_25_Dia when controller_ck_18_1)
  default controller_nr_14_St_25_Noite);
controller_night_1_St_25_Dia : -1;
controller_night_1 : ((controller_night_1_St_25_Dia when controller_ck_18_1)
  default controller_night_1_St_25_Noite);
controller_night : controller_night_1;
controller_v_203 : (not controller_c);
controller_s_13_St_24_Open_1 : ((1 when controller_v_203) default -1);
controller_r_13_St_24_Open : ((1 when controller_v_203)
  default controller_pnr_13);
controller_v_204 : (not controller_c);
controller_s_13_St_24_Closed_1 : ((-1 when controller_v_204) default 1);
controller_s_13_1 : ((controller_s_13_St_24_Closed_1 when controller_ck_19_1)
  default controller_s_13_St_24_Open_1);
controller_r_13_St_24_Closed : ((1 when controller_v_204)
  default controller_pnr_13);
controller_r_13 : ((controller_r_13_St_24_Closed when controller_ck_19_1)
  default controller_r_13_St_24_Open);
controller_ck_20_1 : controller_s_13_1;
controller_ns_13_St_24_Open_1 : -1;
controller_nr_13_St_24_Open : -1;
controller_door_open_1_St_24_Open : 1;
controller_ns_13_St_24_Closed_1 : 1;
controller_ns_13_1 : ((controller_ns_13_St_24_Closed_1
  when controller_ck_20_1) default controller_ns_13_St_24_Open_1);
controller_nr_13_St_24_Closed : -1;
controller_nr_13 : ((controller_nr_13_St_24_Closed when controller_ck_20_1)
  default controller_nr_13_St_24_Open);
controller_door_open_1_St_24_Closed : -1;
controller_door_open_1 : ((controller_door_open_1_St_24_Closed
  when controller_ck_20_1) default controller_door_open_1_St_24_Open);
controller_door_open : controller_door_open_1;
controller_s_12_St_23_Open_1 : ((1 when controller_c_1) default -1);
controller_r_12_St_23_Open : ((1 when controller_c_1)
  default controller_pnr_12);
controller_v_205 : (not controller_c_1);
controller_s_12_St_23_Locked_1 : ((-1 when controller_v_205) default 1);
controller_s_12_1 : ((controller_s_12_St_23_Locked_1 when controller_ck_21_1)
  default controller_s_12_St_23_Open_1);
controller_r_12_St_23_Locked : ((1 when controller_v_205)
  default controller_pnr_12);
controller_r_12 : ((controller_r_12_St_23_Locked when controller_ck_21_1)
  default controller_r_12_St_23_Open);
controller_ck_22_1 : controller_s_12_1;
controller_ns_12_St_23_Open_1 : -1;
controller_nr_12_St_23_Open : -1;
controller_closet_open_1_St_23_Open : 1;
controller_ns_12_St_23_Locked_1 : 1;
controller_ns_12_1 : ((controller_ns_12_St_23_Locked_1
  when controller_ck_22_1) default controller_ns_12_St_23_Open_1);
controller_nr_12_St_23_Locked : -1;
controller_nr_12 : ((controller_nr_12_St_23_Locked when controller_ck_22_1)
  default controller_nr_12_St_23_Open);
controller_closet_open_1_St_23_Locked : -1;
controller_closet_open_1 : ((controller_closet_open_1_St_23_Locked
  when controller_ck_22_1) default controller_closet_open_1_St_23_Open);
controller_closet_open : controller_closet_open_1;
controller_s_11_St_22_Present_1 : ((1 when controller_arrived) default -1);
controller_r_11_St_22_Present : ((1 when controller_arrived)
  default controller_pnr_11);
controller_s_11_St_22_Not_Present_1 : ((-1 when controller_arrived)
  default 1);
controller_s_11_1 : ((controller_s_11_St_22_Not_Present_1
  when controller_ck_23_1) default controller_s_11_St_22_Present_1);
controller_r_11_St_22_Not_Present : ((1 when controller_arrived)
  default controller_pnr_11);
controller_r_11 : ((controller_r_11_St_22_Not_Present
  when controller_ck_23_1) default controller_r_11_St_22_Present);
controller_ck_24_1 : controller_s_11_1;
controller_ns_11_St_22_Present_1 : -1;
controller_nr_11_St_22_Present : -1;
controller_presence_St_22_Present : 1;
controller_ns_11_St_22_Not_Present_1 : 1;
controller_ns_11_1 : ((controller_ns_11_St_22_Not_Present_1
  when controller_ck_24_1) default controller_ns_11_St_22_Present_1);
controller_nr_11_St_22_Not_Present : -1;
controller_nr_11 : ((controller_nr_11_St_22_Not_Present
  when controller_ck_24_1) default controller_nr_11_St_22_Present);
controller_presence_St_22_Not_Present : -1;
controller_presence : ((controller_presence_St_22_Not_Present
  when controller_ck_24_1) default controller_presence_St_22_Present);
controller_worker_presence : controller_presence;
controller_s_10_St_21_Present_1 : ((1 when controller_arrived_1) default -1);
controller_r_10_St_21_Present : ((1 when controller_arrived_1)
  default controller_pnr_10);
controller_s_10_St_21_Not_Present_1 : ((-1 when controller_arrived_1)
  default 1);
controller_s_10_1 : ((controller_s_10_St_21_Not_Present_1
  when controller_ck_25_1) default controller_s_10_St_21_Present_1);
controller_r_10_St_21_Not_Present : ((1 when controller_arrived_1)
  default controller_pnr_10);
controller_r_10 : ((controller_r_10_St_21_Not_Present
  when controller_ck_25_1) default controller_r_10_St_21_Present);
controller_ck_26_1 : controller_s_10_1;
controller_ns_10_St_21_Present_1 : -1;
controller_nr_10_St_21_Present : -1;
controller_presence_1_St_21_Present : 1;
controller_ns_10_St_21_Not_Present_1 : 1;
controller_ns_10_1 : ((controller_ns_10_St_21_Not_Present_1
  when controller_ck_26_1) default controller_ns_10_St_21_Present_1);
controller_nr_10_St_21_Not_Present : -1;
controller_nr_10 : ((controller_nr_10_St_21_Not_Present
  when controller_ck_26_1) default controller_nr_10_St_21_Present);
controller_presence_1_St_21_Not_Present : -1;
controller_presence_1 : ((controller_presence_1_St_21_Not_Present
  when controller_ck_26_1) default controller_presence_1_St_21_Present);
controller_cleaner_presence : controller_presence_1;
controller_v_206 : (not controller_c_2);
controller_s_9_St_20_On_1 : ((1 when controller_v_206) default -1);
controller_r_9_St_20_On : ((1 when controller_v_206)
  default controller_pnr_9);
controller_s_9_St_20_Off_1 : ((-1 when controller_c_2) default 1);
controller_s_9_1 : ((controller_s_9_St_20_Off_1 when controller_ck_27_1)
  default controller_s_9_St_20_On_1);
controller_r_9_St_20_Off : ((1 when controller_c_2)
  default controller_pnr_9);
controller_r_9 : ((controller_r_9_St_20_Off when controller_ck_27_1)
  default controller_r_9_St_20_On);
controller_ck_28_1 : controller_s_9_1;
controller_ns_9_St_20_On_1 : -1;
controller_nr_9_St_20_On : -1;
controller_computer_on_St_20_On : 1;
controller_ns_9_St_20_Off_1 : 1;
controller_ns_9_1 : ((controller_ns_9_St_20_Off_1 when controller_ck_28_1)
  default controller_ns_9_St_20_On_1);
controller_nr_9_St_20_Off : -1;
controller_nr_9 : ((controller_nr_9_St_20_Off when controller_ck_28_1)
  default controller_nr_9_St_20_On);
controller_computer_on_St_20_Off : -1;
controller_computer_on : ((controller_computer_on_St_20_Off
  when controller_ck_28_1) default controller_computer_on_St_20_On);
controller_pc_on : controller_computer_on;
controller_s_8_St_19_Open_1 : ((1 when controller_c_3) default -1);
controller_r_8_St_19_Open : ((1 when controller_c_3)
  default controller_pnr_8);
controller_v_207 : (not controller_c_3);
controller_s_8_St_19_Closed_1 : ((-1 when controller_v_207) default 1);
controller_s_8_1 : ((controller_s_8_St_19_Closed_1 when controller_ck_29_1)
  default controller_s_8_St_19_Open_1);
controller_r_8_St_19_Closed : ((1 when controller_v_207)
  default controller_pnr_8);
controller_r_8 : ((controller_r_8_St_19_Closed when controller_ck_29_1)
  default controller_r_8_St_19_Open);
controller_ck_30_1 : controller_s_8_1;
controller_ns_8_St_19_Open_1 : -1;
controller_nr_8_St_19_Open : -1;
controller_window_open_1_St_19_Open : 1;
controller_ns_8_St_19_Closed_1 : 1;
controller_ns_8_1 : ((controller_ns_8_St_19_Closed_1 when controller_ck_30_1)
  default controller_ns_8_St_19_Open_1);
controller_nr_8_St_19_Closed : -1;
controller_nr_8 : ((controller_nr_8_St_19_Closed when controller_ck_30_1)
  default controller_nr_8_St_19_Open);
controller_window_open_1_St_19_Closed : -1;
controller_window_open_1 : ((controller_window_open_1_St_19_Closed
  when controller_ck_30_1) default controller_window_open_1_St_19_Open);
controller_window_open : controller_window_open_1;
controller_ck_32_2_0 : controller_ck_32_2;
controller_ck_32_2_1 : controller_ck_32_2;
controller_v_208 : (not controller_c1_1);
controller_v_209 : (not controller_c2_1);
controller_v_210_2 : ((-1 when controller_v_209) default 1);
controller_v_210_1 : ((-1 when controller_v_209) default 1);
controller_v_211 : ((1 when controller_v_209) default controller_pnr_7);
controller_s_7_St_18_Max_2 : ((-1 when controller_v_208)
  default controller_v_210_2);
controller_s_7_St_18_Max_1 : ((1 when controller_v_208)
  default controller_v_210_1);
controller_r_7_St_18_Max : ((1 when controller_v_208)
  default controller_v_211);
controller_v_212 : (not controller_c1_1);
controller_v_213 : (not controller_c2_1);
controller_v_214_2 : ((1 when controller_v_213) default -1);
controller_v_214_1 : ((1 when controller_v_213) default 1);
controller_v_215 : ((1 when controller_v_213) default controller_pnr_7);
controller_s_7_St_18_Min_2 : ((-1 when controller_v_212)
  default controller_v_214_2);
controller_v_274 : ((controller_s_7_St_18_Max_2 when controller_ck_32_2_1)
  default controller_s_7_St_18_Min_2);
controller_s_7_St_18_Min_1 : ((-1 when controller_v_212)
  default controller_v_214_1);
controller_v_273 : ((controller_s_7_St_18_Max_1 when controller_ck_32_2_1)
  default controller_s_7_St_18_Min_1);
controller_r_7_St_18_Min : ((1 when controller_v_212)
  default controller_v_215);
controller_v_277 : ((controller_r_7_St_18_Max when controller_ck_32_2_1)
  default controller_r_7_St_18_Min);
controller_s_7_St_18_Max_2_0 : controller_s_7_St_18_Max_2;
controller_s_7_St_18_Max_2_1 : controller_s_7_St_18_Max_2;
controller_s_7_St_18_Min_2_0 : controller_s_7_St_18_Min_2;
controller_s_7_St_18_Min_2_1 : controller_s_7_St_18_Min_2;
controller_v_210_2_0 : controller_v_210_2;
controller_v_210_2_1 : controller_v_210_2;
controller_v_214_2_0 : controller_v_214_2;
controller_v_214_2_1 : controller_v_214_2;
controller_v_216 : (not controller_c2_1);
controller_v_217_2 : ((1 when controller_v_216) default -1);
controller_v_217_1 : ((1 when controller_v_216) default -1);
controller_v_218 : ((1 when controller_v_216) default controller_pnr_7);
controller_s_7_St_18_Off_2 : ((-1 when controller_c1_1)
  default controller_v_217_2);
controller_v_276 : ((1 when controller_ck_32_2_0)
  default controller_s_7_St_18_Off_2);
controller_s_7_St_18_Off_1 : ((1 when controller_c1_1)
  default controller_v_217_1);
controller_v_275 : ((1 when controller_ck_32_2_0)
  default controller_s_7_St_18_Off_1);
controller_r_7_St_18_Off : ((1 when controller_c1_1)
  default controller_v_218);
controller_v_278 : ((1 when controller_ck_32_2_0)
  default controller_r_7_St_18_Off);
controller_s_7_St_18_Off_2_0 : controller_s_7_St_18_Off_2;
controller_s_7_St_18_Off_2_1 : controller_s_7_St_18_Off_2;
controller_r_7 : ((controller_v_277 when controller_ck_32_1)
  default controller_v_278);
controller_s_7_2 : ((controller_v_274 when controller_ck_32_1)
  default controller_v_276);
controller_s_7_1 : ((controller_v_273 when controller_ck_32_1)
  default controller_v_275);
controller_s_7_2_0 : controller_s_7_2;
controller_s_7_2_1 : controller_s_7_2;
controller_v_217_2_0 : controller_v_217_2;
controller_v_217_2_1 : controller_v_217_2;
controller_ck_33_2 : controller_s_7_2;
controller_ck_33_1 : controller_s_7_1;
controller_ck_33_2_0 : controller_ck_33_2;
controller_ck_33_2_1 : controller_ck_33_2;
controller_ns_7_St_18_Max_2 : 1;
controller_ns_7_St_18_Max_1 : 1;
controller_nr_7_St_18_Max : -1;
controller_air_state_1_St_18_Max : a_const(2);
controller_ns_7_St_18_Min_2 : -1;
controller_v_266 : ((controller_ns_7_St_18_Max_2 when controller_ck_33_2_1)
  default controller_ns_7_St_18_Min_2);
controller_ns_7_St_18_Min_1 : 1;
controller_v_265 : ((controller_ns_7_St_18_Max_1 when controller_ck_33_2_1)
  default controller_ns_7_St_18_Min_1);
controller_nr_7_St_18_Min : -1;
controller_v_269 : ((controller_nr_7_St_18_Max when controller_ck_33_2_1)
  default controller_nr_7_St_18_Min);
controller_air_state_1_St_18_Min : a_const(1);
controller_v_263 : a_part(controller_ck_33_2_1, a_const(0),
                          controller_air_state_1_St_18_Max,
                          controller_air_state_1_St_18_Min);
controller_ns_7_St_18_Max_2_0 : controller_ns_7_St_18_Max_2;
controller_ns_7_St_18_Max_2_1 : controller_ns_7_St_18_Max_2;
controller_ns_7_St_18_Min_2_0 : controller_ns_7_St_18_Min_2;
controller_ns_7_St_18_Min_2_1 : controller_ns_7_St_18_Min_2;
controller_ns_7_St_18_Off_2 : -1;
controller_v_268 : ((1 when controller_ck_33_2_0)
  default controller_ns_7_St_18_Off_2);
controller_ns_7_St_18_Off_1 : -1;
controller_v_267 : ((1 when controller_ck_33_2_0)
  default controller_ns_7_St_18_Off_1);
controller_nr_7_St_18_Off : -1;
controller_v_270 : ((1 when controller_ck_33_2_0)
  default controller_nr_7_St_18_Off);
controller_air_state_1_St_18_Off : a_const(0);
controller_v_264 : a_part(controller_ck_33_2_0, a_const(0), a_const(0),
                          controller_air_state_1_St_18_Off);
controller_ns_7_St_18_Off_2_0 : controller_ns_7_St_18_Off_2;
controller_ns_7_St_18_Off_2_1 : controller_ns_7_St_18_Off_2;
controller_nr_7 : ((controller_v_269 when controller_ck_33_1)
  default controller_v_270);
controller_ns_7_2 : ((controller_v_266 when controller_ck_33_1)
  default controller_v_268);
controller_ns_7_1 : ((controller_v_265 when controller_ck_33_1)
  default controller_v_267);
controller_air_state_1 : a_part(controller_ck_33_1, a_const(0),
                                controller_v_263, controller_v_264);
controller_ns_7_2_0 : controller_ns_7_2;
controller_ns_7_2_1 : controller_ns_7_2;
controller_air_state : controller_air_state_1;
controller_s_6_St_17_Falha_1 : ((-1 when controller_failed_recovered_1)
  default 1);
controller_r_6_St_17_Falha : ((1 when controller_failed_recovered_1)
  default controller_pnr_6);
controller_s_6_St_17_Funcionando_1 : ((1 when controller_failed_recovered_1)
  default -1);
controller_s_6_1 : ((controller_s_6_St_17_Falha_1 when controller_ck_34_1)
  default controller_s_6_St_17_Funcionando_1);
controller_r_6_St_17_Funcionando : ((1 when controller_failed_recovered_1)
  default controller_pnr_6);
controller_r_6 : ((controller_r_6_St_17_Falha when controller_ck_34_1)
  default controller_r_6_St_17_Funcionando);
controller_ck_35_1 : controller_s_6_1;
controller_ns_6_St_17_Falha_1 : 1;
controller_nr_6_St_17_Falha : -1;
controller_failed_1_St_17_Falha : 1;
controller_ns_6_St_17_Funcionando_1 : -1;
controller_ns_6_1 : ((controller_ns_6_St_17_Falha_1 when controller_ck_35_1)
  default controller_ns_6_St_17_Funcionando_1);
controller_nr_6_St_17_Funcionando : -1;
controller_nr_6 : ((controller_nr_6_St_17_Falha when controller_ck_35_1)
  default controller_nr_6_St_17_Funcionando);
controller_failed_1_St_17_Funcionando : -1;
controller_failed_1 : ((controller_failed_1_St_17_Falha
  when controller_ck_35_1) default controller_failed_1_St_17_Funcionando);
controller_failed : controller_failed_1;
controller_ck_31 : controller_failed;
controller_out_false : controller_air_state;
controller_out_true : (controller_air_state + a_const(3));
controller_out : a_part(controller_ck_31, a_const(0), controller_out_true,
                        controller_out_false);
controller_air_status : controller_out;
controller_v_219 : (controller_c1_2 and controller_sw_1);
controller_v_220 : (not controller_c2_2);
controller_v_221 : (controller_v_219 or controller_v_220);
controller_s_5_St_16_On_1 : ((1 when controller_v_221) default -1);
controller_r_5_St_16_On : ((1 when controller_v_221)
  default controller_pnr_5);
controller_v_222 : (controller_c1_2 and controller_sw_1);
controller_v_223 : (not controller_c2_2);
controller_v_224 : (controller_v_222 or controller_v_223);
controller_s_5_St_16_Off_1 : ((-1 when controller_v_224) default 1);
controller_s_5_1 : ((controller_s_5_St_16_Off_1 when controller_ck_37_1)
  default controller_s_5_St_16_On_1);
controller_r_5_St_16_Off : ((1 when controller_v_224)
  default controller_pnr_5);
controller_r_5 : ((controller_r_5_St_16_Off when controller_ck_37_1)
  default controller_r_5_St_16_On);
controller_ck_38_1 : controller_s_5_1;
controller_ns_5_St_16_On_1 : -1;
controller_nr_5_St_16_On : -1;
controller_light_source_on_St_16_On : a_const(1);
controller_ns_5_St_16_Off_1 : 1;
controller_ns_5_1 : ((controller_ns_5_St_16_Off_1 when controller_ck_38_1)
  default controller_ns_5_St_16_On_1);
controller_nr_5_St_16_Off : -1;
controller_nr_5 : ((controller_nr_5_St_16_Off when controller_ck_38_1)
  default controller_nr_5_St_16_On);
controller_light_source_on_St_16_Off : a_const(0);
controller_light_source_on : a_part(controller_ck_38_1, a_const(0),
                                    controller_light_source_on_St_16_Off,
                                    controller_light_source_on_St_16_On);
controller_light_source : controller_light_source_on;
controller_s_4_St_15_Falha_1 : ((-1 when controller_failed_recovered_2)
  default 1);
controller_r_4_St_15_Falha : ((1 when controller_failed_recovered_2)
  default controller_pnr_4);
controller_s_4_St_15_Funcionando_1 : ((1 when controller_failed_recovered_2)
  default -1);
controller_s_4_1 : ((controller_s_4_St_15_Falha_1 when controller_ck_39_1)
  default controller_s_4_St_15_Funcionando_1);
controller_r_4_St_15_Funcionando : ((1 when controller_failed_recovered_2)
  default controller_pnr_4);
controller_r_4 : ((controller_r_4_St_15_Falha when controller_ck_39_1)
  default controller_r_4_St_15_Funcionando);
controller_ck_40_1 : controller_s_4_1;
controller_ns_4_St_15_Falha_1 : 1;
controller_nr_4_St_15_Falha : -1;
controller_failed_2_St_15_Falha : 1;
controller_ns_4_St_15_Funcionando_1 : -1;
controller_ns_4_1 : ((controller_ns_4_St_15_Falha_1 when controller_ck_40_1)
  default controller_ns_4_St_15_Funcionando_1);
controller_nr_4_St_15_Funcionando : -1;
controller_nr_4 : ((controller_nr_4_St_15_Falha when controller_ck_40_1)
  default controller_nr_4_St_15_Funcionando);
controller_failed_2_St_15_Funcionando : -1;
controller_failed_2 : ((controller_failed_2_St_15_Falha
  when controller_ck_40_1) default controller_failed_2_St_15_Funcionando);
controller_failed_3 : controller_failed_2;
controller_ck_36 : controller_failed_3;
controller_out_1_false : controller_light_source;
controller_out_1_true : (controller_light_source + a_const(2));
controller_out_1 : a_part(controller_ck_36, a_const(0),
                          controller_out_1_true, controller_out_1_false);
controller_light_status : controller_out_1;
controller_v_225 : (controller_c1_2_1 and controller_sw_1_1);
controller_v_226 : (not controller_c2_2_1);
controller_v_227 : (controller_v_225 or controller_v_226);
controller_s_3_St_14_On_1 : ((1 when controller_v_227) default -1);
controller_r_3_St_14_On : ((1 when controller_v_227)
  default controller_pnr_3);
controller_v_228 : (controller_c1_2_1 and controller_sw_1_1);
controller_v_229 : (not controller_c2_2_1);
controller_v_230 : (controller_v_228 or controller_v_229);
controller_s_3_St_14_Off_1 : ((-1 when controller_v_230) default 1);
controller_s_3_1 : ((controller_s_3_St_14_Off_1 when controller_ck_42_1)
  default controller_s_3_St_14_On_1);
controller_r_3_St_14_Off : ((1 when controller_v_230)
  default controller_pnr_3);
controller_r_3 : ((controller_r_3_St_14_Off when controller_ck_42_1)
  default controller_r_3_St_14_On);
controller_ck_43_1 : controller_s_3_1;
controller_ns_3_St_14_On_1 : -1;
controller_nr_3_St_14_On : -1;
controller_light_source_on_1_St_14_On : a_const(1);
controller_ns_3_St_14_Off_1 : 1;
controller_ns_3_1 : ((controller_ns_3_St_14_Off_1 when controller_ck_43_1)
  default controller_ns_3_St_14_On_1);
controller_nr_3_St_14_Off : -1;
controller_nr_3 : ((controller_nr_3_St_14_Off when controller_ck_43_1)
  default controller_nr_3_St_14_On);
controller_light_source_on_1_St_14_Off : a_const(0);
controller_light_source_on_1 : a_part(controller_ck_43_1, a_const(0),
                                      controller_light_source_on_1_St_14_Off,
                                      controller_light_source_on_1_St_14_On);
controller_light_source_1 : controller_light_source_on_1;
controller_s_St_13_Falha_1 : ((-1 when controller_failed_recovered_2_1)
  default 1);
controller_r_St_13_Falha : ((1 when controller_failed_recovered_2_1)
  default controller_pnr);
controller_s_St_13_Funcionando_1 : ((1 when controller_failed_recovered_2_1)
  default -1);
controller_s_1 : ((controller_s_St_13_Falha_1 when controller_ck_44_1)
  default controller_s_St_13_Funcionando_1);
controller_r_St_13_Funcionando : ((1 when controller_failed_recovered_2_1)
  default controller_pnr);
controller_r : ((controller_r_St_13_Falha when controller_ck_44_1)
  default controller_r_St_13_Funcionando);
controller_ck_45_1 : controller_s_1;
controller_ns_St_13_Falha_1 : 1;
controller_nr_St_13_Falha : -1;
controller_failed_2_1_St_13_Falha : 1;
controller_ns_St_13_Funcionando_1 : -1;
controller_ns_1 : ((controller_ns_St_13_Falha_1 when controller_ck_45_1)
  default controller_ns_St_13_Funcionando_1);
controller_nr_St_13_Funcionando : -1;
controller_nr : ((controller_nr_St_13_Falha when controller_ck_45_1)
  default controller_nr_St_13_Funcionando);
controller_failed_2_1_St_13_Funcionando : -1;
controller_failed_2_1 : ((controller_failed_2_1_St_13_Falha
  when controller_ck_45_1) default controller_failed_2_1_St_13_Funcionando);
controller_failed_4 : controller_failed_2_1;
controller_ck_41 : controller_failed_4;
controller_out_2_false : controller_light_source_1;
controller_out_2_true : (controller_light_source_1 + a_const(2));
controller_out_2 : a_part(controller_ck_41, a_const(0),
                          controller_out_2_true, controller_out_2_false);
controller_blind_status : controller_out_2;
initialisations : concat(initialisations, [(controller_ck_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_14_1 default controller_ck_1)]);
initialisations : concat(initialisations, [(controller_pnr_14 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_14 default controller_pnr_14)]);
initialisations : concat(initialisations, [(controller_ck_19_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_13_1 default controller_ck_19_1)]);
initialisations : concat(initialisations, [(controller_pnr_13 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_13 default controller_pnr_13)]);
initialisations : concat(initialisations, [(controller_ck_21_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_12_1 default controller_ck_21_1)]);
initialisations : concat(initialisations, [(controller_pnr_12 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_12 default controller_pnr_12)]);
initialisations : concat(initialisations, [(controller_ck_23_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_11_1 default controller_ck_23_1)]);
initialisations : concat(initialisations, [(controller_pnr_11 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_11 default controller_pnr_11)]);
initialisations : concat(initialisations, [(controller_ck_25_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_10_1 default controller_ck_25_1)]);
initialisations : concat(initialisations, [(controller_pnr_10 = -1)]);
evolutions : concat(evolutions,
                    [(controller_nr_10 default controller_pnr_10)]);
initialisations : concat(initialisations, [(controller_ck_27_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_9_1 default controller_ck_27_1)]);
initialisations : concat(initialisations, [(controller_pnr_9 = -1)]);
evolutions : concat(evolutions, [(controller_nr_9 default controller_pnr_9)]);
initialisations : concat(initialisations, [(controller_ck_29_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_8_1 default controller_ck_29_1)]);
initialisations : concat(initialisations, [(controller_pnr_8 = -1)]);
evolutions : concat(evolutions, [(controller_nr_8 default controller_pnr_8)]);
initialisations : concat(initialisations, [(controller_v_272 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_7_2 default controller_v_272)]);
initialisations : concat(initialisations, [(controller_v_271 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_7_1 default controller_v_271)]);
initialisations : concat(initialisations, [(controller_pnr_7 = -1)]);
evolutions : concat(evolutions, [(controller_nr_7 default controller_pnr_7)]);
initialisations : concat(initialisations, [(controller_ck_34_1 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_6_1 default controller_ck_34_1)]);
initialisations : concat(initialisations, [(controller_pnr_6 = -1)]);
evolutions : concat(evolutions, [(controller_nr_6 default controller_pnr_6)]);
initialisations : concat(initialisations, [(controller_ck_37_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_5_1 default controller_ck_37_1)]);
initialisations : concat(initialisations, [(controller_pnr_5 = -1)]);
evolutions : concat(evolutions, [(controller_nr_5 default controller_pnr_5)]);
initialisations : concat(initialisations, [(controller_ck_39_1 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_4_1 default controller_ck_39_1)]);
initialisations : concat(initialisations, [(controller_pnr_4 = -1)]);
evolutions : concat(evolutions, [(controller_nr_4 default controller_pnr_4)]);
initialisations : concat(initialisations, [(controller_ck_42_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_3_1 default controller_ck_42_1)]);
initialisations : concat(initialisations, [(controller_pnr_3 = -1)]);
evolutions : concat(evolutions, [(controller_nr_3 default controller_pnr_3)]);
initialisations : concat(initialisations, [(controller_ck_44_1 = -1)]);
evolutions : concat(evolutions,
                    [(controller_ns_1 default controller_ck_44_1)]);
initialisations : concat(initialisations, [(controller_pnr = -1)]);
evolutions : concat(evolutions, [(controller_nr default controller_pnr)]);
controller_v_187 : (a_iminv(controller_air_status, 1) + 1);
controller_v_186 : (a_iminv(controller_light_status, 1) + 1);
controller_v_188 : (controller_v_186 and controller_v_187);
controller_v_183 : (a_inf(controller_air_status, 2) + 1);
controller_v_181 : (a_inf(controller_light_status, 1) + 1);
controller_v_179 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_180 : (controller_v_179 and controller_night);
controller_v_182 : (controller_v_180 and controller_v_181);
controller_v_184 : (controller_v_182 and controller_v_183);
controller_v_185 : (not controller_v_184);
controller_rule1 : (controller_v_185 or controller_v_188);
controller_v_176 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_177 : (controller_window_open and controller_v_176);
controller_v_178 : (controller_v_177 and controller_door_open);
controller_v_173 : (a_inf(controller_blind_status, 1) + 1);
controller_v_171 : (a_sup(controller_air_status, 3) + 1);
controller_v_169 : (a_inf(controller_light_status, 1) + 1);
controller_v_167 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_168 : (controller_v_167 and controller_night);
controller_v_170 : (controller_v_168 and controller_v_169);
controller_v_172 : (controller_v_170 and controller_v_171);
controller_v_174 : (controller_v_172 and controller_v_173);
controller_v_175 : (not controller_v_174);
controller_rule2 : (controller_v_175 or controller_v_178);
controller_v_189 : (controller_rule1 and controller_rule2);
controller_v_166 : (controller_window_open and controller_door_open);
controller_v_163 : (a_sup(controller_blind_status, 2) + 1);
controller_v_161 : (a_sup(controller_air_status, 3) + 1);
controller_v_159 : (a_inf(controller_light_status, 1) + 1);
controller_v_157 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_158 : (controller_v_157 and controller_night);
controller_v_160 : (controller_v_158 and controller_v_159);
controller_v_162 : (controller_v_160 and controller_v_161);
controller_v_164 : (controller_v_162 and controller_v_163);
controller_v_165 : (not controller_v_164);
controller_rule3 : (controller_v_165 or controller_v_166);
controller_v_190 : (controller_v_189 and controller_rule3);
controller_v_155 : (a_iminv(controller_air_status, 1) + 1);
controller_v_154 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_156 : (controller_v_154 and controller_v_155);
controller_v_151 : (a_inf(controller_blind_status, 1) + 1);
controller_v_149 : (a_inf(controller_air_status, 2) + 1);
controller_v_147 : (a_sup(controller_light_status, 2) + 1);
controller_v_145 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_146 : (controller_v_145 and controller_night);
controller_v_148 : (controller_v_146 and controller_v_147);
controller_v_150 : (controller_v_148 and controller_v_149);
controller_v_152 : (controller_v_150 and controller_v_151);
controller_v_153 : (not controller_v_152);
controller_rule4 : (controller_v_153 or controller_v_156);
controller_v_191 : (controller_v_190 and controller_rule4);
controller_v_142 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_143 : (controller_window_open and controller_v_142);
controller_v_144 : (controller_v_143 and controller_door_open);
controller_v_139 : (a_inf(controller_blind_status, 1) + 1);
controller_v_137 : (a_sup(controller_air_status, 3) + 1);
controller_v_135 : (a_sup(controller_light_status, 2) + 1);
controller_v_133 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_134 : (controller_v_133 and controller_night);
controller_v_136 : (controller_v_134 and controller_v_135);
controller_v_138 : (controller_v_136 and controller_v_137);
controller_v_140 : (controller_v_138 and controller_v_139);
controller_v_141 : (not controller_v_140);
controller_rule5 : (controller_v_141 or controller_v_144);
controller_v_192 : (controller_v_191 and controller_rule5);
controller_v_132 : (controller_window_open and controller_door_open);
controller_v_129 : (a_sup(controller_blind_status, 2) + 1);
controller_v_127 : (a_sup(controller_air_status, 3) + 1);
controller_v_125 : (a_sup(controller_light_status, 2) + 1);
controller_v_123 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_124 : (controller_v_123 and controller_night);
controller_v_126 : (controller_v_124 and controller_v_125);
controller_v_128 : (controller_v_126 and controller_v_127);
controller_v_130 : (controller_v_128 and controller_v_129);
controller_v_131 : (not controller_v_130);
controller_rule6 : (controller_v_131 or controller_v_132);
controller_v_193 : (controller_v_192 and controller_rule6);
controller_v_120 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_121 : (not controller_v_120);
controller_v_117 : (a_iminv(controller_light_status, 1) + 1);
controller_v_118 : (not controller_v_117);
controller_v_115 : (not controller_window_open);
controller_v_114 : (not controller_pc_on);
controller_v_116 : (controller_v_114 and controller_v_115);
controller_v_119 : (controller_v_116 and controller_v_118);
controller_v_122 : (controller_v_119 and controller_v_121);
controller_v_110 : (not controller_cleaner_presence);
controller_v_109 : (not controller_worker_presence);
controller_v_111 : (controller_v_109 and controller_v_110);
controller_v_112 : (controller_v_111 and controller_night);
controller_v_113 : (not controller_v_112);
controller_rule7 : (controller_v_113 or controller_v_122);
controller_v_194 : (controller_v_193 and controller_rule7);
controller_v_106 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_107 : (not controller_v_106);
controller_v_103 : (a_iminv(controller_light_status, 1) + 1);
controller_v_104 : (not controller_v_103);
controller_v_101 : (not controller_window_open);
controller_v_100 : (not controller_pc_on);
controller_v_102 : (controller_v_100 and controller_v_101);
controller_v_105 : (controller_v_102 and controller_v_104);
controller_v_108 : (controller_v_105 and controller_v_107);
controller_v_97 : (not controller_night);
controller_v_95 : (not controller_cleaner_presence);
controller_v_94 : (not controller_worker_presence);
controller_v_96 : (controller_v_94 and controller_v_95);
controller_v_98 : (controller_v_96 and controller_v_97);
controller_v_99 : (not controller_v_98);
controller_rule8 : (controller_v_99 or controller_v_108);
controller_v_195 : (controller_v_194 and controller_rule8);
controller_v_93 : (a_iminv(controller_air_status, 2) + 1);
controller_v_90 : (a_inf(controller_air_status, 2) + 1);
controller_v_88 : (not controller_window_open);
controller_v_86 : (a_iminv(controller_light_status, 1) + 1);
controller_v_84 : (not controller_night);
controller_v_85 : (controller_v_84 and controller_pc_on);
controller_v_87 : (controller_v_85 and controller_v_86);
controller_v_89 : (controller_v_87 and controller_v_88);
controller_v_91 : (controller_v_89 and controller_v_90);
controller_v_92 : (not controller_v_91);
controller_rule9 : (controller_v_92 or controller_v_93);
controller_v_196 : (controller_v_195 and controller_rule9);
controller_v_83 : (a_iminv(controller_air_status, 1) + 1);
controller_v_80 : (a_inf(controller_air_status, 2) + 1);
controller_v_78 : (not controller_window_open);
controller_v_75 : (a_iminv(controller_light_status, 1) + 1);
controller_v_76 : (not controller_v_75);
controller_v_73 : (not controller_night);
controller_v_74 : (controller_v_73 and controller_pc_on);
controller_v_77 : (controller_v_74 and controller_v_76);
controller_v_79 : (controller_v_77 and controller_v_78);
controller_v_81 : (controller_v_79 and controller_v_80);
controller_v_82 : (not controller_v_81);
controller_rule10 : (controller_v_82 or controller_v_83);
controller_v_197 : (controller_v_196 and controller_rule10);
controller_v_71 : (a_iminv(controller_air_status, 1) + 1);
controller_v_69 : (not controller_pc_on);
controller_v_70 : (controller_v_69 and controller_closet_open);
controller_v_72 : (controller_v_70 and controller_v_71);
controller_v_66 : (a_inf(controller_air_status, 2) + 1);
controller_v_67 : (controller_cleaner_presence and controller_v_66);
controller_v_68 : (not controller_v_67);
controller_rule11 : (controller_v_68 or controller_v_72);
controller_v_198 : (controller_v_197 and controller_rule11);
controller_v_65 : (a_iminv(controller_light_status, 1) + 1);
controller_v_62 : (a_inf(controller_light_status, 1) + 1);
controller_v_60 : (not controller_night);
controller_v_59 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_61 : (controller_v_59 and controller_v_60);
controller_v_63 : (controller_v_61 and controller_v_62);
controller_v_64 : (not controller_v_63);
controller_rule12 : (controller_v_64 or controller_v_65);
controller_v_199 : (controller_v_198 and controller_rule12);
controller_v_56 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_57 : (controller_window_open and controller_v_56);
controller_v_58 : (controller_v_57 and controller_door_open);
controller_v_53 : (a_inf(controller_blind_status, 1) + 1);
controller_v_51 : (a_sup(controller_air_status, 3) + 1);
controller_v_49 : (not controller_night);
controller_v_48 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_50 : (controller_v_48 and controller_v_49);
controller_v_52 : (controller_v_50 and controller_v_51);
controller_v_54 : (controller_v_52 and controller_v_53);
controller_v_55 : (not controller_v_54);
controller_rule13 : (controller_v_55 or controller_v_58);
controller_v_200 : (controller_v_199 and controller_rule13);
controller_v_45 : (a_sup(controller_blind_status, 2) + 1);
controller_v_43 : (a_sup(controller_air_status, 3) + 1);
controller_v_41 : (not controller_night);
controller_v_40 : (controller_worker_presence
  or controller_cleaner_presence);
controller_v_42 : (controller_v_40 and controller_v_41);
controller_v_44 : (controller_v_42 and controller_v_43);
controller_v_46 : (controller_v_44 and controller_v_45);
controller_v_47 : (not controller_v_46);
controller_rule14 : (controller_v_47 or controller_door_open);
controller_v_201 : (controller_v_200 and controller_rule14);
controller_v_38 : (a_iminv(controller_blind_status, 1) + 1);
controller_v_37 : (a_iminv(controller_light_status, 1) + 1);
controller_v_39 : (controller_v_37 or controller_v_38);
controller_v_34 : (a_inf(controller_blind_status, 1) + 1);
controller_v_32 : (not controller_night);
controller_v : (controller_worker_presence or controller_cleaner_presence);
controller_v_33 : (controller_v and controller_v_32);
controller_v_35 : (controller_v_33 and controller_v_34);
controller_v_36 : (not controller_v_35);
controller_rule15 : (controller_v_36 or controller_v_39);
controller_v_202 : (controller_v_201 and controller_rule15);
controller_assume : 1;
controller_guarantee : controller_v_202;
initialisations : concat(initialisations, [(controller_error_state = 1)]);
evolutions : concat(evolutions, [controller_guarantee]);
constraints : [((controller_change_shift^2) = 1), ((controller_worker^2)
               = 1), ((controller_cleaner^2) = 1),
               ((controller_air_failed_recovered^2) = 1),
               ((controller_light_switch^2) = 1),
               ((controller_light_failed_recovered^2) = 1),
               ((controller_blind_switch^2) = 1),
               ((controller_blind_failed_recovered^2) = 1),
               ((controller_c_blind_2^2) = 1), ((controller_c_blind_1^2)
               = 1), ((controller_c_light_2^2) = 1),
               ((controller_c_light_1^2) = 1), ((controller_c_closet^2) = 1),
               ((controller_c_air_2^2) = 1), ((controller_c_air_1^2) = 1),
               ((controller_c_window^2) = 1), ((controller_c_pc^2) = 1),
               ((controller_c_door^2) = 1), (controller_assume = 1)];

% --- outputs : [controller_night, controller_door_open,
                 controller_worker_presence, controller_cleaner_presence,
                 controller_pc_on, controller_window_open,
                 controller_closet_open, controller_air_status,
                 controller_light_status, controller_blind_status] --- %
controller : processus(conditions, states, evolutions, initialisations,
                       [gen(constraints)], controllables);
controller_init : initial(controller);
controller : S_Security(controller,B_True(controller,controller_error_state));
dcs_result : equal(controller_init,initial(controller));
if dcs_result then
    print("controller: synthesis succeeded.")
else
    print("controller: synthesis failed.");

if dcs_result then
    print("Triangulation and controller generation...")
else
    quit(1);
declare(p_controller_c_blind_2, p_controller_c_blind_1,
        p_controller_c_light_2, p_controller_c_light_1,
        p_controller_c_closet, p_controller_c_air_2, p_controller_c_air_1,
        p_controller_c_window, p_controller_c_pc, p_controller_c_door);
phantom_vars : [p_controller_c_blind_2, p_controller_c_blind_1,
                p_controller_c_light_2, p_controller_c_light_1,
                p_controller_c_closet, p_controller_c_air_2,
                p_controller_c_air_1, p_controller_c_window,
                p_controller_c_pc, p_controller_c_door];
controller_triang : Triang(constraint(controller),controllables,phantom_vars);
controller_inputs : [controller_change_shift, controller_worker,
                     controller_cleaner, controller_air_failed_recovered,
                     controller_light_switch,
                     controller_light_failed_recovered,
                     controller_blind_switch,
                     controller_blind_failed_recovered, controller_ck_1,
                     controller_pnr_14, controller_ck_19_1,
                     controller_pnr_13, controller_ck_21_1,
                     controller_pnr_12, controller_ck_23_1,
                     controller_pnr_11, controller_ck_25_1,
                     controller_pnr_10, controller_ck_27_1, controller_pnr_9,
                     controller_ck_29_1, controller_pnr_8, controller_v_272,
                     controller_v_271, controller_pnr_7, controller_ck_34_1,
                     controller_pnr_6, controller_ck_37_1, controller_pnr_5,
                     controller_ck_39_1, controller_pnr_4,
                     controller_ck_42_1, controller_pnr_3,
                     controller_ck_44_1, controller_pnr,
                     p_controller_c_blind_2, p_controller_c_blind_1,
                     p_controller_c_light_2, p_controller_c_light_1,
                     p_controller_c_closet, p_controller_c_air_2,
                     p_controller_c_air_1, p_controller_c_window,
                     p_controller_c_pc, p_controller_c_door];
heptagon_controller("controller_controller.ept","controller",controller_inputs,controllables,controller_triang);

