type st_12 = St_12_Off|St_12_High|St_12_Frostprotection|St_12_Eco
type st_11 = St_11_Open|St_11_Closed
type st_10 = St_10_Open|St_10_Closed
type st_9 = St_9_Ligado|St_9_Desligado
type st_8 = St_8_Ligado|St_8_Desligado
type st_7 = St_7_Ocupied|St_7_Empty
type st_6 = St_6_Standby|St_6_Reheat|St_6_Off|St_6_Maintain|St_6_Heat
type st_5 = St_5_Water_fill|St_5_Washing|St_5_Standby|St_5_Spin|St_5_Rinse|
  St_5_Off
type st_4 = St_4_Off|St_4_High|St_4_Frostprotection|St_4_Eco
type st_3 = St_3_Open|St_3_Closed
type st_2 = St_2_Ligado|St_2_Desligado
type st_1 = St_1_Minimal_safety|St_1_Eco|St_1_Comfort
type st = St_Ocupied|St_Empty
node room(presence : bool) returns (occupied : bool)
var nr_St_Ocupied : bool; ns_St_Ocupied_1 : bool; occupied_St_Ocupied : bool;
    nr_St_Empty : bool; ns_St_Empty_1 : bool; occupied_St_Empty : bool;
    ck_1_1 : bool; v : bool; r_St_Ocupied : bool; s_St_Ocupied_1 : bool;
    r_St_Empty : bool; s_St_Empty_1 : bool; ck_1_2 : bool; s_1 : bool;
    ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_1_1 = s_1;
  occupied_St_Empty = false;
  nr_St_Empty = false;
  ns_St_Empty_1 = true;
  occupied_St_Ocupied = true;
  nr_St_Ocupied = false;
  ns_St_Ocupied_1 = false;
  occupied =
    merge ck_1_1 (true -> occupied_St_Empty)(false -> occupied_St_Ocupied);
  ns_1 = merge ck_1_1 (true -> ns_St_Empty_1)(false -> ns_St_Ocupied_1);
  nr = merge ck_1_1 (true -> nr_St_Empty)(false -> nr_St_Ocupied);
  ck_1_2 = true fby ns_1;
  r_St_Empty =
    if (presence when true(ck_1_2)) then true else (pnr when true(ck_1_2));
  s_St_Empty_1 = if (presence when true(ck_1_2)) then false else true;
  r_St_Ocupied = if v then true else (pnr when false(ck_1_2));
  s_St_Ocupied_1 = if v then true else false;
  v = not((presence when false(ck_1_2)));
  s_1 = merge ck_1_2 (true -> s_St_Empty_1)(false -> s_St_Ocupied_1);
  r = merge ck_1_2 (true -> r_St_Empty)(false -> r_St_Ocupied)
tel

node management_policy(eco_input : bool; comfort_input : bool)
returns (eco_on : bool; comfort_on : bool; power_limit : int)
var v_114 : bool; v_113 : bool; v_112 : bool; v_111 : bool; v_110 : bool;
    v_109 : bool; v_108 : int; v_107 : int; v_106 : bool; v_105 : bool;
    v_104 : bool; v_103 : bool; ns_St_1_Comfort_2_0 : bool;
    ns_St_1_Comfort_2_1 : bool; ns_St_1_Eco_2_0 : bool;
    ns_St_1_Eco_2_1 : bool; ns_St_1_Minimal_safety_2_0 : bool;
    ns_St_1_Minimal_safety_2_1 : bool; ck_2_2_0 : bool; ck_2_2_1 : bool;
    nr_St_1_Comfort : bool; ns_St_1_Comfort_2 : bool;
    ns_St_1_Comfort_1 : bool; power_limit_St_1_Comfort : int;
    comfort_on_St_1_Comfort : bool; eco_on_St_1_Comfort : bool;
    nr_St_1_Eco : bool; ns_St_1_Eco_2 : bool; ns_St_1_Eco_1 : bool;
    power_limit_St_1_Eco : int; comfort_on_St_1_Eco : bool;
    eco_on_St_1_Eco : bool; nr_St_1_Minimal_safety : bool;
    ns_St_1_Minimal_safety_2 : bool; ns_St_1_Minimal_safety_1 : bool;
    power_limit_St_1_Minimal_safety : int;
    comfort_on_St_1_Minimal_safety : bool; eco_on_St_1_Minimal_safety : bool;
    ck_2_2 : bool; ck_2_1 : bool; v_6_2_0 : bool; v_6_2_1 : bool; v_7 : bool;
    v_6_2 : bool; v_6_1 : bool; v_4_2_0 : bool; v_4_2_1 : bool; v_5 : bool;
    v_4_2 : bool; v_4_1 : bool; v_3 : bool; v_1_2_0 : bool; v_1_2_1 : bool;
    v_2 : bool; v_1_2 : bool; v_1_1 : bool; v : bool; v_122 : bool;
    v_121 : bool; v_120 : bool; v_119 : bool; v_118 : bool; v_117 : bool;
    v_116 : bool; v_115 : bool; s_St_1_Comfort_2_0 : bool;
    s_St_1_Comfort_2_1 : bool; s_St_1_Eco_2_0 : bool; s_St_1_Eco_2_1 : bool;
    s_St_1_Minimal_safety_2_0 : bool; s_St_1_Minimal_safety_2_1 : bool;
    ck_2_3_0 : bool; ck_2_3_1 : bool; r_St_1_Comfort : bool;
    s_St_1_Comfort_2 : bool; s_St_1_Comfort_1 : bool; r_St_1_Eco : bool;
    s_St_1_Eco_2 : bool; s_St_1_Eco_1 : bool; r_St_1_Minimal_safety : bool;
    s_St_1_Minimal_safety_2 : bool; s_St_1_Minimal_safety_1 : bool;
    ck_2_3 : bool; ck_1 : bool; s_2_0 : bool; s_2_1 : bool; ns_2_0 : bool;
    ns_2_1 : bool; s_2 : bool; s_1 : bool; ns_2 : bool; ns_1 : bool;
    r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_2_1 = s_1;
  ck_2_2 = s_2;
  power_limit_St_1_Minimal_safety = 3000;
  eco_on_St_1_Minimal_safety = false;
  comfort_on_St_1_Minimal_safety = false;
  nr_St_1_Minimal_safety = false;
  ns_St_1_Minimal_safety_1 = false;
  ns_St_1_Minimal_safety_2 = false;
  power_limit_St_1_Eco = 5000;
  eco_on_St_1_Eco = true;
  comfort_on_St_1_Eco = false;
  nr_St_1_Eco = false;
  ns_St_1_Eco_1 = true;
  ns_St_1_Eco_2 = false;
  power_limit_St_1_Comfort = 7000;
  eco_on_St_1_Comfort = false;
  comfort_on_St_1_Comfort = true;
  nr_St_1_Comfort = false;
  ns_St_1_Comfort_1 = true;
  ns_St_1_Comfort_2 = true;
  v_103 =
    merge ck_2_2_1 (true -> eco_on_St_1_Comfort)(false -> eco_on_St_1_Eco);
  v_104 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> eco_on_St_1_Minimal_safety);
  eco_on = merge ck_2_1 (true -> v_103)(false -> v_104);
  v_105 =
    merge ck_2_2_1
      (true -> comfort_on_St_1_Comfort)(false -> comfort_on_St_1_Eco);
  v_106 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> comfort_on_St_1_Minimal_safety);
  comfort_on = merge ck_2_1 (true -> v_105)(false -> v_106);
  v_107 =
    merge ck_2_2_1
      (true -> power_limit_St_1_Comfort)(false -> power_limit_St_1_Eco);
  v_108 =
    merge ck_2_2_0
      (true -> ((0 when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> power_limit_St_1_Minimal_safety);
  power_limit = merge ck_2_1 (true -> v_107)(false -> v_108);
  v_109 = merge ck_2_2_1 (true -> ns_St_1_Comfort_1)(false -> ns_St_1_Eco_1);
  v_110 = merge ck_2_2_1 (true -> ns_St_1_Comfort_2)(false -> ns_St_1_Eco_2);
  v_111 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> ns_St_1_Minimal_safety_1);
  v_112 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> ns_St_1_Minimal_safety_2);
  ns_1 = merge ck_2_1 (true -> v_109)(false -> v_111);
  ns_2 = merge ck_2_1 (true -> v_110)(false -> v_112);
  v_113 = merge ck_2_2_1 (true -> nr_St_1_Comfort)(false -> nr_St_1_Eco);
  v_114 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> nr_St_1_Minimal_safety);
  nr = merge ck_2_1 (true -> v_113)(false -> v_114);
  ck_2_2_1 = (ck_2_2 when true(ck_2_1));
  ck_2_2_0 = (ck_2_2 when false(ck_2_1));
  ns_St_1_Minimal_safety_2_1 =
    (ns_St_1_Minimal_safety_2 when true(ns_St_1_Minimal_safety_1));
  ns_St_1_Minimal_safety_2_0 =
    (ns_St_1_Minimal_safety_2 when false(ns_St_1_Minimal_safety_1));
  ns_St_1_Eco_2_1 = (ns_St_1_Eco_2 when true(ns_St_1_Eco_1));
  ns_St_1_Eco_2_0 = (ns_St_1_Eco_2 when false(ns_St_1_Eco_1));
  ns_St_1_Comfort_2_1 = (ns_St_1_Comfort_2 when true(ns_St_1_Comfort_1));
  ns_St_1_Comfort_2_0 = (ns_St_1_Comfort_2 when false(ns_St_1_Comfort_1));
  v_115 = false fby ns_1;
  v_116 = false fby ns_2;
  ck_1 = v_115;
  ck_2_3 = v_116;
  r_St_1_Minimal_safety =
    if ((eco_input when false(ck_1)) when false(ck_2_3_0)) then true else v_7;
  s_St_1_Minimal_safety_1 =
    if ((eco_input when false(ck_1)) when false(ck_2_3_0))
    then true
    else v_6_1;
  s_St_1_Minimal_safety_2 =
    if ((eco_input when false(ck_1)) when false(ck_2_3_0))
    then false
    else v_6_2;
  v_7 =
    if ((comfort_input when false(ck_1)) when false(ck_2_3_0))
    then true
    else ((pnr when false(ck_1)) when false(ck_2_3_0));
  v_6_1 =
    if ((comfort_input when false(ck_1)) when false(ck_2_3_0))
    then true
    else false;
  v_6_2 =
    if ((comfort_input when false(ck_1)) when false(ck_2_3_0))
    then true
    else false;
  v_6_2_1 = (v_6_2 when true(v_6_1));
  v_6_2_0 = (v_6_2 when false(v_6_1));
  r_St_1_Eco = if v_3 then true else v_5;
  s_St_1_Eco_1 = if v_3 then false else v_4_1;
  s_St_1_Eco_2 = if v_3 then false else v_4_2;
  v_5 =
    if ((comfort_input when true(ck_1)) when false(ck_2_3_1))
    then true
    else ((pnr when true(ck_1)) when false(ck_2_3_1));
  v_4_1 =
    if ((comfort_input when true(ck_1)) when false(ck_2_3_1))
    then true
    else true;
  v_4_2 =
    if ((comfort_input when true(ck_1)) when false(ck_2_3_1))
    then true
    else false;
  v_3 = not(((eco_input when true(ck_1)) when false(ck_2_3_1)));
  v_4_2_1 = (v_4_2 when true(v_4_1));
  v_4_2_0 = (v_4_2 when false(v_4_1));
  r_St_1_Comfort =
    if ((eco_input when true(ck_1)) when true(ck_2_3_1)) then true else v_2;
  s_St_1_Comfort_1 =
    if ((eco_input when true(ck_1)) when true(ck_2_3_1)) then true else v_1_1;
  s_St_1_Comfort_2 =
    if ((eco_input when true(ck_1)) when true(ck_2_3_1))
    then false
    else v_1_2;
  v_2 = if v then true else ((pnr when true(ck_1)) when true(ck_2_3_1));
  v_1_1 = if v then false else true;
  v_1_2 = if v then false else true;
  v = not(((comfort_input when true(ck_1)) when true(ck_2_3_1)));
  v_1_2_1 = (v_1_2 when true(v_1_1));
  v_1_2_0 = (v_1_2 when false(v_1_1));
  v_117 = merge ck_2_3_1 (true -> s_St_1_Comfort_1)(false -> s_St_1_Eco_1);
  v_118 = merge ck_2_3_1 (true -> s_St_1_Comfort_2)(false -> s_St_1_Eco_2);
  v_119 =
    merge ck_2_3_0
      (true -> ((true when false(ck_1)) when true(ck_2_3_0)))
      (false -> s_St_1_Minimal_safety_1);
  v_120 =
    merge ck_2_3_0
      (true -> ((true when false(ck_1)) when true(ck_2_3_0)))
      (false -> s_St_1_Minimal_safety_2);
  s_1 = merge ck_1 (true -> v_117)(false -> v_119);
  s_2 = merge ck_1 (true -> v_118)(false -> v_120);
  v_121 = merge ck_2_3_1 (true -> r_St_1_Comfort)(false -> r_St_1_Eco);
  v_122 =
    merge ck_2_3_0
      (true -> ((true when false(ck_1)) when true(ck_2_3_0)))
      (false -> r_St_1_Minimal_safety);
  r = merge ck_1 (true -> v_121)(false -> v_122);
  ck_2_3_1 = (ck_2_3 when true(ck_1));
  ck_2_3_0 = (ck_2_3 when false(ck_1));
  s_St_1_Minimal_safety_2_1 =
    (s_St_1_Minimal_safety_2 when true(s_St_1_Minimal_safety_1));
  s_St_1_Minimal_safety_2_0 =
    (s_St_1_Minimal_safety_2 when false(s_St_1_Minimal_safety_1));
  s_St_1_Eco_2_1 = (s_St_1_Eco_2 when true(s_St_1_Eco_1));
  s_St_1_Eco_2_0 = (s_St_1_Eco_2 when false(s_St_1_Eco_1));
  s_St_1_Comfort_2_1 = (s_St_1_Comfort_2 when true(s_St_1_Comfort_1));
  s_St_1_Comfort_2_0 = (s_St_1_Comfort_2 when false(s_St_1_Comfort_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1))
tel

node light_source(source_switch : bool; c_source1 : bool; c_source2 : bool)
returns (source_on : bool)
var nr_St_2_Ligado : bool; ns_St_2_Ligado_1 : bool;
    source_on_St_2_Ligado : bool; nr_St_2_Desligado : bool;
    ns_St_2_Desligado_1 : bool; source_on_St_2_Desligado : bool;
    ck_3_1 : bool; v_12 : bool; v_11 : bool; v_10 : bool; v_9 : bool;
    v_8 : bool; v : bool; r_St_2_Ligado : bool; s_St_2_Ligado_1 : bool;
    r_St_2_Desligado : bool; s_St_2_Desligado_1 : bool; ck_1 : bool;
    s_1 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_3_1 = s_1;
  source_on_St_2_Desligado = false;
  nr_St_2_Desligado = false;
  ns_St_2_Desligado_1 = true;
  source_on_St_2_Ligado = true;
  nr_St_2_Ligado = false;
  ns_St_2_Ligado_1 = false;
  source_on =
    merge ck_3_1
      (true -> source_on_St_2_Desligado)(false -> source_on_St_2_Ligado);
  ns_1 =
    merge ck_3_1 (true -> ns_St_2_Desligado_1)(false -> ns_St_2_Ligado_1);
  nr = merge ck_3_1 (true -> nr_St_2_Desligado)(false -> nr_St_2_Ligado);
  ck_1 = true fby ns_1;
  r_St_2_Desligado = if v_12 then true else (pnr when true(ck_1));
  s_St_2_Desligado_1 = if v_12 then false else true;
  v_12 = (v_11 or (c_source1 when true(ck_1)));
  v_11 = ((source_switch when true(ck_1)) & v_10);
  v_10 = not((c_source2 when true(ck_1)));
  r_St_2_Ligado = if v_9 then true else (pnr when false(ck_1));
  s_St_2_Ligado_1 = if v_9 then true else false;
  v_9 = (v_8 or (c_source2 when false(ck_1)));
  v_8 = ((source_switch when false(ck_1)) & v);
  v = not((c_source1 when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_2_Desligado_1)(false -> s_St_2_Ligado_1);
  r = merge ck_1 (true -> r_St_2_Desligado)(false -> r_St_2_Ligado)
tel

node door(push : bool; c_door : bool) returns (door_open : bool)
var nr_St_3_Open : bool; ns_St_3_Open_1 : bool; door_open_St_3_Open : bool;
    nr_St_3_Closed : bool; ns_St_3_Closed_1 : bool;
    door_open_St_3_Closed : bool; ck_4_1 : bool; v_14 : bool; v_13 : bool;
    v : bool; r_St_3_Open : bool; s_St_3_Open_1 : bool; r_St_3_Closed : bool;
    s_St_3_Closed_1 : bool; ck_1 : bool; s_1 : bool; ns_1 : bool; r : bool;
    nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_4_1 = s_1;
  door_open_St_3_Closed = false;
  nr_St_3_Closed = false;
  ns_St_3_Closed_1 = true;
  door_open_St_3_Open = true;
  nr_St_3_Open = false;
  ns_St_3_Open_1 = false;
  door_open =
    merge ck_4_1
      (true -> door_open_St_3_Closed)(false -> door_open_St_3_Open);
  ns_1 = merge ck_4_1 (true -> ns_St_3_Closed_1)(false -> ns_St_3_Open_1);
  nr = merge ck_4_1 (true -> nr_St_3_Closed)(false -> nr_St_3_Open);
  ck_1 = true fby ns_1;
  r_St_3_Closed = if v_14 then true else (pnr when true(ck_1));
  s_St_3_Closed_1 = if v_14 then false else true;
  v_14 = ((push when true(ck_1)) & (c_door when true(ck_1)));
  r_St_3_Open = if v_13 then true else (pnr when false(ck_1));
  s_St_3_Open_1 = if v_13 then true else false;
  v_13 = ((push when false(ck_1)) or v);
  v = not((c_door when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_3_Closed_1)(false -> s_St_3_Open_1);
  r = merge ck_1 (true -> r_St_3_Closed)(false -> r_St_3_Open)
tel

node rad(up1 : bool; down1 : bool; up2 : bool; down2 : bool; c_rad1 : bool;
          c_rad2 : bool)
returns (rad_power : int; rad_state : int)
var v_132 : bool; v_131 : bool; v_130 : bool; v_129 : bool; v_128 : bool;
    v_127 : bool; v_126 : int; v_125 : int; v_124 : int; v_123 : int;
    ns_St_4_High_2_0 : bool; ns_St_4_High_2_1 : bool; ns_St_4_Eco_2_0 : bool;
    ns_St_4_Eco_2_1 : bool; ns_St_4_Frostprotection_2_0 : bool;
    ns_St_4_Frostprotection_2_1 : bool; ns_St_4_Off_2_0 : bool;
    ns_St_4_Off_2_1 : bool; ck_5_2_0 : bool; ck_5_2_1 : bool;
    nr_St_4_High : bool; ns_St_4_High_2 : bool; ns_St_4_High_1 : bool;
    rad_state_St_4_High : int; rad_power_St_4_High : int; nr_St_4_Eco : bool;
    ns_St_4_Eco_2 : bool; ns_St_4_Eco_1 : bool; rad_state_St_4_Eco : int;
    rad_power_St_4_Eco : int; nr_St_4_Frostprotection : bool;
    ns_St_4_Frostprotection_2 : bool; ns_St_4_Frostprotection_1 : bool;
    rad_state_St_4_Frostprotection : int;
    rad_power_St_4_Frostprotection : int; nr_St_4_Off : bool;
    ns_St_4_Off_2 : bool; ns_St_4_Off_1 : bool; rad_state_St_4_Off : int;
    rad_power_St_4_Off : int; ck_5_2 : bool; ck_5_1 : bool; v_34 : bool;
    v_33 : bool; v_31_2_0 : bool; v_31_2_1 : bool; v_29_2_0 : bool;
    v_29_2_1 : bool; v_32 : bool; v_31_2 : bool; v_31_1 : bool; v_30 : bool;
    v_29_2 : bool; v_29_1 : bool; v_28 : bool; v_27 : bool; v_26 : bool;
    v_25 : bool; v_23_2_0 : bool; v_23_2_1 : bool; v_24 : bool;
    v_23_2 : bool; v_23_1 : bool; v_22 : bool; v_21 : bool; v_20 : bool;
    v_18_2_0 : bool; v_18_2_1 : bool; v_19 : bool; v_18_2 : bool;
    v_18_1 : bool; v_17 : bool; v_16 : bool; v_15 : bool; v : bool;
    v_140 : bool; v_139 : bool; v_138 : bool; v_137 : bool; v_136 : bool;
    v_135 : bool; v_134 : bool; v_133 : bool; s_St_4_High_2_0 : bool;
    s_St_4_High_2_1 : bool; s_St_4_Eco_2_0 : bool; s_St_4_Eco_2_1 : bool;
    s_St_4_Frostprotection_2_0 : bool; s_St_4_Frostprotection_2_1 : bool;
    s_St_4_Off_2_0 : bool; s_St_4_Off_2_1 : bool; ck_2_0 : bool;
    ck_2_1 : bool; r_St_4_High : bool; s_St_4_High_2 : bool;
    s_St_4_High_1 : bool; r_St_4_Eco : bool; s_St_4_Eco_2 : bool;
    s_St_4_Eco_1 : bool; r_St_4_Frostprotection : bool;
    s_St_4_Frostprotection_2 : bool; s_St_4_Frostprotection_1 : bool;
    r_St_4_Off : bool; s_St_4_Off_2 : bool; s_St_4_Off_1 : bool; ck_2 : bool;
    ck_1 : bool; s_2_0 : bool; s_2_1 : bool; ns_2_0 : bool; ns_2_1 : bool;
    s_2 : bool; s_1 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool;
    pnr : bool;
let
  pnr = false fby nr;
  ck_5_1 = s_1;
  ck_5_2 = s_2;
  rad_power_St_4_Off = 0;
  rad_state_St_4_Off = 0;
  nr_St_4_Off = false;
  ns_St_4_Off_1 = false;
  ns_St_4_Off_2 = false;
  rad_power_St_4_Frostprotection = 300;
  rad_state_St_4_Frostprotection = 1;
  nr_St_4_Frostprotection = false;
  ns_St_4_Frostprotection_1 = true;
  ns_St_4_Frostprotection_2 = false;
  rad_power_St_4_Eco = 1500;
  rad_state_St_4_Eco = 2;
  nr_St_4_Eco = false;
  ns_St_4_Eco_1 = true;
  ns_St_4_Eco_2 = true;
  rad_power_St_4_High = 2000;
  rad_state_St_4_High = 3;
  nr_St_4_High = false;
  ns_St_4_High_1 = false;
  ns_St_4_High_2 = true;
  v_123 =
    merge ck_5_2_1
      (true -> rad_power_St_4_Eco)(false -> rad_power_St_4_Frostprotection);
  v_124 =
    merge ck_5_2_0 (true -> rad_power_St_4_High)(false -> rad_power_St_4_Off);
  rad_power = merge ck_5_1 (true -> v_123)(false -> v_124);
  v_125 =
    merge ck_5_2_1
      (true -> rad_state_St_4_Eco)(false -> rad_state_St_4_Frostprotection);
  v_126 =
    merge ck_5_2_0 (true -> rad_state_St_4_High)(false -> rad_state_St_4_Off);
  rad_state = merge ck_5_1 (true -> v_125)(false -> v_126);
  v_127 =
    merge ck_5_2_1
      (true -> ns_St_4_Eco_1)(false -> ns_St_4_Frostprotection_1);
  v_128 =
    merge ck_5_2_1
      (true -> ns_St_4_Eco_2)(false -> ns_St_4_Frostprotection_2);
  v_129 = merge ck_5_2_0 (true -> ns_St_4_High_1)(false -> ns_St_4_Off_1);
  v_130 = merge ck_5_2_0 (true -> ns_St_4_High_2)(false -> ns_St_4_Off_2);
  ns_1 = merge ck_5_1 (true -> v_127)(false -> v_129);
  ns_2 = merge ck_5_1 (true -> v_128)(false -> v_130);
  v_131 =
    merge ck_5_2_1 (true -> nr_St_4_Eco)(false -> nr_St_4_Frostprotection);
  v_132 = merge ck_5_2_0 (true -> nr_St_4_High)(false -> nr_St_4_Off);
  nr = merge ck_5_1 (true -> v_131)(false -> v_132);
  ck_5_2_1 = (ck_5_2 when true(ck_5_1));
  ck_5_2_0 = (ck_5_2 when false(ck_5_1));
  ns_St_4_Off_2_1 = (ns_St_4_Off_2 when true(ns_St_4_Off_1));
  ns_St_4_Off_2_0 = (ns_St_4_Off_2 when false(ns_St_4_Off_1));
  ns_St_4_Frostprotection_2_1 =
    (ns_St_4_Frostprotection_2 when true(ns_St_4_Frostprotection_1));
  ns_St_4_Frostprotection_2_0 =
    (ns_St_4_Frostprotection_2 when false(ns_St_4_Frostprotection_1));
  ns_St_4_Eco_2_1 = (ns_St_4_Eco_2 when true(ns_St_4_Eco_1));
  ns_St_4_Eco_2_0 = (ns_St_4_Eco_2 when false(ns_St_4_Eco_1));
  ns_St_4_High_2_1 = (ns_St_4_High_2 when true(ns_St_4_High_1));
  ns_St_4_High_2_0 = (ns_St_4_High_2 when false(ns_St_4_High_1));
  v_133 = false fby ns_1;
  v_134 = false fby ns_2;
  ck_1 = v_133;
  ck_2 = v_134;
  r_St_4_Off =
    if v_34 then true else ((pnr when false(ck_1)) when false(ck_2_0));
  s_St_4_Off_1 = if v_34 then true else false;
  s_St_4_Off_2 = if v_34 then false else false;
  v_34 = (((up1 when false(ck_1)) when false(ck_2_0)) or v_33);
  v_33 = not(((c_rad1 when false(ck_1)) when false(ck_2_0)));
  r_St_4_Frostprotection = if v_25 then true else v_32;
  s_St_4_Frostprotection_1 = if v_25 then true else v_31_1;
  s_St_4_Frostprotection_2 = if v_25 then true else v_31_2;
  v_32 = if v_26 then true else v_30;
  v_31_1 = if v_26 then false else v_29_1;
  v_31_2 = if v_26 then true else v_29_2;
  v_30 = if v_28 then true else ((pnr when true(ck_1)) when false(ck_2_1));
  v_29_1 = if v_28 then false else true;
  v_29_2 = if v_28 then false else false;
  v_28 = (((down1 when true(ck_1)) when false(ck_2_1)) or v_27);
  v_27 = not(((c_rad1 when true(ck_1)) when false(ck_2_1)));
  v_26 =
    (((up2 when true(ck_1)) when false(ck_2_1)) &
     ((c_rad2 when true(ck_1)) when false(ck_2_1)));
  v_25 =
    (((up1 when true(ck_1)) when false(ck_2_1)) &
     ((c_rad1 when true(ck_1)) when false(ck_2_1)));
  v_29_2_1 = (v_29_2 when true(v_29_1));
  v_29_2_0 = (v_29_2 when false(v_29_1));
  v_31_2_1 = (v_31_2 when true(v_31_1));
  v_31_2_0 = (v_31_2 when false(v_31_1));
  r_St_4_Eco = if v_21 then true else v_24;
  s_St_4_Eco_1 = if v_21 then true else v_23_1;
  s_St_4_Eco_2 = if v_21 then false else v_23_2;
  v_24 = if v_22 then true else ((pnr when true(ck_1)) when true(ck_2_1));
  v_23_1 = if v_22 then false else true;
  v_23_2 = if v_22 then true else true;
  v_22 =
    (((up2 when true(ck_1)) when true(ck_2_1)) &
     ((c_rad2 when true(ck_1)) when true(ck_2_1)));
  v_21 = (((down1 when true(ck_1)) when true(ck_2_1)) or v_20);
  v_20 = not(((c_rad1 when true(ck_1)) when true(ck_2_1)));
  v_23_2_1 = (v_23_2 when true(v_23_1));
  v_23_2_0 = (v_23_2 when false(v_23_1));
  r_St_4_High = if v_15 then true else v_19;
  s_St_4_High_1 = if v_15 then true else v_18_1;
  s_St_4_High_2 = if v_15 then true else v_18_2;
  v_19 = if v_17 then true else ((pnr when false(ck_1)) when true(ck_2_0));
  v_18_1 = if v_17 then true else false;
  v_18_2 = if v_17 then false else true;
  v_17 = (((down2 when false(ck_1)) when true(ck_2_0)) or v_16);
  v_16 = not(((c_rad2 when false(ck_1)) when true(ck_2_0)));
  v_15 = (((down1 when false(ck_1)) when true(ck_2_0)) or v);
  v = not(((c_rad1 when false(ck_1)) when true(ck_2_0)));
  v_18_2_1 = (v_18_2 when true(v_18_1));
  v_18_2_0 = (v_18_2 when false(v_18_1));
  v_135 =
    merge ck_2_1 (true -> s_St_4_Eco_1)(false -> s_St_4_Frostprotection_1);
  v_136 =
    merge ck_2_1 (true -> s_St_4_Eco_2)(false -> s_St_4_Frostprotection_2);
  v_137 = merge ck_2_0 (true -> s_St_4_High_1)(false -> s_St_4_Off_1);
  v_138 = merge ck_2_0 (true -> s_St_4_High_2)(false -> s_St_4_Off_2);
  s_1 = merge ck_1 (true -> v_135)(false -> v_137);
  s_2 = merge ck_1 (true -> v_136)(false -> v_138);
  v_139 = merge ck_2_1 (true -> r_St_4_Eco)(false -> r_St_4_Frostprotection);
  v_140 = merge ck_2_0 (true -> r_St_4_High)(false -> r_St_4_Off);
  r = merge ck_1 (true -> v_139)(false -> v_140);
  ck_2_1 = (ck_2 when true(ck_1));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_4_Off_2_1 = (s_St_4_Off_2 when true(s_St_4_Off_1));
  s_St_4_Off_2_0 = (s_St_4_Off_2 when false(s_St_4_Off_1));
  s_St_4_Frostprotection_2_1 =
    (s_St_4_Frostprotection_2 when true(s_St_4_Frostprotection_1));
  s_St_4_Frostprotection_2_0 =
    (s_St_4_Frostprotection_2 when false(s_St_4_Frostprotection_1));
  s_St_4_Eco_2_1 = (s_St_4_Eco_2 when true(s_St_4_Eco_1));
  s_St_4_Eco_2_0 = (s_St_4_Eco_2 when false(s_St_4_Eco_1));
  s_St_4_High_2_1 = (s_St_4_High_2 when true(s_St_4_High_1));
  s_St_4_High_2_0 = (s_St_4_High_2 when false(s_St_4_High_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1))
tel

node washing_machine(finish : bool; start : bool; c_wash : bool)
returns (wash_power : int; wash_state : int)
var v_176 : bool; v_175 : bool; v_174 : bool; v_173 : bool; v_172 : bool;
    v_171 : bool; v_170 : bool; v_169 : bool; v_168 : bool; v_167 : bool;
    v_166 : bool; v_165 : bool; v_164 : bool; v_163 : bool; v_162 : bool;
    v_161 : bool; v_160 : bool; v_159 : bool; v_158 : bool; v_157 : bool;
    v_156 : bool; v_155 : bool; v_154 : bool; v_153 : bool; v_152 : int;
    v_151 : int; v_150 : int; v_149 : int; v_148 : int; v_147 : int;
    v_146 : int; v_145 : int; v_144 : int; v_143 : int; v_142 : int;
    v_141 : int; ns_St_5_Standby_2_0 : bool; ns_St_5_Standby_3_0_0 : bool;
    ns_St_5_Standby_3_0_1 : bool; ns_St_5_Standby_2_1 : bool;
    ns_St_5_Standby_3_1_0 : bool; ns_St_5_Standby_3_1_1 : bool;
    ns_St_5_Spin_2_0 : bool; ns_St_5_Spin_3_0_0 : bool;
    ns_St_5_Spin_3_0_1 : bool; ns_St_5_Spin_2_1 : bool;
    ns_St_5_Spin_3_1_0 : bool; ns_St_5_Spin_3_1_1 : bool;
    ns_St_5_Rinse_2_0 : bool; ns_St_5_Rinse_3_0_0 : bool;
    ns_St_5_Rinse_3_0_1 : bool; ns_St_5_Rinse_2_1 : bool;
    ns_St_5_Rinse_3_1_0 : bool; ns_St_5_Rinse_3_1_1 : bool;
    ns_St_5_Washing_2_0 : bool; ns_St_5_Washing_3_0_0 : bool;
    ns_St_5_Washing_3_0_1 : bool; ns_St_5_Washing_2_1 : bool;
    ns_St_5_Washing_3_1_0 : bool; ns_St_5_Washing_3_1_1 : bool;
    ns_St_5_Water_fill_2_0 : bool; ns_St_5_Water_fill_3_0_0 : bool;
    ns_St_5_Water_fill_3_0_1 : bool; ns_St_5_Water_fill_2_1 : bool;
    ns_St_5_Water_fill_3_1_0 : bool; ns_St_5_Water_fill_3_1_1 : bool;
    ns_St_5_Off_2_0 : bool; ns_St_5_Off_3_0_0 : bool;
    ns_St_5_Off_3_0_1 : bool; ns_St_5_Off_2_1 : bool;
    ns_St_5_Off_3_1_0 : bool; ns_St_5_Off_3_1_1 : bool; ck_6_2_0 : bool;
    ck_6_3_0_0 : bool; ck_6_3_0_1 : bool; ck_6_2_1 : bool; ck_6_3_1_0 : bool;
    ck_6_3_1_1 : bool; nr_St_5_Standby : bool; ns_St_5_Standby_3 : bool;
    ns_St_5_Standby_2 : bool; ns_St_5_Standby_1 : bool;
    wash_state_St_5_Standby : int; wash_power_St_5_Standby : int;
    nr_St_5_Spin : bool; ns_St_5_Spin_3 : bool; ns_St_5_Spin_2 : bool;
    ns_St_5_Spin_1 : bool; wash_state_St_5_Spin : int;
    wash_power_St_5_Spin : int; nr_St_5_Rinse : bool; ns_St_5_Rinse_3 : bool;
    ns_St_5_Rinse_2 : bool; ns_St_5_Rinse_1 : bool;
    wash_state_St_5_Rinse : int; wash_power_St_5_Rinse : int;
    nr_St_5_Washing : bool; ns_St_5_Washing_3 : bool;
    ns_St_5_Washing_2 : bool; ns_St_5_Washing_1 : bool;
    wash_state_St_5_Washing : int; wash_power_St_5_Washing : int;
    nr_St_5_Water_fill : bool; ns_St_5_Water_fill_3 : bool;
    ns_St_5_Water_fill_2 : bool; ns_St_5_Water_fill_1 : bool;
    wash_state_St_5_Water_fill : int; wash_power_St_5_Water_fill : int;
    nr_St_5_Off : bool; ns_St_5_Off_3 : bool; ns_St_5_Off_2 : bool;
    ns_St_5_Off_1 : bool; wash_state_St_5_Off : int;
    wash_power_St_5_Off : int; ck_6_3 : bool; ck_6_2 : bool; ck_6_1 : bool;
    v_37_2_0 : bool; v_37_3_0_0 : bool; v_37_3_0_1 : bool; v_37_2_1 : bool;
    v_37_3_1_0 : bool; v_37_3_1_1 : bool; v_38 : bool; v_37_3 : bool;
    v_37_2 : bool; v_37_1 : bool; v_36 : bool; v_35 : bool; v : bool;
    v_203 : bool; v_202 : bool; v_201 : bool; v_200 : bool; v_199 : bool;
    v_198 : bool; v_197 : bool; v_196 : bool; v_195 : bool; v_194 : bool;
    v_193 : bool; v_192 : bool; v_191 : bool; v_190 : bool; v_189 : bool;
    v_188 : bool; v_187 : bool; v_186 : bool; v_185 : bool; v_184 : bool;
    v_183 : bool; v_182 : bool; v_181 : bool; v_180 : bool; v_179 : bool;
    v_178 : bool; v_177 : bool; s_St_5_Standby_2_0 : bool;
    s_St_5_Standby_3_0_0 : bool; s_St_5_Standby_3_0_1 : bool;
    s_St_5_Standby_2_1 : bool; s_St_5_Standby_3_1_0 : bool;
    s_St_5_Standby_3_1_1 : bool; s_St_5_Spin_2_0 : bool;
    s_St_5_Spin_3_0_0 : bool; s_St_5_Spin_3_0_1 : bool;
    s_St_5_Spin_2_1 : bool; s_St_5_Spin_3_1_0 : bool;
    s_St_5_Spin_3_1_1 : bool; s_St_5_Rinse_2_0 : bool;
    s_St_5_Rinse_3_0_0 : bool; s_St_5_Rinse_3_0_1 : bool;
    s_St_5_Rinse_2_1 : bool; s_St_5_Rinse_3_1_0 : bool;
    s_St_5_Rinse_3_1_1 : bool; s_St_5_Washing_2_0 : bool;
    s_St_5_Washing_3_0_0 : bool; s_St_5_Washing_3_0_1 : bool;
    s_St_5_Washing_2_1 : bool; s_St_5_Washing_3_1_0 : bool;
    s_St_5_Washing_3_1_1 : bool; s_St_5_Water_fill_2_0 : bool;
    s_St_5_Water_fill_3_0_0 : bool; s_St_5_Water_fill_3_0_1 : bool;
    s_St_5_Water_fill_2_1 : bool; s_St_5_Water_fill_3_1_0 : bool;
    s_St_5_Water_fill_3_1_1 : bool; s_St_5_Off_2_0 : bool;
    s_St_5_Off_3_0_0 : bool; s_St_5_Off_3_0_1 : bool; s_St_5_Off_2_1 : bool;
    s_St_5_Off_3_1_0 : bool; s_St_5_Off_3_1_1 : bool; ck_2_0 : bool;
    ck_3_0_0 : bool; ck_3_0_1 : bool; ck_2_1 : bool; ck_3_1_0 : bool;
    ck_3_1_1 : bool; r_St_5_Standby : bool; s_St_5_Standby_3 : bool;
    s_St_5_Standby_2 : bool; s_St_5_Standby_1 : bool; r_St_5_Spin : bool;
    s_St_5_Spin_3 : bool; s_St_5_Spin_2 : bool; s_St_5_Spin_1 : bool;
    r_St_5_Rinse : bool; s_St_5_Rinse_3 : bool; s_St_5_Rinse_2 : bool;
    s_St_5_Rinse_1 : bool; r_St_5_Washing : bool; s_St_5_Washing_3 : bool;
    s_St_5_Washing_2 : bool; s_St_5_Washing_1 : bool;
    r_St_5_Water_fill : bool; s_St_5_Water_fill_3 : bool;
    s_St_5_Water_fill_2 : bool; s_St_5_Water_fill_1 : bool;
    r_St_5_Off : bool; s_St_5_Off_3 : bool; s_St_5_Off_2 : bool;
    s_St_5_Off_1 : bool; ck_3 : bool; ck_2 : bool; ck_1 : bool; s_2_0 : bool;
    s_3_0_0 : bool; s_3_0_1 : bool; s_2_1 : bool; s_3_1_0 : bool;
    s_3_1_1 : bool; ns_2_0 : bool; ns_3_0_0 : bool; ns_3_0_1 : bool;
    ns_2_1 : bool; ns_3_1_0 : bool; ns_3_1_1 : bool; s_3 : bool; s_2 : bool;
    s_1 : bool; ns_3 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool;
    pnr : bool;
let
  pnr = false fby nr;
  ck_6_1 = s_1;
  ck_6_2 = s_2;
  ck_6_3 = s_3;
  wash_power_St_5_Off = 0;
  wash_state_St_5_Off = 0;
  nr_St_5_Off = false;
  ns_St_5_Off_1 = true;
  ns_St_5_Off_2 = true;
  ns_St_5_Off_3 = true;
  wash_power_St_5_Water_fill = 15;
  wash_state_St_5_Water_fill = 1;
  nr_St_5_Water_fill = false;
  ns_St_5_Water_fill_1 = false;
  ns_St_5_Water_fill_2 = false;
  ns_St_5_Water_fill_3 = false;
  wash_power_St_5_Washing = 250;
  wash_state_St_5_Washing = 2;
  nr_St_5_Washing = false;
  ns_St_5_Washing_1 = false;
  ns_St_5_Washing_2 = true;
  ns_St_5_Washing_3 = false;
  wash_power_St_5_Rinse = 200;
  wash_state_St_5_Rinse = 3;
  nr_St_5_Rinse = false;
  ns_St_5_Rinse_1 = true;
  ns_St_5_Rinse_2 = true;
  ns_St_5_Rinse_3 = false;
  wash_power_St_5_Spin = 800;
  wash_state_St_5_Spin = 4;
  nr_St_5_Spin = false;
  ns_St_5_Spin_1 = true;
  ns_St_5_Spin_2 = false;
  ns_St_5_Spin_3 = false;
  wash_power_St_5_Standby = 0;
  wash_state_St_5_Standby = 5;
  nr_St_5_Standby = false;
  ns_St_5_Standby_1 = false;
  ns_St_5_Standby_2 = true;
  ns_St_5_Standby_3 = true;
  v_141 =
    merge ck_6_3_1_1
      (true -> wash_power_St_5_Off)(false -> wash_power_St_5_Rinse);
  v_142 =
    merge ck_6_3_1_0
      (true -> 
        (((0 when true(ck_6_1)) when false(ck_6_2_1)) when true(ck_6_3_1_0)))
      (false -> wash_power_St_5_Spin);
  v_143 = merge ck_6_2_1 (true -> v_141)(false -> v_142);
  v_144 =
    merge ck_6_3_0_1
      (true -> wash_power_St_5_Standby)(false -> wash_power_St_5_Washing);
  v_145 =
    merge ck_6_3_0_0
      (true -> 
        (((0 when false(ck_6_1)) when false(ck_6_2_0)) when true(ck_6_3_0_0)))
      (false -> wash_power_St_5_Water_fill);
  v_146 = merge ck_6_2_0 (true -> v_144)(false -> v_145);
  wash_power = merge ck_6_1 (true -> v_143)(false -> v_146);
  v_147 =
    merge ck_6_3_1_1
      (true -> wash_state_St_5_Off)(false -> wash_state_St_5_Rinse);
  v_148 =
    merge ck_6_3_1_0
      (true -> 
        (((0 when true(ck_6_1)) when false(ck_6_2_1)) when true(ck_6_3_1_0)))
      (false -> wash_state_St_5_Spin);
  v_149 = merge ck_6_2_1 (true -> v_147)(false -> v_148);
  v_150 =
    merge ck_6_3_0_1
      (true -> wash_state_St_5_Standby)(false -> wash_state_St_5_Washing);
  v_151 =
    merge ck_6_3_0_0
      (true -> 
        (((0 when false(ck_6_1)) when false(ck_6_2_0)) when true(ck_6_3_0_0)))
      (false -> wash_state_St_5_Water_fill);
  v_152 = merge ck_6_2_0 (true -> v_150)(false -> v_151);
  wash_state = merge ck_6_1 (true -> v_149)(false -> v_152);
  v_153 = merge ck_6_3_1_1 (true -> ns_St_5_Off_1)(false -> ns_St_5_Rinse_1);
  v_154 = merge ck_6_3_1_1 (true -> ns_St_5_Off_2)(false -> ns_St_5_Rinse_2);
  v_155 = merge ck_6_3_1_1 (true -> ns_St_5_Off_3)(false -> ns_St_5_Rinse_3);
  v_156 =
    merge ck_6_3_1_0
      (true -> 
        (((true when true(ck_6_1)) when false(ck_6_2_1))
          when true(ck_6_3_1_0)))
      (false -> ns_St_5_Spin_1);
  v_157 =
    merge ck_6_3_1_0
      (true -> 
        (((true when true(ck_6_1)) when false(ck_6_2_1))
          when true(ck_6_3_1_0)))
      (false -> ns_St_5_Spin_2);
  v_158 =
    merge ck_6_3_1_0
      (true -> 
        (((true when true(ck_6_1)) when false(ck_6_2_1))
          when true(ck_6_3_1_0)))
      (false -> ns_St_5_Spin_3);
  v_159 =
    merge ck_6_3_0_1 (true -> ns_St_5_Standby_1)(false -> ns_St_5_Washing_1);
  v_160 =
    merge ck_6_3_0_1 (true -> ns_St_5_Standby_2)(false -> ns_St_5_Washing_2);
  v_161 =
    merge ck_6_3_0_1 (true -> ns_St_5_Standby_3)(false -> ns_St_5_Washing_3);
  v_162 =
    merge ck_6_3_0_0
      (true -> 
        (((true when false(ck_6_1)) when false(ck_6_2_0))
          when true(ck_6_3_0_0)))
      (false -> ns_St_5_Water_fill_1);
  v_163 =
    merge ck_6_3_0_0
      (true -> 
        (((true when false(ck_6_1)) when false(ck_6_2_0))
          when true(ck_6_3_0_0)))
      (false -> ns_St_5_Water_fill_2);
  v_164 =
    merge ck_6_3_0_0
      (true -> 
        (((true when false(ck_6_1)) when false(ck_6_2_0))
          when true(ck_6_3_0_0)))
      (false -> ns_St_5_Water_fill_3);
  v_165 = merge ck_6_2_1 (true -> v_153)(false -> v_156);
  v_166 = merge ck_6_2_1 (true -> v_154)(false -> v_157);
  v_167 = merge ck_6_2_1 (true -> v_155)(false -> v_158);
  v_168 = merge ck_6_2_0 (true -> v_159)(false -> v_162);
  v_169 = merge ck_6_2_0 (true -> v_160)(false -> v_163);
  v_170 = merge ck_6_2_0 (true -> v_161)(false -> v_164);
  ns_1 = merge ck_6_1 (true -> v_165)(false -> v_168);
  ns_2 = merge ck_6_1 (true -> v_166)(false -> v_169);
  ns_3 = merge ck_6_1 (true -> v_167)(false -> v_170);
  v_171 = merge ck_6_3_1_1 (true -> nr_St_5_Off)(false -> nr_St_5_Rinse);
  v_172 =
    merge ck_6_3_1_0
      (true -> 
        (((true when true(ck_6_1)) when false(ck_6_2_1))
          when true(ck_6_3_1_0)))
      (false -> nr_St_5_Spin);
  v_173 = merge ck_6_2_1 (true -> v_171)(false -> v_172);
  v_174 =
    merge ck_6_3_0_1 (true -> nr_St_5_Standby)(false -> nr_St_5_Washing);
  v_175 =
    merge ck_6_3_0_0
      (true -> 
        (((true when false(ck_6_1)) when false(ck_6_2_0))
          when true(ck_6_3_0_0)))
      (false -> nr_St_5_Water_fill);
  v_176 = merge ck_6_2_0 (true -> v_174)(false -> v_175);
  nr = merge ck_6_1 (true -> v_173)(false -> v_176);
  ck_6_3_1_1 = ((ck_6_3 when true(ck_6_1)) when true(ck_6_2_1));
  ck_6_3_1_0 = ((ck_6_3 when true(ck_6_1)) when false(ck_6_2_1));
  ck_6_2_1 = (ck_6_2 when true(ck_6_1));
  ck_6_3_0_1 = ((ck_6_3 when false(ck_6_1)) when true(ck_6_2_0));
  ck_6_3_0_0 = ((ck_6_3 when false(ck_6_1)) when false(ck_6_2_0));
  ck_6_2_0 = (ck_6_2 when false(ck_6_1));
  ns_St_5_Off_3_1_1 =
    ((ns_St_5_Off_3 when true(ns_St_5_Off_1)) when true(ns_St_5_Off_2_1));
  ns_St_5_Off_3_1_0 =
    ((ns_St_5_Off_3 when true(ns_St_5_Off_1)) when false(ns_St_5_Off_2_1));
  ns_St_5_Off_2_1 = (ns_St_5_Off_2 when true(ns_St_5_Off_1));
  ns_St_5_Off_3_0_1 =
    ((ns_St_5_Off_3 when false(ns_St_5_Off_1)) when true(ns_St_5_Off_2_0));
  ns_St_5_Off_3_0_0 =
    ((ns_St_5_Off_3 when false(ns_St_5_Off_1)) when false(ns_St_5_Off_2_0));
  ns_St_5_Off_2_0 = (ns_St_5_Off_2 when false(ns_St_5_Off_1));
  ns_St_5_Water_fill_3_1_1 =
    ((ns_St_5_Water_fill_3 when true(ns_St_5_Water_fill_1))
      when true(ns_St_5_Water_fill_2_1));
  ns_St_5_Water_fill_3_1_0 =
    ((ns_St_5_Water_fill_3 when true(ns_St_5_Water_fill_1))
      when false(ns_St_5_Water_fill_2_1));
  ns_St_5_Water_fill_2_1 =
    (ns_St_5_Water_fill_2 when true(ns_St_5_Water_fill_1));
  ns_St_5_Water_fill_3_0_1 =
    ((ns_St_5_Water_fill_3 when false(ns_St_5_Water_fill_1))
      when true(ns_St_5_Water_fill_2_0));
  ns_St_5_Water_fill_3_0_0 =
    ((ns_St_5_Water_fill_3 when false(ns_St_5_Water_fill_1))
      when false(ns_St_5_Water_fill_2_0));
  ns_St_5_Water_fill_2_0 =
    (ns_St_5_Water_fill_2 when false(ns_St_5_Water_fill_1));
  ns_St_5_Washing_3_1_1 =
    ((ns_St_5_Washing_3 when true(ns_St_5_Washing_1))
      when true(ns_St_5_Washing_2_1));
  ns_St_5_Washing_3_1_0 =
    ((ns_St_5_Washing_3 when true(ns_St_5_Washing_1))
      when false(ns_St_5_Washing_2_1));
  ns_St_5_Washing_2_1 = (ns_St_5_Washing_2 when true(ns_St_5_Washing_1));
  ns_St_5_Washing_3_0_1 =
    ((ns_St_5_Washing_3 when false(ns_St_5_Washing_1))
      when true(ns_St_5_Washing_2_0));
  ns_St_5_Washing_3_0_0 =
    ((ns_St_5_Washing_3 when false(ns_St_5_Washing_1))
      when false(ns_St_5_Washing_2_0));
  ns_St_5_Washing_2_0 = (ns_St_5_Washing_2 when false(ns_St_5_Washing_1));
  ns_St_5_Rinse_3_1_1 =
    ((ns_St_5_Rinse_3 when true(ns_St_5_Rinse_1))
      when true(ns_St_5_Rinse_2_1));
  ns_St_5_Rinse_3_1_0 =
    ((ns_St_5_Rinse_3 when true(ns_St_5_Rinse_1))
      when false(ns_St_5_Rinse_2_1));
  ns_St_5_Rinse_2_1 = (ns_St_5_Rinse_2 when true(ns_St_5_Rinse_1));
  ns_St_5_Rinse_3_0_1 =
    ((ns_St_5_Rinse_3 when false(ns_St_5_Rinse_1))
      when true(ns_St_5_Rinse_2_0));
  ns_St_5_Rinse_3_0_0 =
    ((ns_St_5_Rinse_3 when false(ns_St_5_Rinse_1))
      when false(ns_St_5_Rinse_2_0));
  ns_St_5_Rinse_2_0 = (ns_St_5_Rinse_2 when false(ns_St_5_Rinse_1));
  ns_St_5_Spin_3_1_1 =
    ((ns_St_5_Spin_3 when true(ns_St_5_Spin_1)) when true(ns_St_5_Spin_2_1));
  ns_St_5_Spin_3_1_0 =
    ((ns_St_5_Spin_3 when true(ns_St_5_Spin_1)) when false(ns_St_5_Spin_2_1));
  ns_St_5_Spin_2_1 = (ns_St_5_Spin_2 when true(ns_St_5_Spin_1));
  ns_St_5_Spin_3_0_1 =
    ((ns_St_5_Spin_3 when false(ns_St_5_Spin_1)) when true(ns_St_5_Spin_2_0));
  ns_St_5_Spin_3_0_0 =
    ((ns_St_5_Spin_3 when false(ns_St_5_Spin_1))
      when false(ns_St_5_Spin_2_0));
  ns_St_5_Spin_2_0 = (ns_St_5_Spin_2 when false(ns_St_5_Spin_1));
  ns_St_5_Standby_3_1_1 =
    ((ns_St_5_Standby_3 when true(ns_St_5_Standby_1))
      when true(ns_St_5_Standby_2_1));
  ns_St_5_Standby_3_1_0 =
    ((ns_St_5_Standby_3 when true(ns_St_5_Standby_1))
      when false(ns_St_5_Standby_2_1));
  ns_St_5_Standby_2_1 = (ns_St_5_Standby_2 when true(ns_St_5_Standby_1));
  ns_St_5_Standby_3_0_1 =
    ((ns_St_5_Standby_3 when false(ns_St_5_Standby_1))
      when true(ns_St_5_Standby_2_0));
  ns_St_5_Standby_3_0_0 =
    ((ns_St_5_Standby_3 when false(ns_St_5_Standby_1))
      when false(ns_St_5_Standby_2_0));
  ns_St_5_Standby_2_0 = (ns_St_5_Standby_2 when false(ns_St_5_Standby_1));
  v_177 = true fby ns_1;
  v_178 = true fby ns_2;
  v_179 = true fby ns_3;
  ck_1 = v_177;
  ck_2 = v_178;
  ck_3 = v_179;
  r_St_5_Off =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1));
  s_St_5_Off_1 =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  s_St_5_Off_2 =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  s_St_5_Off_3 =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  r_St_5_Water_fill = if v_35 then true else v_38;
  s_St_5_Water_fill_1 = if v_35 then false else v_37_1;
  s_St_5_Water_fill_2 = if v_35 then true else v_37_2;
  s_St_5_Water_fill_3 = if v_35 then true else v_37_3;
  v_38 =
    if v_36
    then true
    else (((pnr when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0));
  v_37_1 = if v_36 then false else false;
  v_37_2 = if v_36 then true else false;
  v_37_3 = if v_36 then false else false;
  v_36 =
    ((((finish when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)) &
     (((c_wash when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)));
  v_35 =
    ((((finish when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)) &
     v);
  v =
    not
    ((((c_wash when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)));
  v_37_3_1_1 = ((v_37_3 when true(v_37_1)) when true(v_37_2_1));
  v_37_3_1_0 = ((v_37_3 when true(v_37_1)) when false(v_37_2_1));
  v_37_2_1 = (v_37_2 when true(v_37_1));
  v_37_3_0_1 = ((v_37_3 when false(v_37_1)) when true(v_37_2_0));
  v_37_3_0_0 = ((v_37_3 when false(v_37_1)) when false(v_37_2_0));
  v_37_2_0 = (v_37_2 when false(v_37_1));
  r_St_5_Washing =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else (((pnr when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1));
  s_St_5_Washing_1 =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else false;
  s_St_5_Washing_2 =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else true;
  s_St_5_Washing_3 =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then false
    else false;
  r_St_5_Rinse =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1));
  s_St_5_Rinse_1 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else true;
  s_St_5_Rinse_2 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else true;
  s_St_5_Rinse_3 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else false;
  r_St_5_Spin =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else (((pnr when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0));
  s_St_5_Spin_1 =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else true;
  s_St_5_Spin_2 =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else false;
  s_St_5_Spin_3 =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else false;
  r_St_5_Standby =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then true
    else (((pnr when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1));
  s_St_5_Standby_1 =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then false
    else false;
  s_St_5_Standby_2 =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then true
    else true;
  s_St_5_Standby_3 =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then false
    else true;
  v_180 = merge ck_3_1_1 (true -> s_St_5_Off_1)(false -> s_St_5_Rinse_1);
  v_181 = merge ck_3_1_1 (true -> s_St_5_Off_2)(false -> s_St_5_Rinse_2);
  v_182 = merge ck_3_1_1 (true -> s_St_5_Off_3)(false -> s_St_5_Rinse_3);
  v_183 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_5_Spin_1);
  v_184 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_5_Spin_2);
  v_185 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_5_Spin_3);
  v_186 =
    merge ck_3_0_1 (true -> s_St_5_Standby_1)(false -> s_St_5_Washing_1);
  v_187 =
    merge ck_3_0_1 (true -> s_St_5_Standby_2)(false -> s_St_5_Washing_2);
  v_188 =
    merge ck_3_0_1 (true -> s_St_5_Standby_3)(false -> s_St_5_Washing_3);
  v_189 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_5_Water_fill_1);
  v_190 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_5_Water_fill_2);
  v_191 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_5_Water_fill_3);
  v_192 = merge ck_2_1 (true -> v_180)(false -> v_183);
  v_193 = merge ck_2_1 (true -> v_181)(false -> v_184);
  v_194 = merge ck_2_1 (true -> v_182)(false -> v_185);
  v_195 = merge ck_2_0 (true -> v_186)(false -> v_189);
  v_196 = merge ck_2_0 (true -> v_187)(false -> v_190);
  v_197 = merge ck_2_0 (true -> v_188)(false -> v_191);
  s_1 = merge ck_1 (true -> v_192)(false -> v_195);
  s_2 = merge ck_1 (true -> v_193)(false -> v_196);
  s_3 = merge ck_1 (true -> v_194)(false -> v_197);
  v_198 = merge ck_3_1_1 (true -> r_St_5_Off)(false -> r_St_5_Rinse);
  v_199 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> r_St_5_Spin);
  v_200 = merge ck_2_1 (true -> v_198)(false -> v_199);
  v_201 = merge ck_3_0_1 (true -> r_St_5_Standby)(false -> r_St_5_Washing);
  v_202 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> r_St_5_Water_fill);
  v_203 = merge ck_2_0 (true -> v_201)(false -> v_202);
  r = merge ck_1 (true -> v_200)(false -> v_203);
  ck_3_1_1 = ((ck_3 when true(ck_1)) when true(ck_2_1));
  ck_3_1_0 = ((ck_3 when true(ck_1)) when false(ck_2_1));
  ck_2_1 = (ck_2 when true(ck_1));
  ck_3_0_1 = ((ck_3 when false(ck_1)) when true(ck_2_0));
  ck_3_0_0 = ((ck_3 when false(ck_1)) when false(ck_2_0));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_5_Off_3_1_1 =
    ((s_St_5_Off_3 when true(s_St_5_Off_1)) when true(s_St_5_Off_2_1));
  s_St_5_Off_3_1_0 =
    ((s_St_5_Off_3 when true(s_St_5_Off_1)) when false(s_St_5_Off_2_1));
  s_St_5_Off_2_1 = (s_St_5_Off_2 when true(s_St_5_Off_1));
  s_St_5_Off_3_0_1 =
    ((s_St_5_Off_3 when false(s_St_5_Off_1)) when true(s_St_5_Off_2_0));
  s_St_5_Off_3_0_0 =
    ((s_St_5_Off_3 when false(s_St_5_Off_1)) when false(s_St_5_Off_2_0));
  s_St_5_Off_2_0 = (s_St_5_Off_2 when false(s_St_5_Off_1));
  s_St_5_Water_fill_3_1_1 =
    ((s_St_5_Water_fill_3 when true(s_St_5_Water_fill_1))
      when true(s_St_5_Water_fill_2_1));
  s_St_5_Water_fill_3_1_0 =
    ((s_St_5_Water_fill_3 when true(s_St_5_Water_fill_1))
      when false(s_St_5_Water_fill_2_1));
  s_St_5_Water_fill_2_1 =
    (s_St_5_Water_fill_2 when true(s_St_5_Water_fill_1));
  s_St_5_Water_fill_3_0_1 =
    ((s_St_5_Water_fill_3 when false(s_St_5_Water_fill_1))
      when true(s_St_5_Water_fill_2_0));
  s_St_5_Water_fill_3_0_0 =
    ((s_St_5_Water_fill_3 when false(s_St_5_Water_fill_1))
      when false(s_St_5_Water_fill_2_0));
  s_St_5_Water_fill_2_0 =
    (s_St_5_Water_fill_2 when false(s_St_5_Water_fill_1));
  s_St_5_Washing_3_1_1 =
    ((s_St_5_Washing_3 when true(s_St_5_Washing_1))
      when true(s_St_5_Washing_2_1));
  s_St_5_Washing_3_1_0 =
    ((s_St_5_Washing_3 when true(s_St_5_Washing_1))
      when false(s_St_5_Washing_2_1));
  s_St_5_Washing_2_1 = (s_St_5_Washing_2 when true(s_St_5_Washing_1));
  s_St_5_Washing_3_0_1 =
    ((s_St_5_Washing_3 when false(s_St_5_Washing_1))
      when true(s_St_5_Washing_2_0));
  s_St_5_Washing_3_0_0 =
    ((s_St_5_Washing_3 when false(s_St_5_Washing_1))
      when false(s_St_5_Washing_2_0));
  s_St_5_Washing_2_0 = (s_St_5_Washing_2 when false(s_St_5_Washing_1));
  s_St_5_Rinse_3_1_1 =
    ((s_St_5_Rinse_3 when true(s_St_5_Rinse_1)) when true(s_St_5_Rinse_2_1));
  s_St_5_Rinse_3_1_0 =
    ((s_St_5_Rinse_3 when true(s_St_5_Rinse_1)) when false(s_St_5_Rinse_2_1));
  s_St_5_Rinse_2_1 = (s_St_5_Rinse_2 when true(s_St_5_Rinse_1));
  s_St_5_Rinse_3_0_1 =
    ((s_St_5_Rinse_3 when false(s_St_5_Rinse_1)) when true(s_St_5_Rinse_2_0));
  s_St_5_Rinse_3_0_0 =
    ((s_St_5_Rinse_3 when false(s_St_5_Rinse_1))
      when false(s_St_5_Rinse_2_0));
  s_St_5_Rinse_2_0 = (s_St_5_Rinse_2 when false(s_St_5_Rinse_1));
  s_St_5_Spin_3_1_1 =
    ((s_St_5_Spin_3 when true(s_St_5_Spin_1)) when true(s_St_5_Spin_2_1));
  s_St_5_Spin_3_1_0 =
    ((s_St_5_Spin_3 when true(s_St_5_Spin_1)) when false(s_St_5_Spin_2_1));
  s_St_5_Spin_2_1 = (s_St_5_Spin_2 when true(s_St_5_Spin_1));
  s_St_5_Spin_3_0_1 =
    ((s_St_5_Spin_3 when false(s_St_5_Spin_1)) when true(s_St_5_Spin_2_0));
  s_St_5_Spin_3_0_0 =
    ((s_St_5_Spin_3 when false(s_St_5_Spin_1)) when false(s_St_5_Spin_2_0));
  s_St_5_Spin_2_0 = (s_St_5_Spin_2 when false(s_St_5_Spin_1));
  s_St_5_Standby_3_1_1 =
    ((s_St_5_Standby_3 when true(s_St_5_Standby_1))
      when true(s_St_5_Standby_2_1));
  s_St_5_Standby_3_1_0 =
    ((s_St_5_Standby_3 when true(s_St_5_Standby_1))
      when false(s_St_5_Standby_2_1));
  s_St_5_Standby_2_1 = (s_St_5_Standby_2 when true(s_St_5_Standby_1));
  s_St_5_Standby_3_0_1 =
    ((s_St_5_Standby_3 when false(s_St_5_Standby_1))
      when true(s_St_5_Standby_2_0));
  s_St_5_Standby_3_0_0 =
    ((s_St_5_Standby_3 when false(s_St_5_Standby_1))
      when false(s_St_5_Standby_2_0));
  s_St_5_Standby_2_0 = (s_St_5_Standby_2 when false(s_St_5_Standby_1));
  ns_3_1_1 = ((ns_3 when true(ns_1)) when true(ns_2_1));
  ns_3_1_0 = ((ns_3 when true(ns_1)) when false(ns_2_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_3_0_1 = ((ns_3 when false(ns_1)) when true(ns_2_0));
  ns_3_0_0 = ((ns_3 when false(ns_1)) when false(ns_2_0));
  ns_2_0 = (ns_2 when false(ns_1));
  s_3_1_1 = ((s_3 when true(s_1)) when true(s_2_1));
  s_3_1_0 = ((s_3 when true(s_1)) when false(s_2_1));
  s_2_1 = (s_2 when true(s_1));
  s_3_0_1 = ((s_3 when false(s_1)) when true(s_2_0));
  s_3_0_0 = ((s_3 when false(s_1)) when false(s_2_0));
  s_2_0 = (s_2 when false(s_1))
tel

node oven(finish : bool; start : bool; c_oven : bool; temp_ok : bool;
           cold : bool)
returns (oven_power : int; oven_state : int)
var v_233 : bool; v_232 : bool; v_231 : bool; v_230 : bool; v_229 : bool;
    v_228 : bool; v_227 : bool; v_226 : bool; v_225 : bool; v_224 : bool;
    v_223 : bool; v_222 : bool; v_221 : bool; v_220 : bool; v_219 : bool;
    v_218 : bool; v_217 : bool; v_216 : bool; v_215 : bool; v_214 : bool;
    v_213 : int; v_212 : int; v_211 : int; v_210 : int; v_209 : int;
    v_208 : int; v_207 : int; v_206 : int; v_205 : int; v_204 : int;
    ns_St_6_Standby_2_0 : bool; ns_St_6_Standby_3_0_0 : bool;
    ns_St_6_Standby_3_0_1 : bool; ns_St_6_Standby_2_1 : bool;
    ns_St_6_Standby_3_1_0 : bool; ns_St_6_Standby_3_1_1 : bool;
    ns_St_6_Reheat_2_0 : bool; ns_St_6_Reheat_3_0_0 : bool;
    ns_St_6_Reheat_3_0_1 : bool; ns_St_6_Reheat_2_1 : bool;
    ns_St_6_Reheat_3_1_0 : bool; ns_St_6_Reheat_3_1_1 : bool;
    ns_St_6_Maintain_2_0 : bool; ns_St_6_Maintain_3_0_0 : bool;
    ns_St_6_Maintain_3_0_1 : bool; ns_St_6_Maintain_2_1 : bool;
    ns_St_6_Maintain_3_1_0 : bool; ns_St_6_Maintain_3_1_1 : bool;
    ns_St_6_Heat_2_0 : bool; ns_St_6_Heat_3_0_0 : bool;
    ns_St_6_Heat_3_0_1 : bool; ns_St_6_Heat_2_1 : bool;
    ns_St_6_Heat_3_1_0 : bool; ns_St_6_Heat_3_1_1 : bool;
    ns_St_6_Off_2_0 : bool; ns_St_6_Off_3_0_0 : bool;
    ns_St_6_Off_3_0_1 : bool; ns_St_6_Off_2_1 : bool;
    ns_St_6_Off_3_1_0 : bool; ns_St_6_Off_3_1_1 : bool; ck_7_2_0 : bool;
    ck_7_3_0_0 : bool; ck_7_3_0_1 : bool; ck_7_2_1 : bool; ck_7_3_1_0 : bool;
    ck_7_3_1_1 : bool; nr_St_6_Standby : bool; ns_St_6_Standby_3 : bool;
    ns_St_6_Standby_2 : bool; ns_St_6_Standby_1 : bool;
    oven_state_St_6_Standby : int; oven_power_St_6_Standby : int;
    nr_St_6_Reheat : bool; ns_St_6_Reheat_3 : bool; ns_St_6_Reheat_2 : bool;
    ns_St_6_Reheat_1 : bool; oven_state_St_6_Reheat : int;
    oven_power_St_6_Reheat : int; nr_St_6_Maintain : bool;
    ns_St_6_Maintain_3 : bool; ns_St_6_Maintain_2 : bool;
    ns_St_6_Maintain_1 : bool; oven_state_St_6_Maintain : int;
    oven_power_St_6_Maintain : int; nr_St_6_Heat : bool;
    ns_St_6_Heat_3 : bool; ns_St_6_Heat_2 : bool; ns_St_6_Heat_1 : bool;
    oven_state_St_6_Heat : int; oven_power_St_6_Heat : int;
    nr_St_6_Off : bool; ns_St_6_Off_3 : bool; ns_St_6_Off_2 : bool;
    ns_St_6_Off_1 : bool; oven_state_St_6_Off : int;
    oven_power_St_6_Off : int; ck_7_3 : bool; ck_7_2 : bool; ck_7_1 : bool;
    v_48_2_0 : bool; v_48_3_0_0 : bool; v_48_3_0_1 : bool; v_48_2_1 : bool;
    v_48_3_1_0 : bool; v_48_3_1_1 : bool; v_49 : bool; v_48_3 : bool;
    v_48_2 : bool; v_48_1 : bool; v_47 : bool; v_46 : bool; v_45 : bool;
    v_43_2_0 : bool; v_43_3_0_0 : bool; v_43_3_0_1 : bool; v_43_2_1 : bool;
    v_43_3_1_0 : bool; v_43_3_1_1 : bool; v_44 : bool; v_43_3 : bool;
    v_43_2 : bool; v_43_1 : bool; v_41_2_0 : bool; v_41_3_0_0 : bool;
    v_41_3_0_1 : bool; v_41_2_1 : bool; v_41_3_1_0 : bool; v_41_3_1_1 : bool;
    v_42 : bool; v_41_3 : bool; v_41_2 : bool; v_41_1 : bool; v_40 : bool;
    v_2_0 : bool; v_3_0_0 : bool; v_3_0_1 : bool; v_2_1 : bool;
    v_3_1_0 : bool; v_3_1_1 : bool; v_39 : bool; v_3 : bool; v_2 : bool;
    v_1 : bool; v_256 : bool; v_255 : bool; v_254 : bool; v_253 : bool;
    v_252 : bool; v_251 : bool; v_250 : bool; v_249 : bool; v_248 : bool;
    v_247 : bool; v_246 : bool; v_245 : bool; v_244 : bool; v_243 : bool;
    v_242 : bool; v_241 : bool; v_240 : bool; v_239 : bool; v_238 : bool;
    v_237 : bool; v_236 : bool; v_235 : bool; v_234 : bool;
    s_St_6_Standby_2_0 : bool; s_St_6_Standby_3_0_0 : bool;
    s_St_6_Standby_3_0_1 : bool; s_St_6_Standby_2_1 : bool;
    s_St_6_Standby_3_1_0 : bool; s_St_6_Standby_3_1_1 : bool;
    s_St_6_Reheat_2_0 : bool; s_St_6_Reheat_3_0_0 : bool;
    s_St_6_Reheat_3_0_1 : bool; s_St_6_Reheat_2_1 : bool;
    s_St_6_Reheat_3_1_0 : bool; s_St_6_Reheat_3_1_1 : bool;
    s_St_6_Maintain_2_0 : bool; s_St_6_Maintain_3_0_0 : bool;
    s_St_6_Maintain_3_0_1 : bool; s_St_6_Maintain_2_1 : bool;
    s_St_6_Maintain_3_1_0 : bool; s_St_6_Maintain_3_1_1 : bool;
    s_St_6_Heat_2_0 : bool; s_St_6_Heat_3_0_0 : bool;
    s_St_6_Heat_3_0_1 : bool; s_St_6_Heat_2_1 : bool;
    s_St_6_Heat_3_1_0 : bool; s_St_6_Heat_3_1_1 : bool;
    s_St_6_Off_2_0 : bool; s_St_6_Off_3_0_0 : bool; s_St_6_Off_3_0_1 : bool;
    s_St_6_Off_2_1 : bool; s_St_6_Off_3_1_0 : bool; s_St_6_Off_3_1_1 : bool;
    ck_2_0 : bool; ck_3_0_0 : bool; ck_3_0_1 : bool; ck_2_1 : bool;
    ck_3_1_0 : bool; ck_3_1_1 : bool; r_St_6_Standby : bool;
    s_St_6_Standby_3 : bool; s_St_6_Standby_2 : bool;
    s_St_6_Standby_1 : bool; r_St_6_Reheat : bool; s_St_6_Reheat_3 : bool;
    s_St_6_Reheat_2 : bool; s_St_6_Reheat_1 : bool; r_St_6_Maintain : bool;
    s_St_6_Maintain_3 : bool; s_St_6_Maintain_2 : bool;
    s_St_6_Maintain_1 : bool; r_St_6_Heat : bool; s_St_6_Heat_3 : bool;
    s_St_6_Heat_2 : bool; s_St_6_Heat_1 : bool; r_St_6_Off : bool;
    s_St_6_Off_3 : bool; s_St_6_Off_2 : bool; s_St_6_Off_1 : bool;
    ck_3 : bool; ck_2 : bool; ck_1 : bool; s_2_0 : bool; s_3_0_0 : bool;
    s_3_0_1 : bool; s_2_1 : bool; s_3_1_0 : bool; s_3_1_1 : bool;
    ns_2_0 : bool; ns_3_0_0 : bool; ns_3_0_1 : bool; ns_2_1 : bool;
    ns_3_1_0 : bool; ns_3_1_1 : bool; s_3 : bool; s_2 : bool; s_1 : bool;
    ns_3 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_7_1 = s_1;
  ck_7_2 = s_2;
  ck_7_3 = s_3;
  oven_power_St_6_Off = 0;
  oven_state_St_6_Off = 0;
  nr_St_6_Off = false;
  ns_St_6_Off_1 = true;
  ns_St_6_Off_2 = false;
  ns_St_6_Off_3 = false;
  oven_power_St_6_Heat = 1500;
  oven_state_St_6_Heat = 1;
  nr_St_6_Heat = false;
  ns_St_6_Heat_1 = true;
  ns_St_6_Heat_2 = true;
  ns_St_6_Heat_3 = true;
  oven_power_St_6_Maintain = 300;
  oven_state_St_6_Maintain = 2;
  nr_St_6_Maintain = false;
  ns_St_6_Maintain_1 = true;
  ns_St_6_Maintain_2 = true;
  ns_St_6_Maintain_3 = false;
  oven_power_St_6_Reheat = 1000;
  oven_state_St_6_Reheat = 3;
  nr_St_6_Reheat = false;
  ns_St_6_Reheat_1 = false;
  ns_St_6_Reheat_2 = false;
  ns_St_6_Reheat_3 = true;
  oven_power_St_6_Standby = 0;
  oven_state_St_6_Standby = 4;
  nr_St_6_Standby = false;
  ns_St_6_Standby_1 = false;
  ns_St_6_Standby_2 = false;
  ns_St_6_Standby_3 = false;
  v_204 =
    merge ck_7_3_1_1
      (true -> oven_power_St_6_Heat)(false -> oven_power_St_6_Maintain);
  v_205 =
    merge ck_7_3_1_0
      (true -> 
        (((0 when true(ck_7_1)) when false(ck_7_2_1)) when true(ck_7_3_1_0)))
      (false -> oven_power_St_6_Off);
  v_206 = merge ck_7_2_1 (true -> v_204)(false -> v_205);
  v_207 =
    merge ck_7_3_0_0
      (true -> oven_power_St_6_Reheat)(false -> oven_power_St_6_Standby);
  v_208 =
    merge ck_7_2_0
      (true -> ((0 when false(ck_7_1)) when true(ck_7_2_0)))(false -> v_207);
  oven_power = merge ck_7_1 (true -> v_206)(false -> v_208);
  v_209 =
    merge ck_7_3_1_1
      (true -> oven_state_St_6_Heat)(false -> oven_state_St_6_Maintain);
  v_210 =
    merge ck_7_3_1_0
      (true -> 
        (((0 when true(ck_7_1)) when false(ck_7_2_1)) when true(ck_7_3_1_0)))
      (false -> oven_state_St_6_Off);
  v_211 = merge ck_7_2_1 (true -> v_209)(false -> v_210);
  v_212 =
    merge ck_7_3_0_0
      (true -> oven_state_St_6_Reheat)(false -> oven_state_St_6_Standby);
  v_213 =
    merge ck_7_2_0
      (true -> ((0 when false(ck_7_1)) when true(ck_7_2_0)))(false -> v_212);
  oven_state = merge ck_7_1 (true -> v_211)(false -> v_213);
  v_214 =
    merge ck_7_3_1_1 (true -> ns_St_6_Heat_1)(false -> ns_St_6_Maintain_1);
  v_215 =
    merge ck_7_3_1_1 (true -> ns_St_6_Heat_2)(false -> ns_St_6_Maintain_2);
  v_216 =
    merge ck_7_3_1_1 (true -> ns_St_6_Heat_3)(false -> ns_St_6_Maintain_3);
  v_217 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> ns_St_6_Off_1);
  v_218 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> ns_St_6_Off_2);
  v_219 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> ns_St_6_Off_3);
  v_220 =
    merge ck_7_3_0_0 (true -> ns_St_6_Reheat_1)(false -> ns_St_6_Standby_1);
  v_221 =
    merge ck_7_3_0_0 (true -> ns_St_6_Reheat_2)(false -> ns_St_6_Standby_2);
  v_222 =
    merge ck_7_3_0_0 (true -> ns_St_6_Reheat_3)(false -> ns_St_6_Standby_3);
  v_223 = merge ck_7_2_1 (true -> v_214)(false -> v_217);
  v_224 = merge ck_7_2_1 (true -> v_215)(false -> v_218);
  v_225 = merge ck_7_2_1 (true -> v_216)(false -> v_219);
  v_226 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> v_220);
  v_227 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> v_221);
  v_228 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> v_222);
  ns_1 = merge ck_7_1 (true -> v_223)(false -> v_226);
  ns_2 = merge ck_7_1 (true -> v_224)(false -> v_227);
  ns_3 = merge ck_7_1 (true -> v_225)(false -> v_228);
  v_229 = merge ck_7_3_1_1 (true -> nr_St_6_Heat)(false -> nr_St_6_Maintain);
  v_230 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> nr_St_6_Off);
  v_231 = merge ck_7_2_1 (true -> v_229)(false -> v_230);
  v_232 = merge ck_7_3_0_0 (true -> nr_St_6_Reheat)(false -> nr_St_6_Standby);
  v_233 =
    merge ck_7_2_0
      (true -> ((true when false(ck_7_1)) when true(ck_7_2_0)))
      (false -> v_232);
  nr = merge ck_7_1 (true -> v_231)(false -> v_233);
  ck_7_3_1_1 = ((ck_7_3 when true(ck_7_1)) when true(ck_7_2_1));
  ck_7_3_1_0 = ((ck_7_3 when true(ck_7_1)) when false(ck_7_2_1));
  ck_7_2_1 = (ck_7_2 when true(ck_7_1));
  ck_7_3_0_1 = ((ck_7_3 when false(ck_7_1)) when true(ck_7_2_0));
  ck_7_3_0_0 = ((ck_7_3 when false(ck_7_1)) when false(ck_7_2_0));
  ck_7_2_0 = (ck_7_2 when false(ck_7_1));
  ns_St_6_Off_3_1_1 =
    ((ns_St_6_Off_3 when true(ns_St_6_Off_1)) when true(ns_St_6_Off_2_1));
  ns_St_6_Off_3_1_0 =
    ((ns_St_6_Off_3 when true(ns_St_6_Off_1)) when false(ns_St_6_Off_2_1));
  ns_St_6_Off_2_1 = (ns_St_6_Off_2 when true(ns_St_6_Off_1));
  ns_St_6_Off_3_0_1 =
    ((ns_St_6_Off_3 when false(ns_St_6_Off_1)) when true(ns_St_6_Off_2_0));
  ns_St_6_Off_3_0_0 =
    ((ns_St_6_Off_3 when false(ns_St_6_Off_1)) when false(ns_St_6_Off_2_0));
  ns_St_6_Off_2_0 = (ns_St_6_Off_2 when false(ns_St_6_Off_1));
  ns_St_6_Heat_3_1_1 =
    ((ns_St_6_Heat_3 when true(ns_St_6_Heat_1)) when true(ns_St_6_Heat_2_1));
  ns_St_6_Heat_3_1_0 =
    ((ns_St_6_Heat_3 when true(ns_St_6_Heat_1)) when false(ns_St_6_Heat_2_1));
  ns_St_6_Heat_2_1 = (ns_St_6_Heat_2 when true(ns_St_6_Heat_1));
  ns_St_6_Heat_3_0_1 =
    ((ns_St_6_Heat_3 when false(ns_St_6_Heat_1)) when true(ns_St_6_Heat_2_0));
  ns_St_6_Heat_3_0_0 =
    ((ns_St_6_Heat_3 when false(ns_St_6_Heat_1))
      when false(ns_St_6_Heat_2_0));
  ns_St_6_Heat_2_0 = (ns_St_6_Heat_2 when false(ns_St_6_Heat_1));
  ns_St_6_Maintain_3_1_1 =
    ((ns_St_6_Maintain_3 when true(ns_St_6_Maintain_1))
      when true(ns_St_6_Maintain_2_1));
  ns_St_6_Maintain_3_1_0 =
    ((ns_St_6_Maintain_3 when true(ns_St_6_Maintain_1))
      when false(ns_St_6_Maintain_2_1));
  ns_St_6_Maintain_2_1 = (ns_St_6_Maintain_2 when true(ns_St_6_Maintain_1));
  ns_St_6_Maintain_3_0_1 =
    ((ns_St_6_Maintain_3 when false(ns_St_6_Maintain_1))
      when true(ns_St_6_Maintain_2_0));
  ns_St_6_Maintain_3_0_0 =
    ((ns_St_6_Maintain_3 when false(ns_St_6_Maintain_1))
      when false(ns_St_6_Maintain_2_0));
  ns_St_6_Maintain_2_0 = (ns_St_6_Maintain_2 when false(ns_St_6_Maintain_1));
  ns_St_6_Reheat_3_1_1 =
    ((ns_St_6_Reheat_3 when true(ns_St_6_Reheat_1))
      when true(ns_St_6_Reheat_2_1));
  ns_St_6_Reheat_3_1_0 =
    ((ns_St_6_Reheat_3 when true(ns_St_6_Reheat_1))
      when false(ns_St_6_Reheat_2_1));
  ns_St_6_Reheat_2_1 = (ns_St_6_Reheat_2 when true(ns_St_6_Reheat_1));
  ns_St_6_Reheat_3_0_1 =
    ((ns_St_6_Reheat_3 when false(ns_St_6_Reheat_1))
      when true(ns_St_6_Reheat_2_0));
  ns_St_6_Reheat_3_0_0 =
    ((ns_St_6_Reheat_3 when false(ns_St_6_Reheat_1))
      when false(ns_St_6_Reheat_2_0));
  ns_St_6_Reheat_2_0 = (ns_St_6_Reheat_2 when false(ns_St_6_Reheat_1));
  ns_St_6_Standby_3_1_1 =
    ((ns_St_6_Standby_3 when true(ns_St_6_Standby_1))
      when true(ns_St_6_Standby_2_1));
  ns_St_6_Standby_3_1_0 =
    ((ns_St_6_Standby_3 when true(ns_St_6_Standby_1))
      when false(ns_St_6_Standby_2_1));
  ns_St_6_Standby_2_1 = (ns_St_6_Standby_2 when true(ns_St_6_Standby_1));
  ns_St_6_Standby_3_0_1 =
    ((ns_St_6_Standby_3 when false(ns_St_6_Standby_1))
      when true(ns_St_6_Standby_2_0));
  ns_St_6_Standby_3_0_0 =
    ((ns_St_6_Standby_3 when false(ns_St_6_Standby_1))
      when false(ns_St_6_Standby_2_0));
  ns_St_6_Standby_2_0 = (ns_St_6_Standby_2 when false(ns_St_6_Standby_1));
  v_234 = true fby ns_1;
  v_235 = false fby ns_2;
  v_236 = false fby ns_3;
  ck_1 = v_234;
  ck_2 = v_235;
  ck_3 = v_236;
  r_St_6_Off = if v_45 then true else v_49;
  s_St_6_Off_1 = if v_45 then true else v_48_1;
  s_St_6_Off_2 = if v_45 then true else v_48_2;
  s_St_6_Off_3 = if v_45 then true else v_48_3;
  v_49 =
    if v_47
    then true
    else (((pnr when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0));
  v_48_1 = if v_47 then false else true;
  v_48_2 = if v_47 then false else false;
  v_48_3 = if v_47 then false else false;
  v_47 =
    ((((start when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)) &
     v_46);
  v_46 =
    not((((c_oven when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)));
  v_45 =
    ((((start when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)) &
     (((c_oven when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)));
  v_48_3_1_1 = ((v_48_3 when true(v_48_1)) when true(v_48_2_1));
  v_48_3_1_0 = ((v_48_3 when true(v_48_1)) when false(v_48_2_1));
  v_48_2_1 = (v_48_2 when true(v_48_1));
  v_48_3_0_1 = ((v_48_3 when false(v_48_1)) when true(v_48_2_0));
  v_48_3_0_0 = ((v_48_3 when false(v_48_1)) when false(v_48_2_0));
  v_48_2_0 = (v_48_2 when false(v_48_1));
  r_St_6_Heat =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else v_44;
  s_St_6_Heat_1 =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else v_43_1;
  s_St_6_Heat_2 =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else v_43_2;
  s_St_6_Heat_3 =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else v_43_3;
  v_44 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1));
  v_43_1 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else true;
  v_43_2 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  v_43_3 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  v_43_3_1_1 = ((v_43_3 when true(v_43_1)) when true(v_43_2_1));
  v_43_3_1_0 = ((v_43_3 when true(v_43_1)) when false(v_43_2_1));
  v_43_2_1 = (v_43_2 when true(v_43_1));
  v_43_3_0_1 = ((v_43_3 when false(v_43_1)) when true(v_43_2_0));
  v_43_3_0_0 = ((v_43_3 when false(v_43_1)) when false(v_43_2_0));
  v_43_2_0 = (v_43_2 when false(v_43_1));
  r_St_6_Maintain = if v_40 then true else v_42;
  s_St_6_Maintain_1 = if v_40 then false else v_41_1;
  s_St_6_Maintain_2 = if v_40 then false else v_41_2;
  s_St_6_Maintain_3 = if v_40 then true else v_41_3;
  v_42 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1));
  v_41_1 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else true;
  v_41_2 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else true;
  v_41_3 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else false;
  v_40 =
    ((((cold when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1)) &
     (((c_oven when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1)));
  v_41_3_1_1 = ((v_41_3 when true(v_41_1)) when true(v_41_2_1));
  v_41_3_1_0 = ((v_41_3 when true(v_41_1)) when false(v_41_2_1));
  v_41_2_1 = (v_41_2 when true(v_41_1));
  v_41_3_0_1 = ((v_41_3 when false(v_41_1)) when true(v_41_2_0));
  v_41_3_0_0 = ((v_41_3 when false(v_41_1)) when false(v_41_2_0));
  v_41_2_0 = (v_41_2 when false(v_41_1));
  r_St_6_Reheat =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else v_39;
  s_St_6_Reheat_1 =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else v_1;
  s_St_6_Reheat_2 =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else v_2;
  s_St_6_Reheat_3 =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then false
    else v_3;
  v_39 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else (((pnr when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0));
  v_1 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else false;
  v_2 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then false
    else false;
  v_3 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then false
    else true;
  v_3_1_1 = ((v_3 when true(v_1)) when true(v_2_1));
  v_3_1_0 = ((v_3 when true(v_1)) when false(v_2_1));
  v_2_1 = (v_2 when true(v_1));
  v_3_0_1 = ((v_3 when false(v_1)) when true(v_2_0));
  v_3_0_0 = ((v_3 when false(v_1)) when false(v_2_0));
  v_2_0 = (v_2 when false(v_1));
  r_St_6_Standby =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else (((pnr when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0));
  s_St_6_Standby_1 =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else false;
  s_St_6_Standby_2 =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else false;
  s_St_6_Standby_3 =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else false;
  v_237 = merge ck_3_1_1 (true -> s_St_6_Heat_1)(false -> s_St_6_Maintain_1);
  v_238 = merge ck_3_1_1 (true -> s_St_6_Heat_2)(false -> s_St_6_Maintain_2);
  v_239 = merge ck_3_1_1 (true -> s_St_6_Heat_3)(false -> s_St_6_Maintain_3);
  v_240 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_6_Off_1);
  v_241 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_6_Off_2);
  v_242 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_6_Off_3);
  v_243 = merge ck_3_0_0 (true -> s_St_6_Reheat_1)(false -> s_St_6_Standby_1);
  v_244 = merge ck_3_0_0 (true -> s_St_6_Reheat_2)(false -> s_St_6_Standby_2);
  v_245 = merge ck_3_0_0 (true -> s_St_6_Reheat_3)(false -> s_St_6_Standby_3);
  v_246 = merge ck_2_1 (true -> v_237)(false -> v_240);
  v_247 = merge ck_2_1 (true -> v_238)(false -> v_241);
  v_248 = merge ck_2_1 (true -> v_239)(false -> v_242);
  v_249 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_243);
  v_250 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_244);
  v_251 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_245);
  s_1 = merge ck_1 (true -> v_246)(false -> v_249);
  s_2 = merge ck_1 (true -> v_247)(false -> v_250);
  s_3 = merge ck_1 (true -> v_248)(false -> v_251);
  v_252 = merge ck_3_1_1 (true -> r_St_6_Heat)(false -> r_St_6_Maintain);
  v_253 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> r_St_6_Off);
  v_254 = merge ck_2_1 (true -> v_252)(false -> v_253);
  v_255 = merge ck_3_0_0 (true -> r_St_6_Reheat)(false -> r_St_6_Standby);
  v_256 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_255);
  r = merge ck_1 (true -> v_254)(false -> v_256);
  ck_3_1_1 = ((ck_3 when true(ck_1)) when true(ck_2_1));
  ck_3_1_0 = ((ck_3 when true(ck_1)) when false(ck_2_1));
  ck_2_1 = (ck_2 when true(ck_1));
  ck_3_0_1 = ((ck_3 when false(ck_1)) when true(ck_2_0));
  ck_3_0_0 = ((ck_3 when false(ck_1)) when false(ck_2_0));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_6_Off_3_1_1 =
    ((s_St_6_Off_3 when true(s_St_6_Off_1)) when true(s_St_6_Off_2_1));
  s_St_6_Off_3_1_0 =
    ((s_St_6_Off_3 when true(s_St_6_Off_1)) when false(s_St_6_Off_2_1));
  s_St_6_Off_2_1 = (s_St_6_Off_2 when true(s_St_6_Off_1));
  s_St_6_Off_3_0_1 =
    ((s_St_6_Off_3 when false(s_St_6_Off_1)) when true(s_St_6_Off_2_0));
  s_St_6_Off_3_0_0 =
    ((s_St_6_Off_3 when false(s_St_6_Off_1)) when false(s_St_6_Off_2_0));
  s_St_6_Off_2_0 = (s_St_6_Off_2 when false(s_St_6_Off_1));
  s_St_6_Heat_3_1_1 =
    ((s_St_6_Heat_3 when true(s_St_6_Heat_1)) when true(s_St_6_Heat_2_1));
  s_St_6_Heat_3_1_0 =
    ((s_St_6_Heat_3 when true(s_St_6_Heat_1)) when false(s_St_6_Heat_2_1));
  s_St_6_Heat_2_1 = (s_St_6_Heat_2 when true(s_St_6_Heat_1));
  s_St_6_Heat_3_0_1 =
    ((s_St_6_Heat_3 when false(s_St_6_Heat_1)) when true(s_St_6_Heat_2_0));
  s_St_6_Heat_3_0_0 =
    ((s_St_6_Heat_3 when false(s_St_6_Heat_1)) when false(s_St_6_Heat_2_0));
  s_St_6_Heat_2_0 = (s_St_6_Heat_2 when false(s_St_6_Heat_1));
  s_St_6_Maintain_3_1_1 =
    ((s_St_6_Maintain_3 when true(s_St_6_Maintain_1))
      when true(s_St_6_Maintain_2_1));
  s_St_6_Maintain_3_1_0 =
    ((s_St_6_Maintain_3 when true(s_St_6_Maintain_1))
      when false(s_St_6_Maintain_2_1));
  s_St_6_Maintain_2_1 = (s_St_6_Maintain_2 when true(s_St_6_Maintain_1));
  s_St_6_Maintain_3_0_1 =
    ((s_St_6_Maintain_3 when false(s_St_6_Maintain_1))
      when true(s_St_6_Maintain_2_0));
  s_St_6_Maintain_3_0_0 =
    ((s_St_6_Maintain_3 when false(s_St_6_Maintain_1))
      when false(s_St_6_Maintain_2_0));
  s_St_6_Maintain_2_0 = (s_St_6_Maintain_2 when false(s_St_6_Maintain_1));
  s_St_6_Reheat_3_1_1 =
    ((s_St_6_Reheat_3 when true(s_St_6_Reheat_1))
      when true(s_St_6_Reheat_2_1));
  s_St_6_Reheat_3_1_0 =
    ((s_St_6_Reheat_3 when true(s_St_6_Reheat_1))
      when false(s_St_6_Reheat_2_1));
  s_St_6_Reheat_2_1 = (s_St_6_Reheat_2 when true(s_St_6_Reheat_1));
  s_St_6_Reheat_3_0_1 =
    ((s_St_6_Reheat_3 when false(s_St_6_Reheat_1))
      when true(s_St_6_Reheat_2_0));
  s_St_6_Reheat_3_0_0 =
    ((s_St_6_Reheat_3 when false(s_St_6_Reheat_1))
      when false(s_St_6_Reheat_2_0));
  s_St_6_Reheat_2_0 = (s_St_6_Reheat_2 when false(s_St_6_Reheat_1));
  s_St_6_Standby_3_1_1 =
    ((s_St_6_Standby_3 when true(s_St_6_Standby_1))
      when true(s_St_6_Standby_2_1));
  s_St_6_Standby_3_1_0 =
    ((s_St_6_Standby_3 when true(s_St_6_Standby_1))
      when false(s_St_6_Standby_2_1));
  s_St_6_Standby_2_1 = (s_St_6_Standby_2 when true(s_St_6_Standby_1));
  s_St_6_Standby_3_0_1 =
    ((s_St_6_Standby_3 when false(s_St_6_Standby_1))
      when true(s_St_6_Standby_2_0));
  s_St_6_Standby_3_0_0 =
    ((s_St_6_Standby_3 when false(s_St_6_Standby_1))
      when false(s_St_6_Standby_2_0));
  s_St_6_Standby_2_0 = (s_St_6_Standby_2 when false(s_St_6_Standby_1));
  ns_3_1_1 = ((ns_3 when true(ns_1)) when true(ns_2_1));
  ns_3_1_0 = ((ns_3 when true(ns_1)) when false(ns_2_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_3_0_1 = ((ns_3 when false(ns_1)) when true(ns_2_0));
  ns_3_0_0 = ((ns_3 when false(ns_1)) when false(ns_2_0));
  ns_2_0 = (ns_2 when false(ns_1));
  s_3_1_1 = ((s_3 when true(s_1)) when true(s_2_1));
  s_3_1_0 = ((s_3 when true(s_1)) when false(s_2_1));
  s_2_1 = (s_2 when true(s_1));
  s_3_0_1 = ((s_3 when false(s_1)) when true(s_2_0));
  s_3_0_0 = ((s_3 when false(s_1)) when false(s_2_0));
  s_2_0 = (s_2 when false(s_1))
tel

node controller(c_window : bool; c_door : bool; push_porta : bool;
                 push_janela : bool; rad_up1 : bool; rad_down1 : bool;
                 rad_up2 : bool; rad_down2 : bool; presence : bool;
                 light_switch : bool; tv_switch : bool)
returns (door_open : bool; window_open : bool; lamp_on : bool; tv_on : bool;
          occupied : bool; rad_power : int; rad_state : int)
contract
  var rule4 : bool; rule3 : bool; rule2 : bool; rule1 : bool; v : bool;
      v_50 : bool; v_51 : bool; v_52 : bool; v_53 : bool; v_54 : bool;
      v_55 : bool; v_56 : bool; v_57 : bool; v_58 : bool; v_59 : bool;
      v_60 : bool; v_61 : bool; v_62 : bool;
  let
    v = (lamp_on or tv_on);
    v_50 = not(v);
    v_51 = (rad_state <= 1);
    v_52 = (v_50 & v_51);
    rule4 = (occupied or v_52);
    v_53 = (door_open or window_open);
    v_54 = not(v_53);
    v_55 = (rad_state <= 1);
    rule3 = (v_54 or v_55);
    v_56 = not(door_open);
    v_57 = not(window_open);
    v_58 = (v_56 & v_57);
    rule2 = (occupied or v_58);
    v_59 = not(occupied);
    v_60 = (v_59 or tv_on);
    rule1 = (v_60 or lamp_on);
    v_61 = (rule1 & rule3);
    v_62 = (v_61 & rule4)
  tel
  assume true@ enforce v_62]
                 with (c_tv2 : bool; c_tv1 : bool; c_light2 : bool;
                        c_light1 : bool; rad_c2 : bool; rad_c1 : bool)
                 var nr_St_7_Ocupied : bool; ns_St_7_Ocupied_1 : bool;
                     occupied_1_St_7_Ocupied : bool; nr_St_7_Empty : bool;
                     ns_St_7_Empty_1 : bool; occupied_1_St_7_Empty : bool;
                     ck_18_1 : bool; v_102 : bool; r_St_7_Ocupied : bool;
                     s_St_7_Ocupied_1 : bool; r_St_7_Empty : bool;
                     s_St_7_Empty_1 : bool; ck_17_1 : bool;
                     nr_1_St_8_Ligado : bool; ns_1_St_8_Ligado_1 : bool;
                     source_on_1_St_8_Ligado : bool;
                     nr_1_St_8_Desligado : bool;
                     ns_1_St_8_Desligado_1 : bool;
                     source_on_1_St_8_Desligado : bool; ck_16_1 : bool;
                     v_101 : bool; v_100 : bool; v_99 : bool; v_98 : bool;
                     v_97 : bool; v_96 : bool; r_1_St_8_Ligado : bool;
                     s_1_St_8_Ligado_1 : bool; r_1_St_8_Desligado : bool;
                     s_1_St_8_Desligado_1 : bool; ck_15_1 : bool;
                     nr_2_St_9_Ligado : bool; ns_2_St_9_Ligado_1 : bool;
                     source_on_St_9_Ligado : bool;
                     nr_2_St_9_Desligado : bool;
                     ns_2_St_9_Desligado_1 : bool;
                     source_on_St_9_Desligado : bool; ck_14_1 : bool;
                     v_95 : bool; v_94 : bool; v_93 : bool; v_92 : bool;
                     v_91 : bool; v_90 : bool; r_2_St_9_Ligado : bool;
                     s_2_St_9_Ligado_1 : bool; r_2_St_9_Desligado : bool;
                     s_2_St_9_Desligado_1 : bool; ck_13_1 : bool;
                     nr_3_St_10_Open : bool; ns_3_St_10_Open_1 : bool;
                     door_open_2_St_10_Open : bool; nr_3_St_10_Closed : bool;
                     ns_3_St_10_Closed_1 : bool;
                     door_open_2_St_10_Closed : bool; ck_12_1 : bool;
                     v_89 : bool; v_88 : bool; v_87 : bool;
                     r_3_St_10_Open : bool; s_3_St_10_Open_1 : bool;
                     r_3_St_10_Closed : bool; s_3_St_10_Closed_1 : bool;
                     ck_11_1 : bool; nr_4_St_11_Open : bool;
                     ns_4_St_11_Open_1 : bool; door_open_1_St_11_Open : bool;
                     nr_4_St_11_Closed : bool; ns_4_St_11_Closed_1 : bool;
                     door_open_1_St_11_Closed : bool; ck_10_1 : bool;
                     v_86 : bool; v_85 : bool; v_84 : bool;
                     r_4_St_11_Open : bool; s_4_St_11_Open_1 : bool;
                     r_4_St_11_Closed : bool; s_4_St_11_Closed_1 : bool;
                     ck_9_1 : bool; v_266 : bool; v_265 : bool; v_264 : bool;
                     v_263 : bool; v_262 : bool; v_261 : bool; v_260 : int;
                     v_259 : int; v_258 : int; v_257 : int;
                     ns_5_St_12_High_2_0 : bool; ns_5_St_12_High_2_1 : bool;
                     ns_5_St_12_Eco_2_0 : bool; ns_5_St_12_Eco_2_1 : bool;
                     ns_5_St_12_Frostprotection_2_0 : bool;
                     ns_5_St_12_Frostprotection_2_1 : bool;
                     ns_5_St_12_Off_2_0 : bool; ns_5_St_12_Off_2_1 : bool;
                     ck_8_2_0 : bool; ck_8_2_1 : bool;
                     nr_5_St_12_High : bool; ns_5_St_12_High_2 : bool;
                     ns_5_St_12_High_1 : bool; rad_state_1_St_12_High : int;
                     rad_power_1_St_12_High : int; nr_5_St_12_Eco : bool;
                     ns_5_St_12_Eco_2 : bool; ns_5_St_12_Eco_1 : bool;
                     rad_state_1_St_12_Eco : int;
                     rad_power_1_St_12_Eco : int;
                     nr_5_St_12_Frostprotection : bool;
                     ns_5_St_12_Frostprotection_2 : bool;
                     ns_5_St_12_Frostprotection_1 : bool;
                     rad_state_1_St_12_Frostprotection : int;
                     rad_power_1_St_12_Frostprotection : int;
                     nr_5_St_12_Off : bool; ns_5_St_12_Off_2 : bool;
                     ns_5_St_12_Off_1 : bool; rad_state_1_St_12_Off : int;
                     rad_power_1_St_12_Off : int; ck_8_2 : bool;
                     ck_8_1 : bool; v_83 : bool; v_82 : bool;
                     v_80_2_0 : bool; v_80_2_1 : bool; v_78_2_0 : bool;
                     v_78_2_1 : bool; v_81 : bool; v_80_2 : bool;
                     v_80_1 : bool; v_79 : bool; v_78_2 : bool;
                     v_78_1 : bool; v_77 : bool; v_76 : bool; v_75 : bool;
                     v_74 : bool; v_72_2_0 : bool; v_72_2_1 : bool;
                     v_73 : bool; v_72_2 : bool; v_72_1 : bool; v_71 : bool;
                     v_70 : bool; v_69 : bool; v_67_2_0 : bool;
                     v_67_2_1 : bool; v_68 : bool; v_67_2 : bool;
                     v_67_1 : bool; v_66 : bool; v_65 : bool; v_64 : bool;
                     v_63 : bool; v_274 : bool; v_273 : bool; v_272 : bool;
                     v_271 : bool; v_270 : bool; v_269 : bool; v_268 : bool;
                     v_267 : bool; s_5_St_12_High_2_0 : bool;
                     s_5_St_12_High_2_1 : bool; s_5_St_12_Eco_2_0 : bool;
                     s_5_St_12_Eco_2_1 : bool;
                     s_5_St_12_Frostprotection_2_0 : bool;
                     s_5_St_12_Frostprotection_2_1 : bool;
                     s_5_St_12_Off_2_0 : bool; s_5_St_12_Off_2_1 : bool;
                     ck_2_0 : bool; ck_2_1 : bool; r_5_St_12_High : bool;
                     s_5_St_12_High_2 : bool; s_5_St_12_High_1 : bool;
                     r_5_St_12_Eco : bool; s_5_St_12_Eco_2 : bool;
                     s_5_St_12_Eco_1 : bool;
                     r_5_St_12_Frostprotection : bool;
                     s_5_St_12_Frostprotection_2 : bool;
                     s_5_St_12_Frostprotection_1 : bool;
                     r_5_St_12_Off : bool; s_5_St_12_Off_2 : bool;
                     s_5_St_12_Off_1 : bool; ck_2 : bool; ck_1 : bool;
                     s_5_2_0 : bool; s_5_2_1 : bool; ns_5_2_0 : bool;
                     ns_5_2_1 : bool; s_5_2 : bool; s_5_1 : bool;
                     ns_5_2 : bool; ns_5_1 : bool; r_5 : bool; nr_5 : bool;
                     pnr_5 : bool; s_4_1 : bool; ns_4_1 : bool; r_4 : bool;
                     nr_4 : bool; pnr_4 : bool; s_3_1 : bool; ns_3_1 : bool;
                     r_3 : bool; nr_3 : bool; pnr_3 : bool; s_2_1 : bool;
                     ns_2_1 : bool; r_2 : bool; nr_2 : bool; pnr_2 : bool;
                     s_1_1 : bool; ns_1_1 : bool; r_1 : bool; nr_1 : bool;
                     pnr_1 : bool; s_1_2 : bool; ns_1_2 : bool; r : bool;
                     nr : bool; pnr : bool; presence_1 : bool;
                     occupied_1 : bool; source_switch_1 : bool;
                     c_source1_1 : bool; c_source2_1 : bool;
                     source_on_1 : bool; source_switch : bool;
                     c_source1 : bool; c_source2 : bool; source_on : bool;
                     push_1 : bool; c_door_2 : bool; door_open_2 : bool;
                     push : bool; c_door_1 : bool; door_open_1 : bool;
                     up1 : bool; down1 : bool; up2 : bool; down2 : bool;
                     c_rad1 : bool; c_rad2 : bool; rad_power_1 : int;
                     rad_state_1 : int;
  let
    presence_1 = presence;
    pnr = false fby nr;
    ck_18_1 = s_1_2;
    occupied_1_St_7_Empty = false;
    nr_St_7_Empty = false;
    ns_St_7_Empty_1 = true;
    occupied_1_St_7_Ocupied = true;
    nr_St_7_Ocupied = false;
    ns_St_7_Ocupied_1 = false;
    occupied_1 =
      merge ck_18_1
        (true -> occupied_1_St_7_Empty)(false -> occupied_1_St_7_Ocupied);
    ns_1_2 =
      merge ck_18_1 (true -> ns_St_7_Empty_1)(false -> ns_St_7_Ocupied_1);
    nr = merge ck_18_1 (true -> nr_St_7_Empty)(false -> nr_St_7_Ocupied);
    ck_17_1 = true fby ns_1_2;
    r_St_7_Empty =
      if (presence_1 when true(ck_17_1))
      then true
      else (pnr when true(ck_17_1));
    s_St_7_Empty_1 = if (presence_1 when true(ck_17_1)) then false else true;
    r_St_7_Ocupied = if v_102 then true else (pnr when false(ck_17_1));
    s_St_7_Ocupied_1 = if v_102 then true else false;
    v_102 = not((presence_1 when false(ck_17_1)));
    s_1_2 = merge ck_17_1 (true -> s_St_7_Empty_1)(false -> s_St_7_Ocupied_1);
    r = merge ck_17_1 (true -> r_St_7_Empty)(false -> r_St_7_Ocupied);
    source_switch_1 = tv_switch;
    c_source1_1 = c_tv1;
    c_source2_1 = c_tv2;
    pnr_1 = false fby nr_1;
    ck_16_1 = s_1_1;
    source_on_1_St_8_Desligado = false;
    nr_1_St_8_Desligado = false;
    ns_1_St_8_Desligado_1 = true;
    source_on_1_St_8_Ligado = true;
    nr_1_St_8_Ligado = false;
    ns_1_St_8_Ligado_1 = false;
    source_on_1 =
      merge ck_16_1
        (true -> source_on_1_St_8_Desligado)
        (false -> source_on_1_St_8_Ligado);
    ns_1_1 =
      merge ck_16_1
        (true -> ns_1_St_8_Desligado_1)(false -> ns_1_St_8_Ligado_1);
    nr_1 =
      merge ck_16_1 (true -> nr_1_St_8_Desligado)(false -> nr_1_St_8_Ligado);
    ck_15_1 = true fby ns_1_1;
    r_1_St_8_Desligado = if v_101 then true else (pnr_1 when true(ck_15_1));
    s_1_St_8_Desligado_1 = if v_101 then false else true;
    v_101 = (v_100 or (c_source1_1 when true(ck_15_1)));
    v_100 = ((source_switch_1 when true(ck_15_1)) & v_99);
    v_99 = not((c_source2_1 when true(ck_15_1)));
    r_1_St_8_Ligado = if v_98 then true else (pnr_1 when false(ck_15_1));
    s_1_St_8_Ligado_1 = if v_98 then true else false;
    v_98 = (v_97 or (c_source2_1 when false(ck_15_1)));
    v_97 = ((source_switch_1 when false(ck_15_1)) & v_96);
    v_96 = not((c_source1_1 when false(ck_15_1)));
    s_1_1 =
      merge ck_15_1
        (true -> s_1_St_8_Desligado_1)(false -> s_1_St_8_Ligado_1);
    r_1 =
      merge ck_15_1 (true -> r_1_St_8_Desligado)(false -> r_1_St_8_Ligado);
    source_switch = light_switch;
    c_source1 = c_light1;
    c_source2 = c_light2;
    pnr_2 = false fby nr_2;
    ck_14_1 = s_2_1;
    source_on_St_9_Desligado = false;
    nr_2_St_9_Desligado = false;
    ns_2_St_9_Desligado_1 = true;
    source_on_St_9_Ligado = true;
    nr_2_St_9_Ligado = false;
    ns_2_St_9_Ligado_1 = false;
    source_on =
      merge ck_14_1
        (true -> source_on_St_9_Desligado)(false -> source_on_St_9_Ligado);
    ns_2_1 =
      merge ck_14_1
        (true -> ns_2_St_9_Desligado_1)(false -> ns_2_St_9_Ligado_1);
    nr_2 =
      merge ck_14_1 (true -> nr_2_St_9_Desligado)(false -> nr_2_St_9_Ligado);
    ck_13_1 = true fby ns_2_1;
    r_2_St_9_Desligado = if v_95 then true else (pnr_2 when true(ck_13_1));
    s_2_St_9_Desligado_1 = if v_95 then false else true;
    v_95 = (v_94 or (c_source1 when true(ck_13_1)));
    v_94 = ((source_switch when true(ck_13_1)) & v_93);
    v_93 = not((c_source2 when true(ck_13_1)));
    r_2_St_9_Ligado = if v_92 then true else (pnr_2 when false(ck_13_1));
    s_2_St_9_Ligado_1 = if v_92 then true else false;
    v_92 = (v_91 or (c_source2 when false(ck_13_1)));
    v_91 = ((source_switch when false(ck_13_1)) & v_90);
    v_90 = not((c_source1 when false(ck_13_1)));
    s_2_1 =
      merge ck_13_1
        (true -> s_2_St_9_Desligado_1)(false -> s_2_St_9_Ligado_1);
    r_2 =
      merge ck_13_1 (true -> r_2_St_9_Desligado)(false -> r_2_St_9_Ligado);
    push_1 = push_janela;
    c_door_2 = c_window;
    pnr_3 = false fby nr_3;
    ck_12_1 = s_3_1;
    door_open_2_St_10_Closed = false;
    nr_3_St_10_Closed = false;
    ns_3_St_10_Closed_1 = true;
    door_open_2_St_10_Open = true;
    nr_3_St_10_Open = false;
    ns_3_St_10_Open_1 = false;
    door_open_2 =
      merge ck_12_1
        (true -> door_open_2_St_10_Closed)(false -> door_open_2_St_10_Open);
    ns_3_1 =
      merge ck_12_1 (true -> ns_3_St_10_Closed_1)(false -> ns_3_St_10_Open_1);
    nr_3 =
      merge ck_12_1 (true -> nr_3_St_10_Closed)(false -> nr_3_St_10_Open);
    ck_11_1 = true fby ns_3_1;
    r_3_St_10_Closed = if v_89 then true else (pnr_3 when true(ck_11_1));
    s_3_St_10_Closed_1 = if v_89 then false else true;
    v_89 = ((push_1 when true(ck_11_1)) & (c_door_2 when true(ck_11_1)));
    r_3_St_10_Open = if v_88 then true else (pnr_3 when false(ck_11_1));
    s_3_St_10_Open_1 = if v_88 then true else false;
    v_88 = ((push_1 when false(ck_11_1)) or v_87);
    v_87 = not((c_door_2 when false(ck_11_1)));
    s_3_1 =
      merge ck_11_1 (true -> s_3_St_10_Closed_1)(false -> s_3_St_10_Open_1);
    r_3 = merge ck_11_1 (true -> r_3_St_10_Closed)(false -> r_3_St_10_Open);
    push = push_porta;
    c_door_1 = c_door;
    pnr_4 = false fby nr_4;
    ck_10_1 = s_4_1;
    door_open_1_St_11_Closed = false;
    nr_4_St_11_Closed = false;
    ns_4_St_11_Closed_1 = true;
    door_open_1_St_11_Open = true;
    nr_4_St_11_Open = false;
    ns_4_St_11_Open_1 = false;
    door_open_1 =
      merge ck_10_1
        (true -> door_open_1_St_11_Closed)(false -> door_open_1_St_11_Open);
    ns_4_1 =
      merge ck_10_1 (true -> ns_4_St_11_Closed_1)(false -> ns_4_St_11_Open_1);
    nr_4 =
      merge ck_10_1 (true -> nr_4_St_11_Closed)(false -> nr_4_St_11_Open);
    ck_9_1 = true fby ns_4_1;
    r_4_St_11_Closed = if v_86 then true else (pnr_4 when true(ck_9_1));
    s_4_St_11_Closed_1 = if v_86 then false else true;
    v_86 = ((push when true(ck_9_1)) & (c_door_1 when true(ck_9_1)));
    r_4_St_11_Open = if v_85 then true else (pnr_4 when false(ck_9_1));
    s_4_St_11_Open_1 = if v_85 then true else false;
    v_85 = ((push when false(ck_9_1)) or v_84);
    v_84 = not((c_door_1 when false(ck_9_1)));
    s_4_1 =
      merge ck_9_1 (true -> s_4_St_11_Closed_1)(false -> s_4_St_11_Open_1);
    r_4 = merge ck_9_1 (true -> r_4_St_11_Closed)(false -> r_4_St_11_Open);
    up1 = rad_up1;
    down1 = rad_down1;
    up2 = rad_up2;
    down2 = rad_down2;
    c_rad1 = rad_c1;
    c_rad2 = rad_c2;
    pnr_5 = false fby nr_5;
    ck_8_1 = s_5_1;
    ck_8_2 = s_5_2;
    rad_power_1_St_12_Off = 0;
    rad_state_1_St_12_Off = 0;
    nr_5_St_12_Off = false;
    ns_5_St_12_Off_1 = false;
    ns_5_St_12_Off_2 = false;
    rad_power_1_St_12_Frostprotection = 300;
    rad_state_1_St_12_Frostprotection = 1;
    nr_5_St_12_Frostprotection = false;
    ns_5_St_12_Frostprotection_1 = true;
    ns_5_St_12_Frostprotection_2 = false;
    rad_power_1_St_12_Eco = 1500;
    rad_state_1_St_12_Eco = 2;
    nr_5_St_12_Eco = false;
    ns_5_St_12_Eco_1 = true;
    ns_5_St_12_Eco_2 = true;
    rad_power_1_St_12_High = 2000;
    rad_state_1_St_12_High = 3;
    nr_5_St_12_High = false;
    ns_5_St_12_High_1 = false;
    ns_5_St_12_High_2 = true;
    v_257 =
      merge ck_8_2_1
        (true -> rad_power_1_St_12_Eco)
        (false -> rad_power_1_St_12_Frostprotection);
    v_258 =
      merge ck_8_2_0
        (true -> rad_power_1_St_12_High)(false -> rad_power_1_St_12_Off);
    rad_power_1 = merge ck_8_1 (true -> v_257)(false -> v_258);
    v_259 =
      merge ck_8_2_1
        (true -> rad_state_1_St_12_Eco)
        (false -> rad_state_1_St_12_Frostprotection);
    v_260 =
      merge ck_8_2_0
        (true -> rad_state_1_St_12_High)(false -> rad_state_1_St_12_Off);
    rad_state_1 = merge ck_8_1 (true -> v_259)(false -> v_260);
    v_261 =
      merge ck_8_2_1
        (true -> ns_5_St_12_Eco_1)(false -> ns_5_St_12_Frostprotection_1);
    v_262 =
      merge ck_8_2_1
        (true -> ns_5_St_12_Eco_2)(false -> ns_5_St_12_Frostprotection_2);
    v_263 =
      merge ck_8_2_0 (true -> ns_5_St_12_High_1)(false -> ns_5_St_12_Off_1);
    v_264 =
      merge ck_8_2_0 (true -> ns_5_St_12_High_2)(false -> ns_5_St_12_Off_2);
    ns_5_1 = merge ck_8_1 (true -> v_261)(false -> v_263);
    ns_5_2 = merge ck_8_1 (true -> v_262)(false -> v_264);
    v_265 =
      merge ck_8_2_1
        (true -> nr_5_St_12_Eco)(false -> nr_5_St_12_Frostprotection);
    v_266 = merge ck_8_2_0 (true -> nr_5_St_12_High)(false -> nr_5_St_12_Off);
    nr_5 = merge ck_8_1 (true -> v_265)(false -> v_266);
    ck_8_2_1 = (ck_8_2 when true(ck_8_1));
    ck_8_2_0 = (ck_8_2 when false(ck_8_1));
    ns_5_St_12_Off_2_1 = (ns_5_St_12_Off_2 when true(ns_5_St_12_Off_1));
    ns_5_St_12_Off_2_0 = (ns_5_St_12_Off_2 when false(ns_5_St_12_Off_1));
    ns_5_St_12_Frostprotection_2_1 =
      (ns_5_St_12_Frostprotection_2 when true(ns_5_St_12_Frostprotection_1));
    ns_5_St_12_Frostprotection_2_0 =
      (ns_5_St_12_Frostprotection_2 when false(ns_5_St_12_Frostprotection_1));
    ns_5_St_12_Eco_2_1 = (ns_5_St_12_Eco_2 when true(ns_5_St_12_Eco_1));
    ns_5_St_12_Eco_2_0 = (ns_5_St_12_Eco_2 when false(ns_5_St_12_Eco_1));
    ns_5_St_12_High_2_1 = (ns_5_St_12_High_2 when true(ns_5_St_12_High_1));
    ns_5_St_12_High_2_0 = (ns_5_St_12_High_2 when false(ns_5_St_12_High_1));
    v_267 = false fby ns_5_1;
    v_268 = false fby ns_5_2;
    ck_1 = v_267;
    ck_2 = v_268;
    r_5_St_12_Off =
      if v_83 then true else ((pnr_5 when false(ck_1)) when false(ck_2_0));
    s_5_St_12_Off_1 = if v_83 then true else false;
    s_5_St_12_Off_2 = if v_83 then false else false;
    v_83 = (((up1 when false(ck_1)) when false(ck_2_0)) or v_82);
    v_82 = not(((c_rad1 when false(ck_1)) when false(ck_2_0)));
    r_5_St_12_Frostprotection = if v_74 then true else v_81;
    s_5_St_12_Frostprotection_1 = if v_74 then true else v_80_1;
    s_5_St_12_Frostprotection_2 = if v_74 then true else v_80_2;
    v_81 = if v_75 then true else v_79;
    v_80_1 = if v_75 then false else v_78_1;
    v_80_2 = if v_75 then true else v_78_2;
    v_79 =
      if v_77 then true else ((pnr_5 when true(ck_1)) when false(ck_2_1));
    v_78_1 = if v_77 then false else true;
    v_78_2 = if v_77 then false else false;
    v_77 = (((down1 when true(ck_1)) when false(ck_2_1)) or v_76);
    v_76 = not(((c_rad1 when true(ck_1)) when false(ck_2_1)));
    v_75 =
      (((up2 when true(ck_1)) when false(ck_2_1)) &
       ((c_rad2 when true(ck_1)) when false(ck_2_1)));
    v_74 =
      (((up1 when true(ck_1)) when false(ck_2_1)) &
       ((c_rad1 when true(ck_1)) when false(ck_2_1)));
    v_78_2_1 = (v_78_2 when true(v_78_1));
    v_78_2_0 = (v_78_2 when false(v_78_1));
    v_80_2_1 = (v_80_2 when true(v_80_1));
    v_80_2_0 = (v_80_2 when false(v_80_1));
    r_5_St_12_Eco = if v_70 then true else v_73;
    s_5_St_12_Eco_1 = if v_70 then true else v_72_1;
    s_5_St_12_Eco_2 = if v_70 then false else v_72_2;
    v_73 = if v_71 then true else ((pnr_5 when true(ck_1)) when true(ck_2_1));
    v_72_1 = if v_71 then false else true;
    v_72_2 = if v_71 then true else true;
    v_71 =
      (((up2 when true(ck_1)) when true(ck_2_1)) &
       ((c_rad2 when true(ck_1)) when true(ck_2_1)));
    v_70 = (((down1 when true(ck_1)) when true(ck_2_1)) or v_69);
    v_69 = not(((c_rad1 when true(ck_1)) when true(ck_2_1)));
    v_72_2_1 = (v_72_2 when true(v_72_1));
    v_72_2_0 = (v_72_2 when false(v_72_1));
    r_5_St_12_High = if v_64 then true else v_68;
    s_5_St_12_High_1 = if v_64 then true else v_67_1;
    s_5_St_12_High_2 = if v_64 then true else v_67_2;
    v_68 =
      if v_66 then true else ((pnr_5 when false(ck_1)) when true(ck_2_0));
    v_67_1 = if v_66 then true else false;
    v_67_2 = if v_66 then false else true;
    v_66 = (((down2 when false(ck_1)) when true(ck_2_0)) or v_65);
    v_65 = not(((c_rad2 when false(ck_1)) when true(ck_2_0)));
    v_64 = (((down1 when false(ck_1)) when true(ck_2_0)) or v_63);
    v_63 = not(((c_rad1 when false(ck_1)) when true(ck_2_0)));
    v_67_2_1 = (v_67_2 when true(v_67_1));
    v_67_2_0 = (v_67_2 when false(v_67_1));
    v_269 =
      merge ck_2_1
        (true -> s_5_St_12_Eco_1)(false -> s_5_St_12_Frostprotection_1);
    v_270 =
      merge ck_2_1
        (true -> s_5_St_12_Eco_2)(false -> s_5_St_12_Frostprotection_2);
    v_271 = merge ck_2_0 (true -> s_5_St_12_High_1)(false -> s_5_St_12_Off_1);
    v_272 = merge ck_2_0 (true -> s_5_St_12_High_2)(false -> s_5_St_12_Off_2);
    s_5_1 = merge ck_1 (true -> v_269)(false -> v_271);
    s_5_2 = merge ck_1 (true -> v_270)(false -> v_272);
    v_273 =
      merge ck_2_1
        (true -> r_5_St_12_Eco)(false -> r_5_St_12_Frostprotection);
    v_274 = merge ck_2_0 (true -> r_5_St_12_High)(false -> r_5_St_12_Off);
    r_5 = merge ck_1 (true -> v_273)(false -> v_274);
    ck_2_1 = (ck_2 when true(ck_1));
    ck_2_0 = (ck_2 when false(ck_1));
    s_5_St_12_Off_2_1 = (s_5_St_12_Off_2 when true(s_5_St_12_Off_1));
    s_5_St_12_Off_2_0 = (s_5_St_12_Off_2 when false(s_5_St_12_Off_1));
    s_5_St_12_Frostprotection_2_1 =
      (s_5_St_12_Frostprotection_2 when true(s_5_St_12_Frostprotection_1));
    s_5_St_12_Frostprotection_2_0 =
      (s_5_St_12_Frostprotection_2 when false(s_5_St_12_Frostprotection_1));
    s_5_St_12_Eco_2_1 = (s_5_St_12_Eco_2 when true(s_5_St_12_Eco_1));
    s_5_St_12_Eco_2_0 = (s_5_St_12_Eco_2 when false(s_5_St_12_Eco_1));
    s_5_St_12_High_2_1 = (s_5_St_12_High_2 when true(s_5_St_12_High_1));
    s_5_St_12_High_2_0 = (s_5_St_12_High_2 when false(s_5_St_12_High_1));
    rad_state = rad_state_1;
    rad_power = rad_power_1;
    door_open = door_open_1;
    window_open = door_open_2;
    lamp_on = source_on;
    tv_on = source_on_1;
    occupied = occupied_1;
    ns_5_2_1 = (ns_5_2 when true(ns_5_1));
    ns_5_2_0 = (ns_5_2 when false(ns_5_1));
    s_5_2_1 = (s_5_2 when true(s_5_1));
    s_5_2_0 = (s_5_2 when false(s_5_1))
  tel

