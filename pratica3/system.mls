type st_11 = St_11_Occupied|St_11_Empty
type st_10 = St_10_Open|St_10_Closed
type st_9 = St_9_On|St_9_Off
type st_8 = St_8_On|St_8_Off
type st_7 = St_7_Standby|St_7_Reheat|St_7_Off|St_7_Maintain|St_7_Heat
type st_6 = St_6_Water_fill|St_6_Washing|St_6_Standby|St_6_Spin|St_6_Rinse|
  St_6_Off
type st_5 = St_5_Off|St_5_High|St_5_Frost_Protection|St_5_Eco
type st_4 = St_4_Open|St_4_Closed
type st_3 = St_3_On|St_3_Off
type st_2 = St_2_On|St_2_Off
type st_1 = St_1_Minimal_safety|St_1_Eco|St_1_Confort
type st = St_Occupied|St_Empty
node room(presence : bool) returns (room_oc : bool)
var nr_St_Occupied : bool; ns_St_Occupied_1 : bool;
    room_oc_St_Occupied : bool; nr_St_Empty : bool; ns_St_Empty_1 : bool;
    room_oc_St_Empty : bool; ck_1_1 : bool; r_St_Occupied : bool;
    s_St_Occupied_1 : bool; r_St_Empty : bool; s_St_Empty_1 : bool;
    ck_1_2 : bool; s_1 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_1_1 = s_1;
  room_oc_St_Empty = false;
  nr_St_Empty = false;
  ns_St_Empty_1 = true;
  room_oc_St_Occupied = true;
  nr_St_Occupied = false;
  ns_St_Occupied_1 = false;
  room_oc =
    merge ck_1_1 (true -> room_oc_St_Empty)(false -> room_oc_St_Occupied);
  ns_1 = merge ck_1_1 (true -> ns_St_Empty_1)(false -> ns_St_Occupied_1);
  nr = merge ck_1_1 (true -> nr_St_Empty)(false -> nr_St_Occupied);
  ck_1_2 = true fby ns_1;
  r_St_Empty =
    if (presence when true(ck_1_2)) then true else (pnr when true(ck_1_2));
  s_St_Empty_1 = if (presence when true(ck_1_2)) then false else true;
  r_St_Occupied =
    if (presence when false(ck_1_2)) then true else (pnr when false(ck_1_2));
  s_St_Occupied_1 = if (presence when false(ck_1_2)) then true else false;
  s_1 = merge ck_1_2 (true -> s_St_Empty_1)(false -> s_St_Occupied_1);
  r = merge ck_1_2 (true -> r_St_Empty)(false -> r_St_Occupied)
tel

node management_policy(eco_input : bool; confort_input : bool)
returns (eco : bool; confort : bool; pl : int)
var v_88 : bool; v_87 : bool; v_86 : bool; v_85 : bool; v_84 : bool;
    v_83 : bool; v_82 : int; v_81 : int; v_80 : bool; v_79 : bool;
    v_78 : bool; v_77 : bool; ns_St_1_Confort_2_0 : bool;
    ns_St_1_Confort_2_1 : bool; ns_St_1_Eco_2_0 : bool;
    ns_St_1_Eco_2_1 : bool; ns_St_1_Minimal_safety_2_0 : bool;
    ns_St_1_Minimal_safety_2_1 : bool; ck_2_2_0 : bool; ck_2_2_1 : bool;
    nr_St_1_Confort : bool; ns_St_1_Confort_2 : bool;
    ns_St_1_Confort_1 : bool; pl_St_1_Confort : int;
    confort_St_1_Confort : bool; eco_St_1_Confort : bool; nr_St_1_Eco : bool;
    ns_St_1_Eco_2 : bool; ns_St_1_Eco_1 : bool; pl_St_1_Eco : int;
    confort_St_1_Eco : bool; eco_St_1_Eco : bool;
    nr_St_1_Minimal_safety : bool; ns_St_1_Minimal_safety_2 : bool;
    ns_St_1_Minimal_safety_1 : bool; pl_St_1_Minimal_safety : int;
    confort_St_1_Minimal_safety : bool; eco_St_1_Minimal_safety : bool;
    ck_2_2 : bool; ck_2_1 : bool; v_4_2_0 : bool; v_4_2_1 : bool; v_5 : bool;
    v_4_2 : bool; v_4_1 : bool; v_2_2_0 : bool; v_2_2_1 : bool; v_3 : bool;
    v_2_2 : bool; v_2_1 : bool; v_2_3_0 : bool; v_2_3_1 : bool; v_1 : bool;
    v_2_3 : bool; v_1_1 : bool; v_96 : bool; v_95 : bool; v_94 : bool;
    v_93 : bool; v_92 : bool; v_91 : bool; v_90 : bool; v_89 : bool;
    s_St_1_Confort_2_0 : bool; s_St_1_Confort_2_1 : bool;
    s_St_1_Eco_2_0 : bool; s_St_1_Eco_2_1 : bool;
    s_St_1_Minimal_safety_2_0 : bool; s_St_1_Minimal_safety_2_1 : bool;
    ck_2_3_0 : bool; ck_2_3_1 : bool; r_St_1_Confort : bool;
    s_St_1_Confort_2 : bool; s_St_1_Confort_1 : bool; r_St_1_Eco : bool;
    s_St_1_Eco_2 : bool; s_St_1_Eco_1 : bool; r_St_1_Minimal_safety : bool;
    s_St_1_Minimal_safety_2 : bool; s_St_1_Minimal_safety_1 : bool;
    ck_2_3 : bool; ck_1 : bool; s_2_0 : bool; s_2_1 : bool; ns_2_0 : bool;
    ns_2_1 : bool; s_2 : bool; s_1 : bool; ns_2 : bool; ns_1 : bool;
    r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_2_1 = s_1;
  ck_2_2 = s_2;
  pl_St_1_Minimal_safety = 3000;
  eco_St_1_Minimal_safety = false;
  confort_St_1_Minimal_safety = false;
  nr_St_1_Minimal_safety = false;
  ns_St_1_Minimal_safety_1 = false;
  ns_St_1_Minimal_safety_2 = false;
  pl_St_1_Eco = 5000;
  eco_St_1_Eco = true;
  confort_St_1_Eco = false;
  nr_St_1_Eco = false;
  ns_St_1_Eco_1 = true;
  ns_St_1_Eco_2 = false;
  pl_St_1_Confort = 7000;
  eco_St_1_Confort = false;
  confort_St_1_Confort = true;
  nr_St_1_Confort = false;
  ns_St_1_Confort_1 = true;
  ns_St_1_Confort_2 = true;
  v_77 = merge ck_2_2_1 (true -> eco_St_1_Confort)(false -> eco_St_1_Eco);
  v_78 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> eco_St_1_Minimal_safety);
  eco = merge ck_2_1 (true -> v_77)(false -> v_78);
  v_79 =
    merge ck_2_2_1 (true -> confort_St_1_Confort)(false -> confort_St_1_Eco);
  v_80 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> confort_St_1_Minimal_safety);
  confort = merge ck_2_1 (true -> v_79)(false -> v_80);
  v_81 = merge ck_2_2_1 (true -> pl_St_1_Confort)(false -> pl_St_1_Eco);
  v_82 =
    merge ck_2_2_0
      (true -> ((0 when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> pl_St_1_Minimal_safety);
  pl = merge ck_2_1 (true -> v_81)(false -> v_82);
  v_83 = merge ck_2_2_1 (true -> ns_St_1_Confort_1)(false -> ns_St_1_Eco_1);
  v_84 = merge ck_2_2_1 (true -> ns_St_1_Confort_2)(false -> ns_St_1_Eco_2);
  v_85 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> ns_St_1_Minimal_safety_1);
  v_86 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> ns_St_1_Minimal_safety_2);
  ns_1 = merge ck_2_1 (true -> v_83)(false -> v_85);
  ns_2 = merge ck_2_1 (true -> v_84)(false -> v_86);
  v_87 = merge ck_2_2_1 (true -> nr_St_1_Confort)(false -> nr_St_1_Eco);
  v_88 =
    merge ck_2_2_0
      (true -> ((true when false(ck_2_1)) when true(ck_2_2_0)))
      (false -> nr_St_1_Minimal_safety);
  nr = merge ck_2_1 (true -> v_87)(false -> v_88);
  ck_2_2_1 = (ck_2_2 when true(ck_2_1));
  ck_2_2_0 = (ck_2_2 when false(ck_2_1));
  ns_St_1_Minimal_safety_2_1 =
    (ns_St_1_Minimal_safety_2 when true(ns_St_1_Minimal_safety_1));
  ns_St_1_Minimal_safety_2_0 =
    (ns_St_1_Minimal_safety_2 when false(ns_St_1_Minimal_safety_1));
  ns_St_1_Eco_2_1 = (ns_St_1_Eco_2 when true(ns_St_1_Eco_1));
  ns_St_1_Eco_2_0 = (ns_St_1_Eco_2 when false(ns_St_1_Eco_1));
  ns_St_1_Confort_2_1 = (ns_St_1_Confort_2 when true(ns_St_1_Confort_1));
  ns_St_1_Confort_2_0 = (ns_St_1_Confort_2 when false(ns_St_1_Confort_1));
  v_89 = false fby ns_1;
  v_90 = false fby ns_2;
  ck_1 = v_89;
  ck_2_3 = v_90;
  r_St_1_Minimal_safety =
    if ((eco_input when false(ck_1)) when false(ck_2_3_0)) then true else v_5;
  s_St_1_Minimal_safety_1 =
    if ((eco_input when false(ck_1)) when false(ck_2_3_0))
    then true
    else v_4_1;
  s_St_1_Minimal_safety_2 =
    if ((eco_input when false(ck_1)) when false(ck_2_3_0))
    then false
    else v_4_2;
  v_5 =
    if ((confort_input when false(ck_1)) when false(ck_2_3_0))
    then true
    else ((pnr when false(ck_1)) when false(ck_2_3_0));
  v_4_1 =
    if ((confort_input when false(ck_1)) when false(ck_2_3_0))
    then true
    else false;
  v_4_2 =
    if ((confort_input when false(ck_1)) when false(ck_2_3_0))
    then true
    else false;
  v_4_2_1 = (v_4_2 when true(v_4_1));
  v_4_2_0 = (v_4_2 when false(v_4_1));
  r_St_1_Eco =
    if ((eco_input when true(ck_1)) when false(ck_2_3_1)) then true else v_3;
  s_St_1_Eco_1 =
    if ((eco_input when true(ck_1)) when false(ck_2_3_1))
    then false
    else v_2_1;
  s_St_1_Eco_2 =
    if ((eco_input when true(ck_1)) when false(ck_2_3_1))
    then false
    else v_2_2;
  v_3 =
    if ((confort_input when true(ck_1)) when false(ck_2_3_1))
    then true
    else ((pnr when true(ck_1)) when false(ck_2_3_1));
  v_2_1 =
    if ((confort_input when true(ck_1)) when false(ck_2_3_1))
    then true
    else true;
  v_2_2 =
    if ((confort_input when true(ck_1)) when false(ck_2_3_1))
    then true
    else false;
  v_2_2_1 = (v_2_2 when true(v_2_1));
  v_2_2_0 = (v_2_2 when false(v_2_1));
  r_St_1_Confort =
    if ((eco_input when true(ck_1)) when true(ck_2_3_1)) then true else v_1;
  s_St_1_Confort_1 =
    if ((eco_input when true(ck_1)) when true(ck_2_3_1)) then true else v_1_1;
  s_St_1_Confort_2 =
    if ((eco_input when true(ck_1)) when true(ck_2_3_1))
    then false
    else v_2_3;
  v_1 =
    if ((confort_input when true(ck_1)) when true(ck_2_3_1))
    then true
    else ((pnr when true(ck_1)) when true(ck_2_3_1));
  v_1_1 =
    if ((confort_input when true(ck_1)) when true(ck_2_3_1))
    then false
    else true;
  v_2_3 =
    if ((confort_input when true(ck_1)) when true(ck_2_3_1))
    then false
    else true;
  v_2_3_1 = (v_2_3 when true(v_1_1));
  v_2_3_0 = (v_2_3 when false(v_1_1));
  v_91 = merge ck_2_3_1 (true -> s_St_1_Confort_1)(false -> s_St_1_Eco_1);
  v_92 = merge ck_2_3_1 (true -> s_St_1_Confort_2)(false -> s_St_1_Eco_2);
  v_93 =
    merge ck_2_3_0
      (true -> ((true when false(ck_1)) when true(ck_2_3_0)))
      (false -> s_St_1_Minimal_safety_1);
  v_94 =
    merge ck_2_3_0
      (true -> ((true when false(ck_1)) when true(ck_2_3_0)))
      (false -> s_St_1_Minimal_safety_2);
  s_1 = merge ck_1 (true -> v_91)(false -> v_93);
  s_2 = merge ck_1 (true -> v_92)(false -> v_94);
  v_95 = merge ck_2_3_1 (true -> r_St_1_Confort)(false -> r_St_1_Eco);
  v_96 =
    merge ck_2_3_0
      (true -> ((true when false(ck_1)) when true(ck_2_3_0)))
      (false -> r_St_1_Minimal_safety);
  r = merge ck_1 (true -> v_95)(false -> v_96);
  ck_2_3_1 = (ck_2_3 when true(ck_1));
  ck_2_3_0 = (ck_2_3 when false(ck_1));
  s_St_1_Minimal_safety_2_1 =
    (s_St_1_Minimal_safety_2 when true(s_St_1_Minimal_safety_1));
  s_St_1_Minimal_safety_2_0 =
    (s_St_1_Minimal_safety_2 when false(s_St_1_Minimal_safety_1));
  s_St_1_Eco_2_1 = (s_St_1_Eco_2 when true(s_St_1_Eco_1));
  s_St_1_Eco_2_0 = (s_St_1_Eco_2 when false(s_St_1_Eco_1));
  s_St_1_Confort_2_1 = (s_St_1_Confort_2 when true(s_St_1_Confort_1));
  s_St_1_Confort_2_0 = (s_St_1_Confort_2 when false(s_St_1_Confort_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1))
tel

node tv(tv_switch : bool; c_tv1 : bool; c_tv2 : bool) returns (tv_on : bool)
var nr_St_2_On : bool; ns_St_2_On_1 : bool; tv_on_St_2_On : bool;
    nr_St_2_Off : bool; ns_St_2_Off_1 : bool; tv_on_St_2_Off : bool;
    ck_3_1 : bool; v_10 : bool; v_9 : bool; v_8 : bool; v_7 : bool;
    v_6 : bool; v : bool; r_St_2_On : bool; s_St_2_On_1 : bool;
    r_St_2_Off : bool; s_St_2_Off_1 : bool; ck_1 : bool; s_1 : bool;
    ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_3_1 = s_1;
  tv_on_St_2_Off = false;
  nr_St_2_Off = false;
  ns_St_2_Off_1 = true;
  tv_on_St_2_On = true;
  nr_St_2_On = false;
  ns_St_2_On_1 = false;
  tv_on = merge ck_3_1 (true -> tv_on_St_2_Off)(false -> tv_on_St_2_On);
  ns_1 = merge ck_3_1 (true -> ns_St_2_Off_1)(false -> ns_St_2_On_1);
  nr = merge ck_3_1 (true -> nr_St_2_Off)(false -> nr_St_2_On);
  ck_1 = true fby ns_1;
  r_St_2_Off = if v_10 then true else (pnr when true(ck_1));
  s_St_2_Off_1 = if v_10 then false else true;
  v_10 = (v_9 & (c_tv2 when true(ck_1)));
  v_9 = ((tv_switch when true(ck_1)) or (c_tv1 when true(ck_1)));
  r_St_2_On = if v_8 then true else (pnr when false(ck_1));
  s_St_2_On_1 = if v_8 then true else false;
  v_8 = (v_6 & v_7);
  v_7 = not((c_tv2 when false(ck_1)));
  v_6 = ((tv_switch when false(ck_1)) or v);
  v = not((c_tv1 when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_2_Off_1)(false -> s_St_2_On_1);
  r = merge ck_1 (true -> r_St_2_Off)(false -> r_St_2_On)
tel

node lamp(lamp_switch : bool; c_lamp1 : bool; c_lamp2 : bool)
returns (lamp_on : bool)
var nr_St_3_On : bool; ns_St_3_On_1 : bool; lamp_on_St_3_On : bool;
    nr_St_3_Off : bool; ns_St_3_Off_1 : bool; lamp_on_St_3_Off : bool;
    ck_4_1 : bool; v_13 : bool; v_12 : bool; v_11 : bool; v : bool;
    r_St_3_On : bool; s_St_3_On_1 : bool; r_St_3_Off : bool;
    s_St_3_Off_1 : bool; ck_1 : bool; s_1 : bool; ns_1 : bool; r : bool;
    nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_4_1 = s_1;
  lamp_on_St_3_Off = false;
  nr_St_3_Off = false;
  ns_St_3_Off_1 = true;
  lamp_on_St_3_On = true;
  nr_St_3_On = false;
  ns_St_3_On_1 = false;
  lamp_on = merge ck_4_1 (true -> lamp_on_St_3_Off)(false -> lamp_on_St_3_On);
  ns_1 = merge ck_4_1 (true -> ns_St_3_Off_1)(false -> ns_St_3_On_1);
  nr = merge ck_4_1 (true -> nr_St_3_Off)(false -> nr_St_3_On);
  ck_1 = true fby ns_1;
  r_St_3_Off = if v_13 then true else (pnr when true(ck_1));
  s_St_3_Off_1 = if v_13 then false else true;
  v_13 = (v_12 & (c_lamp2 when true(ck_1)));
  v_12 = ((lamp_switch when true(ck_1)) or (c_lamp1 when true(ck_1)));
  r_St_3_On = if v_11 then true else (pnr when false(ck_1));
  s_St_3_On_1 = if v_11 then true else false;
  v_11 = (v & (c_lamp2 when false(ck_1)));
  v = ((lamp_switch when false(ck_1)) or (c_lamp1 when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_3_Off_1)(false -> s_St_3_On_1);
  r = merge ck_1 (true -> r_St_3_Off)(false -> r_St_3_On)
tel

node door(push : bool; c_door1 : bool; c_door2 : bool)
returns (door_open : bool)
var nr_St_4_Open : bool; ns_St_4_Open_1 : bool; door_open_St_4_Open : bool;
    nr_St_4_Closed : bool; ns_St_4_Closed_1 : bool;
    door_open_St_4_Closed : bool; ck_5_1 : bool; v_16 : bool; v_15 : bool;
    v_14 : bool; v : bool; r_St_4_Open : bool; s_St_4_Open_1 : bool;
    r_St_4_Closed : bool; s_St_4_Closed_1 : bool; ck_1 : bool; s_1 : bool;
    ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_5_1 = s_1;
  door_open_St_4_Closed = false;
  nr_St_4_Closed = false;
  ns_St_4_Closed_1 = true;
  door_open_St_4_Open = true;
  nr_St_4_Open = false;
  ns_St_4_Open_1 = false;
  door_open =
    merge ck_5_1
      (true -> door_open_St_4_Closed)(false -> door_open_St_4_Open);
  ns_1 = merge ck_5_1 (true -> ns_St_4_Closed_1)(false -> ns_St_4_Open_1);
  nr = merge ck_5_1 (true -> nr_St_4_Closed)(false -> nr_St_4_Open);
  ck_1 = true fby ns_1;
  r_St_4_Closed = if v_16 then true else (pnr when true(ck_1));
  s_St_4_Closed_1 = if v_16 then false else true;
  v_16 = (v_15 & (c_door2 when true(ck_1)));
  v_15 = ((push when true(ck_1)) or (c_door1 when true(ck_1)));
  r_St_4_Open = if v_14 then true else (pnr when false(ck_1));
  s_St_4_Open_1 = if v_14 then true else false;
  v_14 = (v & (c_door2 when false(ck_1)));
  v = ((push when false(ck_1)) & (c_door1 when false(ck_1)));
  s_1 = merge ck_1 (true -> s_St_4_Closed_1)(false -> s_St_4_Open_1);
  r = merge ck_1 (true -> r_St_4_Closed)(false -> r_St_4_Open)
tel

node rad(up1 : bool; up2 : bool; down1 : bool; down2 : bool; c1 : bool;
          c2 : bool)
returns (on_state : int; power : int)
var v_106 : bool; v_105 : bool; v_104 : bool; v_103 : bool; v_102 : bool;
    v_101 : bool; v_100 : int; v_99 : int; v_98 : int; v_97 : int;
    ns_St_5_High_2_0 : bool; ns_St_5_High_2_1 : bool; ns_St_5_Eco_2_0 : bool;
    ns_St_5_Eco_2_1 : bool; ns_St_5_Frost_Protection_2_0 : bool;
    ns_St_5_Frost_Protection_2_1 : bool; ns_St_5_Off_2_0 : bool;
    ns_St_5_Off_2_1 : bool; ck_6_2_0 : bool; ck_6_2_1 : bool;
    nr_St_5_High : bool; ns_St_5_High_2 : bool; ns_St_5_High_1 : bool;
    power_St_5_High : int; on_state_St_5_High : int; nr_St_5_Eco : bool;
    ns_St_5_Eco_2 : bool; ns_St_5_Eco_1 : bool; power_St_5_Eco : int;
    on_state_St_5_Eco : int; nr_St_5_Frost_Protection : bool;
    ns_St_5_Frost_Protection_2 : bool; ns_St_5_Frost_Protection_1 : bool;
    power_St_5_Frost_Protection : int; on_state_St_5_Frost_Protection : int;
    nr_St_5_Off : bool; ns_St_5_Off_2 : bool; ns_St_5_Off_1 : bool;
    power_St_5_Off : int; on_state_St_5_Off : int; ck_6_2 : bool;
    ck_6_1 : bool; v_36 : bool; v_35 : bool; v_33_2_0 : bool;
    v_33_2_1 : bool; v_31_2_0 : bool; v_31_2_1 : bool; v_34 : bool;
    v_33_2 : bool; v_33_1 : bool; v_32 : bool; v_31_2 : bool; v_31_1 : bool;
    v_30 : bool; v_29 : bool; v_28 : bool; v_27 : bool; v_25_2_0 : bool;
    v_25_2_1 : bool; v_26 : bool; v_25_2 : bool; v_25_1 : bool; v_24 : bool;
    v_23 : bool; v_22 : bool; v_20_2_0 : bool; v_20_2_1 : bool; v_21 : bool;
    v_20_2 : bool; v_20_1 : bool; v_19 : bool; v_18 : bool; v_17 : bool;
    v : bool; v_114 : bool; v_113 : bool; v_112 : bool; v_111 : bool;
    v_110 : bool; v_109 : bool; v_108 : bool; v_107 : bool;
    s_St_5_High_2_0 : bool; s_St_5_High_2_1 : bool; s_St_5_Eco_2_0 : bool;
    s_St_5_Eco_2_1 : bool; s_St_5_Frost_Protection_2_0 : bool;
    s_St_5_Frost_Protection_2_1 : bool; s_St_5_Off_2_0 : bool;
    s_St_5_Off_2_1 : bool; ck_2_0 : bool; ck_2_1 : bool; r_St_5_High : bool;
    s_St_5_High_2 : bool; s_St_5_High_1 : bool; r_St_5_Eco : bool;
    s_St_5_Eco_2 : bool; s_St_5_Eco_1 : bool; r_St_5_Frost_Protection : bool;
    s_St_5_Frost_Protection_2 : bool; s_St_5_Frost_Protection_1 : bool;
    r_St_5_Off : bool; s_St_5_Off_2 : bool; s_St_5_Off_1 : bool; ck_2 : bool;
    ck_1 : bool; s_2_0 : bool; s_2_1 : bool; ns_2_0 : bool; ns_2_1 : bool;
    s_2 : bool; s_1 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool;
    pnr : bool;
let
  pnr = false fby nr;
  ck_6_1 = s_1;
  ck_6_2 = s_2;
  on_state_St_5_Off = 0;
  power_St_5_Off = 0;
  nr_St_5_Off = false;
  ns_St_5_Off_1 = false;
  ns_St_5_Off_2 = false;
  on_state_St_5_Frost_Protection = 1;
  power_St_5_Frost_Protection = 300;
  nr_St_5_Frost_Protection = false;
  ns_St_5_Frost_Protection_1 = true;
  ns_St_5_Frost_Protection_2 = false;
  on_state_St_5_Eco = 2;
  power_St_5_Eco = 1500;
  nr_St_5_Eco = false;
  ns_St_5_Eco_1 = true;
  ns_St_5_Eco_2 = true;
  on_state_St_5_High = 3;
  power_St_5_High = 2000;
  nr_St_5_High = false;
  ns_St_5_High_1 = false;
  ns_St_5_High_2 = true;
  v_97 =
    merge ck_6_2_1
      (true -> on_state_St_5_Eco)(false -> on_state_St_5_Frost_Protection);
  v_98 =
    merge ck_6_2_0 (true -> on_state_St_5_High)(false -> on_state_St_5_Off);
  on_state = merge ck_6_1 (true -> v_97)(false -> v_98);
  v_99 =
    merge ck_6_2_1
      (true -> power_St_5_Eco)(false -> power_St_5_Frost_Protection);
  v_100 = merge ck_6_2_0 (true -> power_St_5_High)(false -> power_St_5_Off);
  power = merge ck_6_1 (true -> v_99)(false -> v_100);
  v_101 =
    merge ck_6_2_1
      (true -> ns_St_5_Eco_1)(false -> ns_St_5_Frost_Protection_1);
  v_102 =
    merge ck_6_2_1
      (true -> ns_St_5_Eco_2)(false -> ns_St_5_Frost_Protection_2);
  v_103 = merge ck_6_2_0 (true -> ns_St_5_High_1)(false -> ns_St_5_Off_1);
  v_104 = merge ck_6_2_0 (true -> ns_St_5_High_2)(false -> ns_St_5_Off_2);
  ns_1 = merge ck_6_1 (true -> v_101)(false -> v_103);
  ns_2 = merge ck_6_1 (true -> v_102)(false -> v_104);
  v_105 =
    merge ck_6_2_1 (true -> nr_St_5_Eco)(false -> nr_St_5_Frost_Protection);
  v_106 = merge ck_6_2_0 (true -> nr_St_5_High)(false -> nr_St_5_Off);
  nr = merge ck_6_1 (true -> v_105)(false -> v_106);
  ck_6_2_1 = (ck_6_2 when true(ck_6_1));
  ck_6_2_0 = (ck_6_2 when false(ck_6_1));
  ns_St_5_Off_2_1 = (ns_St_5_Off_2 when true(ns_St_5_Off_1));
  ns_St_5_Off_2_0 = (ns_St_5_Off_2 when false(ns_St_5_Off_1));
  ns_St_5_Frost_Protection_2_1 =
    (ns_St_5_Frost_Protection_2 when true(ns_St_5_Frost_Protection_1));
  ns_St_5_Frost_Protection_2_0 =
    (ns_St_5_Frost_Protection_2 when false(ns_St_5_Frost_Protection_1));
  ns_St_5_Eco_2_1 = (ns_St_5_Eco_2 when true(ns_St_5_Eco_1));
  ns_St_5_Eco_2_0 = (ns_St_5_Eco_2 when false(ns_St_5_Eco_1));
  ns_St_5_High_2_1 = (ns_St_5_High_2 when true(ns_St_5_High_1));
  ns_St_5_High_2_0 = (ns_St_5_High_2 when false(ns_St_5_High_1));
  v_107 = false fby ns_1;
  v_108 = false fby ns_2;
  ck_1 = v_107;
  ck_2 = v_108;
  r_St_5_Off =
    if v_36 then true else ((pnr when false(ck_1)) when false(ck_2_0));
  s_St_5_Off_1 = if v_36 then true else false;
  s_St_5_Off_2 = if v_36 then false else false;
  v_36 = (((up1 when false(ck_1)) when false(ck_2_0)) or v_35);
  v_35 = not(((c1 when false(ck_1)) when false(ck_2_0)));
  r_St_5_Frost_Protection = if v_27 then true else v_34;
  s_St_5_Frost_Protection_1 = if v_27 then true else v_33_1;
  s_St_5_Frost_Protection_2 = if v_27 then true else v_33_2;
  v_34 = if v_28 then true else v_32;
  v_33_1 = if v_28 then false else v_31_1;
  v_33_2 = if v_28 then true else v_31_2;
  v_32 = if v_30 then true else ((pnr when true(ck_1)) when false(ck_2_1));
  v_31_1 = if v_30 then false else true;
  v_31_2 = if v_30 then false else false;
  v_30 = (((down1 when true(ck_1)) when false(ck_2_1)) or v_29);
  v_29 = not(((c1 when true(ck_1)) when false(ck_2_1)));
  v_28 =
    (((up2 when true(ck_1)) when false(ck_2_1)) &
     ((c2 when true(ck_1)) when false(ck_2_1)));
  v_27 =
    (((up1 when true(ck_1)) when false(ck_2_1)) &
     ((c1 when true(ck_1)) when false(ck_2_1)));
  v_31_2_1 = (v_31_2 when true(v_31_1));
  v_31_2_0 = (v_31_2 when false(v_31_1));
  v_33_2_1 = (v_33_2 when true(v_33_1));
  v_33_2_0 = (v_33_2 when false(v_33_1));
  r_St_5_Eco = if v_22 then true else v_26;
  s_St_5_Eco_1 = if v_22 then false else v_25_1;
  s_St_5_Eco_2 = if v_22 then true else v_25_2;
  v_26 = if v_24 then true else ((pnr when true(ck_1)) when true(ck_2_1));
  v_25_1 = if v_24 then true else true;
  v_25_2 = if v_24 then false else true;
  v_24 = (((down1 when true(ck_1)) when true(ck_2_1)) or v_23);
  v_23 = not(((c1 when true(ck_1)) when true(ck_2_1)));
  v_22 =
    (((up2 when true(ck_1)) when true(ck_2_1)) &
     ((c2 when true(ck_1)) when true(ck_2_1)));
  v_25_2_1 = (v_25_2 when true(v_25_1));
  v_25_2_0 = (v_25_2 when false(v_25_1));
  r_St_5_High = if v_17 then true else v_21;
  s_St_5_High_1 = if v_17 then true else v_20_1;
  s_St_5_High_2 = if v_17 then false else v_20_2;
  v_21 = if v_19 then true else ((pnr when false(ck_1)) when true(ck_2_0));
  v_20_1 = if v_19 then true else false;
  v_20_2 = if v_19 then true else true;
  v_19 = (((down1 when false(ck_1)) when true(ck_2_0)) or v_18);
  v_18 = not(((c1 when false(ck_1)) when true(ck_2_0)));
  v_17 = (((down2 when false(ck_1)) when true(ck_2_0)) or v);
  v = not(((c2 when false(ck_1)) when true(ck_2_0)));
  v_20_2_1 = (v_20_2 when true(v_20_1));
  v_20_2_0 = (v_20_2 when false(v_20_1));
  v_109 =
    merge ck_2_1 (true -> s_St_5_Eco_1)(false -> s_St_5_Frost_Protection_1);
  v_110 =
    merge ck_2_1 (true -> s_St_5_Eco_2)(false -> s_St_5_Frost_Protection_2);
  v_111 = merge ck_2_0 (true -> s_St_5_High_1)(false -> s_St_5_Off_1);
  v_112 = merge ck_2_0 (true -> s_St_5_High_2)(false -> s_St_5_Off_2);
  s_1 = merge ck_1 (true -> v_109)(false -> v_111);
  s_2 = merge ck_1 (true -> v_110)(false -> v_112);
  v_113 = merge ck_2_1 (true -> r_St_5_Eco)(false -> r_St_5_Frost_Protection);
  v_114 = merge ck_2_0 (true -> r_St_5_High)(false -> r_St_5_Off);
  r = merge ck_1 (true -> v_113)(false -> v_114);
  ck_2_1 = (ck_2 when true(ck_1));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_5_Off_2_1 = (s_St_5_Off_2 when true(s_St_5_Off_1));
  s_St_5_Off_2_0 = (s_St_5_Off_2 when false(s_St_5_Off_1));
  s_St_5_Frost_Protection_2_1 =
    (s_St_5_Frost_Protection_2 when true(s_St_5_Frost_Protection_1));
  s_St_5_Frost_Protection_2_0 =
    (s_St_5_Frost_Protection_2 when false(s_St_5_Frost_Protection_1));
  s_St_5_Eco_2_1 = (s_St_5_Eco_2 when true(s_St_5_Eco_1));
  s_St_5_Eco_2_0 = (s_St_5_Eco_2 when false(s_St_5_Eco_1));
  s_St_5_High_2_1 = (s_St_5_High_2 when true(s_St_5_High_1));
  s_St_5_High_2_0 = (s_St_5_High_2 when false(s_St_5_High_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_2_0 = (ns_2 when false(ns_1));
  s_2_1 = (s_2 when true(s_1));
  s_2_0 = (s_2 when false(s_1))
tel

node washing_machine(finish : bool; start : bool; c_wash : bool)
returns (wash_state : int; wash_power : int)
var v_150 : bool; v_149 : bool; v_148 : bool; v_147 : bool; v_146 : bool;
    v_145 : bool; v_144 : bool; v_143 : bool; v_142 : bool; v_141 : bool;
    v_140 : bool; v_139 : bool; v_138 : bool; v_137 : bool; v_136 : bool;
    v_135 : bool; v_134 : bool; v_133 : bool; v_132 : bool; v_131 : bool;
    v_130 : bool; v_129 : bool; v_128 : bool; v_127 : bool; v_126 : int;
    v_125 : int; v_124 : int; v_123 : int; v_122 : int; v_121 : int;
    v_120 : int; v_119 : int; v_118 : int; v_117 : int; v_116 : int;
    v_115 : int; ns_St_6_Standby_2_0 : bool; ns_St_6_Standby_3_0_0 : bool;
    ns_St_6_Standby_3_0_1 : bool; ns_St_6_Standby_2_1 : bool;
    ns_St_6_Standby_3_1_0 : bool; ns_St_6_Standby_3_1_1 : bool;
    ns_St_6_Spin_2_0 : bool; ns_St_6_Spin_3_0_0 : bool;
    ns_St_6_Spin_3_0_1 : bool; ns_St_6_Spin_2_1 : bool;
    ns_St_6_Spin_3_1_0 : bool; ns_St_6_Spin_3_1_1 : bool;
    ns_St_6_Rinse_2_0 : bool; ns_St_6_Rinse_3_0_0 : bool;
    ns_St_6_Rinse_3_0_1 : bool; ns_St_6_Rinse_2_1 : bool;
    ns_St_6_Rinse_3_1_0 : bool; ns_St_6_Rinse_3_1_1 : bool;
    ns_St_6_Washing_2_0 : bool; ns_St_6_Washing_3_0_0 : bool;
    ns_St_6_Washing_3_0_1 : bool; ns_St_6_Washing_2_1 : bool;
    ns_St_6_Washing_3_1_0 : bool; ns_St_6_Washing_3_1_1 : bool;
    ns_St_6_Water_fill_2_0 : bool; ns_St_6_Water_fill_3_0_0 : bool;
    ns_St_6_Water_fill_3_0_1 : bool; ns_St_6_Water_fill_2_1 : bool;
    ns_St_6_Water_fill_3_1_0 : bool; ns_St_6_Water_fill_3_1_1 : bool;
    ns_St_6_Off_2_0 : bool; ns_St_6_Off_3_0_0 : bool;
    ns_St_6_Off_3_0_1 : bool; ns_St_6_Off_2_1 : bool;
    ns_St_6_Off_3_1_0 : bool; ns_St_6_Off_3_1_1 : bool; ck_7_2_0 : bool;
    ck_7_3_0_0 : bool; ck_7_3_0_1 : bool; ck_7_2_1 : bool; ck_7_3_1_0 : bool;
    ck_7_3_1_1 : bool; nr_St_6_Standby : bool; ns_St_6_Standby_3 : bool;
    ns_St_6_Standby_2 : bool; ns_St_6_Standby_1 : bool;
    wash_power_St_6_Standby : int; wash_state_St_6_Standby : int;
    nr_St_6_Spin : bool; ns_St_6_Spin_3 : bool; ns_St_6_Spin_2 : bool;
    ns_St_6_Spin_1 : bool; wash_power_St_6_Spin : int;
    wash_state_St_6_Spin : int; nr_St_6_Rinse : bool; ns_St_6_Rinse_3 : bool;
    ns_St_6_Rinse_2 : bool; ns_St_6_Rinse_1 : bool;
    wash_power_St_6_Rinse : int; wash_state_St_6_Rinse : int;
    nr_St_6_Washing : bool; ns_St_6_Washing_3 : bool;
    ns_St_6_Washing_2 : bool; ns_St_6_Washing_1 : bool;
    wash_power_St_6_Washing : int; wash_state_St_6_Washing : int;
    nr_St_6_Water_fill : bool; ns_St_6_Water_fill_3 : bool;
    ns_St_6_Water_fill_2 : bool; ns_St_6_Water_fill_1 : bool;
    wash_power_St_6_Water_fill : int; wash_state_St_6_Water_fill : int;
    nr_St_6_Off : bool; ns_St_6_Off_3 : bool; ns_St_6_Off_2 : bool;
    ns_St_6_Off_1 : bool; wash_power_St_6_Off : int;
    wash_state_St_6_Off : int; ck_7_3 : bool; ck_7_2 : bool; ck_7_1 : bool;
    v_39_2_0 : bool; v_39_3_0_0 : bool; v_39_3_0_1 : bool; v_39_2_1 : bool;
    v_39_3_1_0 : bool; v_39_3_1_1 : bool; v_40 : bool; v_39_3 : bool;
    v_39_2 : bool; v_39_1 : bool; v_38 : bool; v_37 : bool; v : bool;
    v_177 : bool; v_176 : bool; v_175 : bool; v_174 : bool; v_173 : bool;
    v_172 : bool; v_171 : bool; v_170 : bool; v_169 : bool; v_168 : bool;
    v_167 : bool; v_166 : bool; v_165 : bool; v_164 : bool; v_163 : bool;
    v_162 : bool; v_161 : bool; v_160 : bool; v_159 : bool; v_158 : bool;
    v_157 : bool; v_156 : bool; v_155 : bool; v_154 : bool; v_153 : bool;
    v_152 : bool; v_151 : bool; s_St_6_Standby_2_0 : bool;
    s_St_6_Standby_3_0_0 : bool; s_St_6_Standby_3_0_1 : bool;
    s_St_6_Standby_2_1 : bool; s_St_6_Standby_3_1_0 : bool;
    s_St_6_Standby_3_1_1 : bool; s_St_6_Spin_2_0 : bool;
    s_St_6_Spin_3_0_0 : bool; s_St_6_Spin_3_0_1 : bool;
    s_St_6_Spin_2_1 : bool; s_St_6_Spin_3_1_0 : bool;
    s_St_6_Spin_3_1_1 : bool; s_St_6_Rinse_2_0 : bool;
    s_St_6_Rinse_3_0_0 : bool; s_St_6_Rinse_3_0_1 : bool;
    s_St_6_Rinse_2_1 : bool; s_St_6_Rinse_3_1_0 : bool;
    s_St_6_Rinse_3_1_1 : bool; s_St_6_Washing_2_0 : bool;
    s_St_6_Washing_3_0_0 : bool; s_St_6_Washing_3_0_1 : bool;
    s_St_6_Washing_2_1 : bool; s_St_6_Washing_3_1_0 : bool;
    s_St_6_Washing_3_1_1 : bool; s_St_6_Water_fill_2_0 : bool;
    s_St_6_Water_fill_3_0_0 : bool; s_St_6_Water_fill_3_0_1 : bool;
    s_St_6_Water_fill_2_1 : bool; s_St_6_Water_fill_3_1_0 : bool;
    s_St_6_Water_fill_3_1_1 : bool; s_St_6_Off_2_0 : bool;
    s_St_6_Off_3_0_0 : bool; s_St_6_Off_3_0_1 : bool; s_St_6_Off_2_1 : bool;
    s_St_6_Off_3_1_0 : bool; s_St_6_Off_3_1_1 : bool; ck_2_0 : bool;
    ck_3_0_0 : bool; ck_3_0_1 : bool; ck_2_1 : bool; ck_3_1_0 : bool;
    ck_3_1_1 : bool; r_St_6_Standby : bool; s_St_6_Standby_3 : bool;
    s_St_6_Standby_2 : bool; s_St_6_Standby_1 : bool; r_St_6_Spin : bool;
    s_St_6_Spin_3 : bool; s_St_6_Spin_2 : bool; s_St_6_Spin_1 : bool;
    r_St_6_Rinse : bool; s_St_6_Rinse_3 : bool; s_St_6_Rinse_2 : bool;
    s_St_6_Rinse_1 : bool; r_St_6_Washing : bool; s_St_6_Washing_3 : bool;
    s_St_6_Washing_2 : bool; s_St_6_Washing_1 : bool;
    r_St_6_Water_fill : bool; s_St_6_Water_fill_3 : bool;
    s_St_6_Water_fill_2 : bool; s_St_6_Water_fill_1 : bool;
    r_St_6_Off : bool; s_St_6_Off_3 : bool; s_St_6_Off_2 : bool;
    s_St_6_Off_1 : bool; ck_3 : bool; ck_2 : bool; ck_1 : bool; s_2_0 : bool;
    s_3_0_0 : bool; s_3_0_1 : bool; s_2_1 : bool; s_3_1_0 : bool;
    s_3_1_1 : bool; ns_2_0 : bool; ns_3_0_0 : bool; ns_3_0_1 : bool;
    ns_2_1 : bool; ns_3_1_0 : bool; ns_3_1_1 : bool; s_3 : bool; s_2 : bool;
    s_1 : bool; ns_3 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool;
    pnr : bool;
let
  pnr = false fby nr;
  ck_7_1 = s_1;
  ck_7_2 = s_2;
  ck_7_3 = s_3;
  wash_state_St_6_Off = 0;
  wash_power_St_6_Off = 0;
  nr_St_6_Off = false;
  ns_St_6_Off_1 = true;
  ns_St_6_Off_2 = true;
  ns_St_6_Off_3 = true;
  wash_state_St_6_Water_fill = 1;
  wash_power_St_6_Water_fill = 15;
  nr_St_6_Water_fill = false;
  ns_St_6_Water_fill_1 = false;
  ns_St_6_Water_fill_2 = false;
  ns_St_6_Water_fill_3 = false;
  wash_state_St_6_Washing = 2;
  wash_power_St_6_Washing = 250;
  nr_St_6_Washing = false;
  ns_St_6_Washing_1 = false;
  ns_St_6_Washing_2 = true;
  ns_St_6_Washing_3 = false;
  wash_state_St_6_Rinse = 3;
  wash_power_St_6_Rinse = 200;
  nr_St_6_Rinse = false;
  ns_St_6_Rinse_1 = true;
  ns_St_6_Rinse_2 = true;
  ns_St_6_Rinse_3 = false;
  wash_state_St_6_Spin = 4;
  wash_power_St_6_Spin = 800;
  nr_St_6_Spin = false;
  ns_St_6_Spin_1 = true;
  ns_St_6_Spin_2 = false;
  ns_St_6_Spin_3 = false;
  wash_state_St_6_Standby = 5;
  wash_power_St_6_Standby = 0;
  nr_St_6_Standby = false;
  ns_St_6_Standby_1 = false;
  ns_St_6_Standby_2 = true;
  ns_St_6_Standby_3 = true;
  v_115 =
    merge ck_7_3_1_1
      (true -> wash_state_St_6_Off)(false -> wash_state_St_6_Rinse);
  v_116 =
    merge ck_7_3_1_0
      (true -> 
        (((0 when true(ck_7_1)) when false(ck_7_2_1)) when true(ck_7_3_1_0)))
      (false -> wash_state_St_6_Spin);
  v_117 = merge ck_7_2_1 (true -> v_115)(false -> v_116);
  v_118 =
    merge ck_7_3_0_1
      (true -> wash_state_St_6_Standby)(false -> wash_state_St_6_Washing);
  v_119 =
    merge ck_7_3_0_0
      (true -> 
        (((0 when false(ck_7_1)) when false(ck_7_2_0)) when true(ck_7_3_0_0)))
      (false -> wash_state_St_6_Water_fill);
  v_120 = merge ck_7_2_0 (true -> v_118)(false -> v_119);
  wash_state = merge ck_7_1 (true -> v_117)(false -> v_120);
  v_121 =
    merge ck_7_3_1_1
      (true -> wash_power_St_6_Off)(false -> wash_power_St_6_Rinse);
  v_122 =
    merge ck_7_3_1_0
      (true -> 
        (((0 when true(ck_7_1)) when false(ck_7_2_1)) when true(ck_7_3_1_0)))
      (false -> wash_power_St_6_Spin);
  v_123 = merge ck_7_2_1 (true -> v_121)(false -> v_122);
  v_124 =
    merge ck_7_3_0_1
      (true -> wash_power_St_6_Standby)(false -> wash_power_St_6_Washing);
  v_125 =
    merge ck_7_3_0_0
      (true -> 
        (((0 when false(ck_7_1)) when false(ck_7_2_0)) when true(ck_7_3_0_0)))
      (false -> wash_power_St_6_Water_fill);
  v_126 = merge ck_7_2_0 (true -> v_124)(false -> v_125);
  wash_power = merge ck_7_1 (true -> v_123)(false -> v_126);
  v_127 = merge ck_7_3_1_1 (true -> ns_St_6_Off_1)(false -> ns_St_6_Rinse_1);
  v_128 = merge ck_7_3_1_1 (true -> ns_St_6_Off_2)(false -> ns_St_6_Rinse_2);
  v_129 = merge ck_7_3_1_1 (true -> ns_St_6_Off_3)(false -> ns_St_6_Rinse_3);
  v_130 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> ns_St_6_Spin_1);
  v_131 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> ns_St_6_Spin_2);
  v_132 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> ns_St_6_Spin_3);
  v_133 =
    merge ck_7_3_0_1 (true -> ns_St_6_Standby_1)(false -> ns_St_6_Washing_1);
  v_134 =
    merge ck_7_3_0_1 (true -> ns_St_6_Standby_2)(false -> ns_St_6_Washing_2);
  v_135 =
    merge ck_7_3_0_1 (true -> ns_St_6_Standby_3)(false -> ns_St_6_Washing_3);
  v_136 =
    merge ck_7_3_0_0
      (true -> 
        (((true when false(ck_7_1)) when false(ck_7_2_0))
          when true(ck_7_3_0_0)))
      (false -> ns_St_6_Water_fill_1);
  v_137 =
    merge ck_7_3_0_0
      (true -> 
        (((true when false(ck_7_1)) when false(ck_7_2_0))
          when true(ck_7_3_0_0)))
      (false -> ns_St_6_Water_fill_2);
  v_138 =
    merge ck_7_3_0_0
      (true -> 
        (((true when false(ck_7_1)) when false(ck_7_2_0))
          when true(ck_7_3_0_0)))
      (false -> ns_St_6_Water_fill_3);
  v_139 = merge ck_7_2_1 (true -> v_127)(false -> v_130);
  v_140 = merge ck_7_2_1 (true -> v_128)(false -> v_131);
  v_141 = merge ck_7_2_1 (true -> v_129)(false -> v_132);
  v_142 = merge ck_7_2_0 (true -> v_133)(false -> v_136);
  v_143 = merge ck_7_2_0 (true -> v_134)(false -> v_137);
  v_144 = merge ck_7_2_0 (true -> v_135)(false -> v_138);
  ns_1 = merge ck_7_1 (true -> v_139)(false -> v_142);
  ns_2 = merge ck_7_1 (true -> v_140)(false -> v_143);
  ns_3 = merge ck_7_1 (true -> v_141)(false -> v_144);
  v_145 = merge ck_7_3_1_1 (true -> nr_St_6_Off)(false -> nr_St_6_Rinse);
  v_146 =
    merge ck_7_3_1_0
      (true -> 
        (((true when true(ck_7_1)) when false(ck_7_2_1))
          when true(ck_7_3_1_0)))
      (false -> nr_St_6_Spin);
  v_147 = merge ck_7_2_1 (true -> v_145)(false -> v_146);
  v_148 =
    merge ck_7_3_0_1 (true -> nr_St_6_Standby)(false -> nr_St_6_Washing);
  v_149 =
    merge ck_7_3_0_0
      (true -> 
        (((true when false(ck_7_1)) when false(ck_7_2_0))
          when true(ck_7_3_0_0)))
      (false -> nr_St_6_Water_fill);
  v_150 = merge ck_7_2_0 (true -> v_148)(false -> v_149);
  nr = merge ck_7_1 (true -> v_147)(false -> v_150);
  ck_7_3_1_1 = ((ck_7_3 when true(ck_7_1)) when true(ck_7_2_1));
  ck_7_3_1_0 = ((ck_7_3 when true(ck_7_1)) when false(ck_7_2_1));
  ck_7_2_1 = (ck_7_2 when true(ck_7_1));
  ck_7_3_0_1 = ((ck_7_3 when false(ck_7_1)) when true(ck_7_2_0));
  ck_7_3_0_0 = ((ck_7_3 when false(ck_7_1)) when false(ck_7_2_0));
  ck_7_2_0 = (ck_7_2 when false(ck_7_1));
  ns_St_6_Off_3_1_1 =
    ((ns_St_6_Off_3 when true(ns_St_6_Off_1)) when true(ns_St_6_Off_2_1));
  ns_St_6_Off_3_1_0 =
    ((ns_St_6_Off_3 when true(ns_St_6_Off_1)) when false(ns_St_6_Off_2_1));
  ns_St_6_Off_2_1 = (ns_St_6_Off_2 when true(ns_St_6_Off_1));
  ns_St_6_Off_3_0_1 =
    ((ns_St_6_Off_3 when false(ns_St_6_Off_1)) when true(ns_St_6_Off_2_0));
  ns_St_6_Off_3_0_0 =
    ((ns_St_6_Off_3 when false(ns_St_6_Off_1)) when false(ns_St_6_Off_2_0));
  ns_St_6_Off_2_0 = (ns_St_6_Off_2 when false(ns_St_6_Off_1));
  ns_St_6_Water_fill_3_1_1 =
    ((ns_St_6_Water_fill_3 when true(ns_St_6_Water_fill_1))
      when true(ns_St_6_Water_fill_2_1));
  ns_St_6_Water_fill_3_1_0 =
    ((ns_St_6_Water_fill_3 when true(ns_St_6_Water_fill_1))
      when false(ns_St_6_Water_fill_2_1));
  ns_St_6_Water_fill_2_1 =
    (ns_St_6_Water_fill_2 when true(ns_St_6_Water_fill_1));
  ns_St_6_Water_fill_3_0_1 =
    ((ns_St_6_Water_fill_3 when false(ns_St_6_Water_fill_1))
      when true(ns_St_6_Water_fill_2_0));
  ns_St_6_Water_fill_3_0_0 =
    ((ns_St_6_Water_fill_3 when false(ns_St_6_Water_fill_1))
      when false(ns_St_6_Water_fill_2_0));
  ns_St_6_Water_fill_2_0 =
    (ns_St_6_Water_fill_2 when false(ns_St_6_Water_fill_1));
  ns_St_6_Washing_3_1_1 =
    ((ns_St_6_Washing_3 when true(ns_St_6_Washing_1))
      when true(ns_St_6_Washing_2_1));
  ns_St_6_Washing_3_1_0 =
    ((ns_St_6_Washing_3 when true(ns_St_6_Washing_1))
      when false(ns_St_6_Washing_2_1));
  ns_St_6_Washing_2_1 = (ns_St_6_Washing_2 when true(ns_St_6_Washing_1));
  ns_St_6_Washing_3_0_1 =
    ((ns_St_6_Washing_3 when false(ns_St_6_Washing_1))
      when true(ns_St_6_Washing_2_0));
  ns_St_6_Washing_3_0_0 =
    ((ns_St_6_Washing_3 when false(ns_St_6_Washing_1))
      when false(ns_St_6_Washing_2_0));
  ns_St_6_Washing_2_0 = (ns_St_6_Washing_2 when false(ns_St_6_Washing_1));
  ns_St_6_Rinse_3_1_1 =
    ((ns_St_6_Rinse_3 when true(ns_St_6_Rinse_1))
      when true(ns_St_6_Rinse_2_1));
  ns_St_6_Rinse_3_1_0 =
    ((ns_St_6_Rinse_3 when true(ns_St_6_Rinse_1))
      when false(ns_St_6_Rinse_2_1));
  ns_St_6_Rinse_2_1 = (ns_St_6_Rinse_2 when true(ns_St_6_Rinse_1));
  ns_St_6_Rinse_3_0_1 =
    ((ns_St_6_Rinse_3 when false(ns_St_6_Rinse_1))
      when true(ns_St_6_Rinse_2_0));
  ns_St_6_Rinse_3_0_0 =
    ((ns_St_6_Rinse_3 when false(ns_St_6_Rinse_1))
      when false(ns_St_6_Rinse_2_0));
  ns_St_6_Rinse_2_0 = (ns_St_6_Rinse_2 when false(ns_St_6_Rinse_1));
  ns_St_6_Spin_3_1_1 =
    ((ns_St_6_Spin_3 when true(ns_St_6_Spin_1)) when true(ns_St_6_Spin_2_1));
  ns_St_6_Spin_3_1_0 =
    ((ns_St_6_Spin_3 when true(ns_St_6_Spin_1)) when false(ns_St_6_Spin_2_1));
  ns_St_6_Spin_2_1 = (ns_St_6_Spin_2 when true(ns_St_6_Spin_1));
  ns_St_6_Spin_3_0_1 =
    ((ns_St_6_Spin_3 when false(ns_St_6_Spin_1)) when true(ns_St_6_Spin_2_0));
  ns_St_6_Spin_3_0_0 =
    ((ns_St_6_Spin_3 when false(ns_St_6_Spin_1))
      when false(ns_St_6_Spin_2_0));
  ns_St_6_Spin_2_0 = (ns_St_6_Spin_2 when false(ns_St_6_Spin_1));
  ns_St_6_Standby_3_1_1 =
    ((ns_St_6_Standby_3 when true(ns_St_6_Standby_1))
      when true(ns_St_6_Standby_2_1));
  ns_St_6_Standby_3_1_0 =
    ((ns_St_6_Standby_3 when true(ns_St_6_Standby_1))
      when false(ns_St_6_Standby_2_1));
  ns_St_6_Standby_2_1 = (ns_St_6_Standby_2 when true(ns_St_6_Standby_1));
  ns_St_6_Standby_3_0_1 =
    ((ns_St_6_Standby_3 when false(ns_St_6_Standby_1))
      when true(ns_St_6_Standby_2_0));
  ns_St_6_Standby_3_0_0 =
    ((ns_St_6_Standby_3 when false(ns_St_6_Standby_1))
      when false(ns_St_6_Standby_2_0));
  ns_St_6_Standby_2_0 = (ns_St_6_Standby_2 when false(ns_St_6_Standby_1));
  v_151 = true fby ns_1;
  v_152 = true fby ns_2;
  v_153 = true fby ns_3;
  ck_1 = v_151;
  ck_2 = v_152;
  ck_3 = v_153;
  r_St_6_Off =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1));
  s_St_6_Off_1 =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  s_St_6_Off_2 =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  s_St_6_Off_3 =
    if (((start when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  r_St_6_Water_fill = if v then true else v_40;
  s_St_6_Water_fill_1 = if v then false else v_39_1;
  s_St_6_Water_fill_2 = if v then true else v_39_2;
  s_St_6_Water_fill_3 = if v then false else v_39_3;
  v_40 =
    if v_38
    then true
    else (((pnr when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0));
  v_39_1 = if v_38 then false else false;
  v_39_2 = if v_38 then true else false;
  v_39_3 = if v_38 then true else false;
  v_38 =
    ((((finish when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)) &
     v_37);
  v_37 =
    not
    ((((c_wash when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)));
  v =
    ((((finish when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)) &
     (((c_wash when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0)));
  v_39_3_1_1 = ((v_39_3 when true(v_39_1)) when true(v_39_2_1));
  v_39_3_1_0 = ((v_39_3 when true(v_39_1)) when false(v_39_2_1));
  v_39_2_1 = (v_39_2 when true(v_39_1));
  v_39_3_0_1 = ((v_39_3 when false(v_39_1)) when true(v_39_2_0));
  v_39_3_0_0 = ((v_39_3 when false(v_39_1)) when false(v_39_2_0));
  v_39_2_0 = (v_39_2 when false(v_39_1));
  r_St_6_Washing =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else (((pnr when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1));
  s_St_6_Washing_1 =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else false;
  s_St_6_Washing_2 =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then true
    else true;
  s_St_6_Washing_3 =
    if (((finish when false(ck_1)) when true(ck_2_0)) when false(ck_3_0_1))
    then false
    else false;
  r_St_6_Rinse =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1));
  s_St_6_Rinse_1 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else true;
  s_St_6_Rinse_2 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else true;
  s_St_6_Rinse_3 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else false;
  r_St_6_Spin =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else (((pnr when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0));
  s_St_6_Spin_1 =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else true;
  s_St_6_Spin_2 =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else false;
  s_St_6_Spin_3 =
    if (((finish when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0))
    then true
    else false;
  r_St_6_Standby =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then true
    else (((pnr when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1));
  s_St_6_Standby_1 =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then false
    else false;
  s_St_6_Standby_2 =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then true
    else true;
  s_St_6_Standby_3 =
    if (((c_wash when false(ck_1)) when true(ck_2_0)) when true(ck_3_0_1))
    then false
    else true;
  v_154 = merge ck_3_1_1 (true -> s_St_6_Off_1)(false -> s_St_6_Rinse_1);
  v_155 = merge ck_3_1_1 (true -> s_St_6_Off_2)(false -> s_St_6_Rinse_2);
  v_156 = merge ck_3_1_1 (true -> s_St_6_Off_3)(false -> s_St_6_Rinse_3);
  v_157 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_6_Spin_1);
  v_158 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_6_Spin_2);
  v_159 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_6_Spin_3);
  v_160 =
    merge ck_3_0_1 (true -> s_St_6_Standby_1)(false -> s_St_6_Washing_1);
  v_161 =
    merge ck_3_0_1 (true -> s_St_6_Standby_2)(false -> s_St_6_Washing_2);
  v_162 =
    merge ck_3_0_1 (true -> s_St_6_Standby_3)(false -> s_St_6_Washing_3);
  v_163 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_6_Water_fill_1);
  v_164 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_6_Water_fill_2);
  v_165 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> s_St_6_Water_fill_3);
  v_166 = merge ck_2_1 (true -> v_154)(false -> v_157);
  v_167 = merge ck_2_1 (true -> v_155)(false -> v_158);
  v_168 = merge ck_2_1 (true -> v_156)(false -> v_159);
  v_169 = merge ck_2_0 (true -> v_160)(false -> v_163);
  v_170 = merge ck_2_0 (true -> v_161)(false -> v_164);
  v_171 = merge ck_2_0 (true -> v_162)(false -> v_165);
  s_1 = merge ck_1 (true -> v_166)(false -> v_169);
  s_2 = merge ck_1 (true -> v_167)(false -> v_170);
  s_3 = merge ck_1 (true -> v_168)(false -> v_171);
  v_172 = merge ck_3_1_1 (true -> r_St_6_Off)(false -> r_St_6_Rinse);
  v_173 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> r_St_6_Spin);
  v_174 = merge ck_2_1 (true -> v_172)(false -> v_173);
  v_175 = merge ck_3_0_1 (true -> r_St_6_Standby)(false -> r_St_6_Washing);
  v_176 =
    merge ck_3_0_0
      (true -> 
        (((true when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0)))
      (false -> r_St_6_Water_fill);
  v_177 = merge ck_2_0 (true -> v_175)(false -> v_176);
  r = merge ck_1 (true -> v_174)(false -> v_177);
  ck_3_1_1 = ((ck_3 when true(ck_1)) when true(ck_2_1));
  ck_3_1_0 = ((ck_3 when true(ck_1)) when false(ck_2_1));
  ck_2_1 = (ck_2 when true(ck_1));
  ck_3_0_1 = ((ck_3 when false(ck_1)) when true(ck_2_0));
  ck_3_0_0 = ((ck_3 when false(ck_1)) when false(ck_2_0));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_6_Off_3_1_1 =
    ((s_St_6_Off_3 when true(s_St_6_Off_1)) when true(s_St_6_Off_2_1));
  s_St_6_Off_3_1_0 =
    ((s_St_6_Off_3 when true(s_St_6_Off_1)) when false(s_St_6_Off_2_1));
  s_St_6_Off_2_1 = (s_St_6_Off_2 when true(s_St_6_Off_1));
  s_St_6_Off_3_0_1 =
    ((s_St_6_Off_3 when false(s_St_6_Off_1)) when true(s_St_6_Off_2_0));
  s_St_6_Off_3_0_0 =
    ((s_St_6_Off_3 when false(s_St_6_Off_1)) when false(s_St_6_Off_2_0));
  s_St_6_Off_2_0 = (s_St_6_Off_2 when false(s_St_6_Off_1));
  s_St_6_Water_fill_3_1_1 =
    ((s_St_6_Water_fill_3 when true(s_St_6_Water_fill_1))
      when true(s_St_6_Water_fill_2_1));
  s_St_6_Water_fill_3_1_0 =
    ((s_St_6_Water_fill_3 when true(s_St_6_Water_fill_1))
      when false(s_St_6_Water_fill_2_1));
  s_St_6_Water_fill_2_1 =
    (s_St_6_Water_fill_2 when true(s_St_6_Water_fill_1));
  s_St_6_Water_fill_3_0_1 =
    ((s_St_6_Water_fill_3 when false(s_St_6_Water_fill_1))
      when true(s_St_6_Water_fill_2_0));
  s_St_6_Water_fill_3_0_0 =
    ((s_St_6_Water_fill_3 when false(s_St_6_Water_fill_1))
      when false(s_St_6_Water_fill_2_0));
  s_St_6_Water_fill_2_0 =
    (s_St_6_Water_fill_2 when false(s_St_6_Water_fill_1));
  s_St_6_Washing_3_1_1 =
    ((s_St_6_Washing_3 when true(s_St_6_Washing_1))
      when true(s_St_6_Washing_2_1));
  s_St_6_Washing_3_1_0 =
    ((s_St_6_Washing_3 when true(s_St_6_Washing_1))
      when false(s_St_6_Washing_2_1));
  s_St_6_Washing_2_1 = (s_St_6_Washing_2 when true(s_St_6_Washing_1));
  s_St_6_Washing_3_0_1 =
    ((s_St_6_Washing_3 when false(s_St_6_Washing_1))
      when true(s_St_6_Washing_2_0));
  s_St_6_Washing_3_0_0 =
    ((s_St_6_Washing_3 when false(s_St_6_Washing_1))
      when false(s_St_6_Washing_2_0));
  s_St_6_Washing_2_0 = (s_St_6_Washing_2 when false(s_St_6_Washing_1));
  s_St_6_Rinse_3_1_1 =
    ((s_St_6_Rinse_3 when true(s_St_6_Rinse_1)) when true(s_St_6_Rinse_2_1));
  s_St_6_Rinse_3_1_0 =
    ((s_St_6_Rinse_3 when true(s_St_6_Rinse_1)) when false(s_St_6_Rinse_2_1));
  s_St_6_Rinse_2_1 = (s_St_6_Rinse_2 when true(s_St_6_Rinse_1));
  s_St_6_Rinse_3_0_1 =
    ((s_St_6_Rinse_3 when false(s_St_6_Rinse_1)) when true(s_St_6_Rinse_2_0));
  s_St_6_Rinse_3_0_0 =
    ((s_St_6_Rinse_3 when false(s_St_6_Rinse_1))
      when false(s_St_6_Rinse_2_0));
  s_St_6_Rinse_2_0 = (s_St_6_Rinse_2 when false(s_St_6_Rinse_1));
  s_St_6_Spin_3_1_1 =
    ((s_St_6_Spin_3 when true(s_St_6_Spin_1)) when true(s_St_6_Spin_2_1));
  s_St_6_Spin_3_1_0 =
    ((s_St_6_Spin_3 when true(s_St_6_Spin_1)) when false(s_St_6_Spin_2_1));
  s_St_6_Spin_2_1 = (s_St_6_Spin_2 when true(s_St_6_Spin_1));
  s_St_6_Spin_3_0_1 =
    ((s_St_6_Spin_3 when false(s_St_6_Spin_1)) when true(s_St_6_Spin_2_0));
  s_St_6_Spin_3_0_0 =
    ((s_St_6_Spin_3 when false(s_St_6_Spin_1)) when false(s_St_6_Spin_2_0));
  s_St_6_Spin_2_0 = (s_St_6_Spin_2 when false(s_St_6_Spin_1));
  s_St_6_Standby_3_1_1 =
    ((s_St_6_Standby_3 when true(s_St_6_Standby_1))
      when true(s_St_6_Standby_2_1));
  s_St_6_Standby_3_1_0 =
    ((s_St_6_Standby_3 when true(s_St_6_Standby_1))
      when false(s_St_6_Standby_2_1));
  s_St_6_Standby_2_1 = (s_St_6_Standby_2 when true(s_St_6_Standby_1));
  s_St_6_Standby_3_0_1 =
    ((s_St_6_Standby_3 when false(s_St_6_Standby_1))
      when true(s_St_6_Standby_2_0));
  s_St_6_Standby_3_0_0 =
    ((s_St_6_Standby_3 when false(s_St_6_Standby_1))
      when false(s_St_6_Standby_2_0));
  s_St_6_Standby_2_0 = (s_St_6_Standby_2 when false(s_St_6_Standby_1));
  ns_3_1_1 = ((ns_3 when true(ns_1)) when true(ns_2_1));
  ns_3_1_0 = ((ns_3 when true(ns_1)) when false(ns_2_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_3_0_1 = ((ns_3 when false(ns_1)) when true(ns_2_0));
  ns_3_0_0 = ((ns_3 when false(ns_1)) when false(ns_2_0));
  ns_2_0 = (ns_2 when false(ns_1));
  s_3_1_1 = ((s_3 when true(s_1)) when true(s_2_1));
  s_3_1_0 = ((s_3 when true(s_1)) when false(s_2_1));
  s_2_1 = (s_2 when true(s_1));
  s_3_0_1 = ((s_3 when false(s_1)) when true(s_2_0));
  s_3_0_0 = ((s_3 when false(s_1)) when false(s_2_0));
  s_2_0 = (s_2 when false(s_1))
tel

node oven(finish : bool; start : bool; c_oven : bool; cold : bool;
           temp_ok : bool)
returns (oven_state : int; oven_power : int)
var v_207 : bool; v_206 : bool; v_205 : bool; v_204 : bool; v_203 : bool;
    v_202 : bool; v_201 : bool; v_200 : bool; v_199 : bool; v_198 : bool;
    v_197 : bool; v_196 : bool; v_195 : bool; v_194 : bool; v_193 : bool;
    v_192 : bool; v_191 : bool; v_190 : bool; v_189 : bool; v_188 : bool;
    v_187 : int; v_186 : int; v_185 : int; v_184 : int; v_183 : int;
    v_182 : int; v_181 : int; v_180 : int; v_179 : int; v_178 : int;
    ns_St_7_Standby_2_0 : bool; ns_St_7_Standby_3_0_0 : bool;
    ns_St_7_Standby_3_0_1 : bool; ns_St_7_Standby_2_1 : bool;
    ns_St_7_Standby_3_1_0 : bool; ns_St_7_Standby_3_1_1 : bool;
    ns_St_7_Reheat_2_0 : bool; ns_St_7_Reheat_3_0_0 : bool;
    ns_St_7_Reheat_3_0_1 : bool; ns_St_7_Reheat_2_1 : bool;
    ns_St_7_Reheat_3_1_0 : bool; ns_St_7_Reheat_3_1_1 : bool;
    ns_St_7_Maintain_2_0 : bool; ns_St_7_Maintain_3_0_0 : bool;
    ns_St_7_Maintain_3_0_1 : bool; ns_St_7_Maintain_2_1 : bool;
    ns_St_7_Maintain_3_1_0 : bool; ns_St_7_Maintain_3_1_1 : bool;
    ns_St_7_Heat_2_0 : bool; ns_St_7_Heat_3_0_0 : bool;
    ns_St_7_Heat_3_0_1 : bool; ns_St_7_Heat_2_1 : bool;
    ns_St_7_Heat_3_1_0 : bool; ns_St_7_Heat_3_1_1 : bool;
    ns_St_7_Off_2_0 : bool; ns_St_7_Off_3_0_0 : bool;
    ns_St_7_Off_3_0_1 : bool; ns_St_7_Off_2_1 : bool;
    ns_St_7_Off_3_1_0 : bool; ns_St_7_Off_3_1_1 : bool; ck_8_2_0 : bool;
    ck_8_3_0_0 : bool; ck_8_3_0_1 : bool; ck_8_2_1 : bool; ck_8_3_1_0 : bool;
    ck_8_3_1_1 : bool; nr_St_7_Standby : bool; ns_St_7_Standby_3 : bool;
    ns_St_7_Standby_2 : bool; ns_St_7_Standby_1 : bool;
    oven_power_St_7_Standby : int; oven_state_St_7_Standby : int;
    nr_St_7_Reheat : bool; ns_St_7_Reheat_3 : bool; ns_St_7_Reheat_2 : bool;
    ns_St_7_Reheat_1 : bool; oven_power_St_7_Reheat : int;
    oven_state_St_7_Reheat : int; nr_St_7_Maintain : bool;
    ns_St_7_Maintain_3 : bool; ns_St_7_Maintain_2 : bool;
    ns_St_7_Maintain_1 : bool; oven_power_St_7_Maintain : int;
    oven_state_St_7_Maintain : int; nr_St_7_Heat : bool;
    ns_St_7_Heat_3 : bool; ns_St_7_Heat_2 : bool; ns_St_7_Heat_1 : bool;
    oven_power_St_7_Heat : int; oven_state_St_7_Heat : int;
    nr_St_7_Off : bool; ns_St_7_Off_3 : bool; ns_St_7_Off_2 : bool;
    ns_St_7_Off_1 : bool; oven_power_St_7_Off : int;
    oven_state_St_7_Off : int; ck_8_3 : bool; ck_8_2 : bool; ck_8_1 : bool;
    v_50_2_0 : bool; v_50_3_0_0 : bool; v_50_3_0_1 : bool; v_50_2_1 : bool;
    v_50_3_1_0 : bool; v_50_3_1_1 : bool; v_51 : bool; v_50_3 : bool;
    v_50_2 : bool; v_50_1 : bool; v_49 : bool; v_48 : bool; v_47 : bool;
    v_45_2_0 : bool; v_45_3_0_0 : bool; v_45_3_0_1 : bool; v_45_2_1 : bool;
    v_45_3_1_0 : bool; v_45_3_1_1 : bool; v_46 : bool; v_45_3 : bool;
    v_45_2 : bool; v_45_1 : bool; v_43_2_0 : bool; v_43_3_0_0 : bool;
    v_43_3_0_1 : bool; v_43_2_1 : bool; v_43_3_1_0 : bool; v_43_3_1_1 : bool;
    v_44 : bool; v_43_3 : bool; v_43_2 : bool; v_43_1 : bool; v_42 : bool;
    v_2_0 : bool; v_3_0_0 : bool; v_3_0_1 : bool; v_2_1 : bool;
    v_3_1_0 : bool; v_3_1_1 : bool; v_41 : bool; v_3 : bool; v_2 : bool;
    v_1 : bool; v_230 : bool; v_229 : bool; v_228 : bool; v_227 : bool;
    v_226 : bool; v_225 : bool; v_224 : bool; v_223 : bool; v_222 : bool;
    v_221 : bool; v_220 : bool; v_219 : bool; v_218 : bool; v_217 : bool;
    v_216 : bool; v_215 : bool; v_214 : bool; v_213 : bool; v_212 : bool;
    v_211 : bool; v_210 : bool; v_209 : bool; v_208 : bool;
    s_St_7_Standby_2_0 : bool; s_St_7_Standby_3_0_0 : bool;
    s_St_7_Standby_3_0_1 : bool; s_St_7_Standby_2_1 : bool;
    s_St_7_Standby_3_1_0 : bool; s_St_7_Standby_3_1_1 : bool;
    s_St_7_Reheat_2_0 : bool; s_St_7_Reheat_3_0_0 : bool;
    s_St_7_Reheat_3_0_1 : bool; s_St_7_Reheat_2_1 : bool;
    s_St_7_Reheat_3_1_0 : bool; s_St_7_Reheat_3_1_1 : bool;
    s_St_7_Maintain_2_0 : bool; s_St_7_Maintain_3_0_0 : bool;
    s_St_7_Maintain_3_0_1 : bool; s_St_7_Maintain_2_1 : bool;
    s_St_7_Maintain_3_1_0 : bool; s_St_7_Maintain_3_1_1 : bool;
    s_St_7_Heat_2_0 : bool; s_St_7_Heat_3_0_0 : bool;
    s_St_7_Heat_3_0_1 : bool; s_St_7_Heat_2_1 : bool;
    s_St_7_Heat_3_1_0 : bool; s_St_7_Heat_3_1_1 : bool;
    s_St_7_Off_2_0 : bool; s_St_7_Off_3_0_0 : bool; s_St_7_Off_3_0_1 : bool;
    s_St_7_Off_2_1 : bool; s_St_7_Off_3_1_0 : bool; s_St_7_Off_3_1_1 : bool;
    ck_2_0 : bool; ck_3_0_0 : bool; ck_3_0_1 : bool; ck_2_1 : bool;
    ck_3_1_0 : bool; ck_3_1_1 : bool; r_St_7_Standby : bool;
    s_St_7_Standby_3 : bool; s_St_7_Standby_2 : bool;
    s_St_7_Standby_1 : bool; r_St_7_Reheat : bool; s_St_7_Reheat_3 : bool;
    s_St_7_Reheat_2 : bool; s_St_7_Reheat_1 : bool; r_St_7_Maintain : bool;
    s_St_7_Maintain_3 : bool; s_St_7_Maintain_2 : bool;
    s_St_7_Maintain_1 : bool; r_St_7_Heat : bool; s_St_7_Heat_3 : bool;
    s_St_7_Heat_2 : bool; s_St_7_Heat_1 : bool; r_St_7_Off : bool;
    s_St_7_Off_3 : bool; s_St_7_Off_2 : bool; s_St_7_Off_1 : bool;
    ck_3 : bool; ck_2 : bool; ck_1 : bool; s_2_0 : bool; s_3_0_0 : bool;
    s_3_0_1 : bool; s_2_1 : bool; s_3_1_0 : bool; s_3_1_1 : bool;
    ns_2_0 : bool; ns_3_0_0 : bool; ns_3_0_1 : bool; ns_2_1 : bool;
    ns_3_1_0 : bool; ns_3_1_1 : bool; s_3 : bool; s_2 : bool; s_1 : bool;
    ns_3 : bool; ns_2 : bool; ns_1 : bool; r : bool; nr : bool; pnr : bool;
let
  pnr = false fby nr;
  ck_8_1 = s_1;
  ck_8_2 = s_2;
  ck_8_3 = s_3;
  oven_state_St_7_Off = 0;
  oven_power_St_7_Off = 0;
  nr_St_7_Off = false;
  ns_St_7_Off_1 = true;
  ns_St_7_Off_2 = false;
  ns_St_7_Off_3 = false;
  oven_state_St_7_Heat = 1;
  oven_power_St_7_Heat = 1500;
  nr_St_7_Heat = false;
  ns_St_7_Heat_1 = true;
  ns_St_7_Heat_2 = true;
  ns_St_7_Heat_3 = true;
  oven_state_St_7_Maintain = 2;
  oven_power_St_7_Maintain = 300;
  nr_St_7_Maintain = false;
  ns_St_7_Maintain_1 = true;
  ns_St_7_Maintain_2 = true;
  ns_St_7_Maintain_3 = false;
  oven_state_St_7_Reheat = 3;
  oven_power_St_7_Reheat = 1000;
  nr_St_7_Reheat = false;
  ns_St_7_Reheat_1 = false;
  ns_St_7_Reheat_2 = false;
  ns_St_7_Reheat_3 = true;
  oven_state_St_7_Standby = 4;
  oven_power_St_7_Standby = 0;
  nr_St_7_Standby = false;
  ns_St_7_Standby_1 = false;
  ns_St_7_Standby_2 = false;
  ns_St_7_Standby_3 = false;
  v_178 =
    merge ck_8_3_1_1
      (true -> oven_state_St_7_Heat)(false -> oven_state_St_7_Maintain);
  v_179 =
    merge ck_8_3_1_0
      (true -> 
        (((0 when true(ck_8_1)) when false(ck_8_2_1)) when true(ck_8_3_1_0)))
      (false -> oven_state_St_7_Off);
  v_180 = merge ck_8_2_1 (true -> v_178)(false -> v_179);
  v_181 =
    merge ck_8_3_0_0
      (true -> oven_state_St_7_Reheat)(false -> oven_state_St_7_Standby);
  v_182 =
    merge ck_8_2_0
      (true -> ((0 when false(ck_8_1)) when true(ck_8_2_0)))(false -> v_181);
  oven_state = merge ck_8_1 (true -> v_180)(false -> v_182);
  v_183 =
    merge ck_8_3_1_1
      (true -> oven_power_St_7_Heat)(false -> oven_power_St_7_Maintain);
  v_184 =
    merge ck_8_3_1_0
      (true -> 
        (((0 when true(ck_8_1)) when false(ck_8_2_1)) when true(ck_8_3_1_0)))
      (false -> oven_power_St_7_Off);
  v_185 = merge ck_8_2_1 (true -> v_183)(false -> v_184);
  v_186 =
    merge ck_8_3_0_0
      (true -> oven_power_St_7_Reheat)(false -> oven_power_St_7_Standby);
  v_187 =
    merge ck_8_2_0
      (true -> ((0 when false(ck_8_1)) when true(ck_8_2_0)))(false -> v_186);
  oven_power = merge ck_8_1 (true -> v_185)(false -> v_187);
  v_188 =
    merge ck_8_3_1_1 (true -> ns_St_7_Heat_1)(false -> ns_St_7_Maintain_1);
  v_189 =
    merge ck_8_3_1_1 (true -> ns_St_7_Heat_2)(false -> ns_St_7_Maintain_2);
  v_190 =
    merge ck_8_3_1_1 (true -> ns_St_7_Heat_3)(false -> ns_St_7_Maintain_3);
  v_191 =
    merge ck_8_3_1_0
      (true -> 
        (((true when true(ck_8_1)) when false(ck_8_2_1))
          when true(ck_8_3_1_0)))
      (false -> ns_St_7_Off_1);
  v_192 =
    merge ck_8_3_1_0
      (true -> 
        (((true when true(ck_8_1)) when false(ck_8_2_1))
          when true(ck_8_3_1_0)))
      (false -> ns_St_7_Off_2);
  v_193 =
    merge ck_8_3_1_0
      (true -> 
        (((true when true(ck_8_1)) when false(ck_8_2_1))
          when true(ck_8_3_1_0)))
      (false -> ns_St_7_Off_3);
  v_194 =
    merge ck_8_3_0_0 (true -> ns_St_7_Reheat_1)(false -> ns_St_7_Standby_1);
  v_195 =
    merge ck_8_3_0_0 (true -> ns_St_7_Reheat_2)(false -> ns_St_7_Standby_2);
  v_196 =
    merge ck_8_3_0_0 (true -> ns_St_7_Reheat_3)(false -> ns_St_7_Standby_3);
  v_197 = merge ck_8_2_1 (true -> v_188)(false -> v_191);
  v_198 = merge ck_8_2_1 (true -> v_189)(false -> v_192);
  v_199 = merge ck_8_2_1 (true -> v_190)(false -> v_193);
  v_200 =
    merge ck_8_2_0
      (true -> ((true when false(ck_8_1)) when true(ck_8_2_0)))
      (false -> v_194);
  v_201 =
    merge ck_8_2_0
      (true -> ((true when false(ck_8_1)) when true(ck_8_2_0)))
      (false -> v_195);
  v_202 =
    merge ck_8_2_0
      (true -> ((true when false(ck_8_1)) when true(ck_8_2_0)))
      (false -> v_196);
  ns_1 = merge ck_8_1 (true -> v_197)(false -> v_200);
  ns_2 = merge ck_8_1 (true -> v_198)(false -> v_201);
  ns_3 = merge ck_8_1 (true -> v_199)(false -> v_202);
  v_203 = merge ck_8_3_1_1 (true -> nr_St_7_Heat)(false -> nr_St_7_Maintain);
  v_204 =
    merge ck_8_3_1_0
      (true -> 
        (((true when true(ck_8_1)) when false(ck_8_2_1))
          when true(ck_8_3_1_0)))
      (false -> nr_St_7_Off);
  v_205 = merge ck_8_2_1 (true -> v_203)(false -> v_204);
  v_206 = merge ck_8_3_0_0 (true -> nr_St_7_Reheat)(false -> nr_St_7_Standby);
  v_207 =
    merge ck_8_2_0
      (true -> ((true when false(ck_8_1)) when true(ck_8_2_0)))
      (false -> v_206);
  nr = merge ck_8_1 (true -> v_205)(false -> v_207);
  ck_8_3_1_1 = ((ck_8_3 when true(ck_8_1)) when true(ck_8_2_1));
  ck_8_3_1_0 = ((ck_8_3 when true(ck_8_1)) when false(ck_8_2_1));
  ck_8_2_1 = (ck_8_2 when true(ck_8_1));
  ck_8_3_0_1 = ((ck_8_3 when false(ck_8_1)) when true(ck_8_2_0));
  ck_8_3_0_0 = ((ck_8_3 when false(ck_8_1)) when false(ck_8_2_0));
  ck_8_2_0 = (ck_8_2 when false(ck_8_1));
  ns_St_7_Off_3_1_1 =
    ((ns_St_7_Off_3 when true(ns_St_7_Off_1)) when true(ns_St_7_Off_2_1));
  ns_St_7_Off_3_1_0 =
    ((ns_St_7_Off_3 when true(ns_St_7_Off_1)) when false(ns_St_7_Off_2_1));
  ns_St_7_Off_2_1 = (ns_St_7_Off_2 when true(ns_St_7_Off_1));
  ns_St_7_Off_3_0_1 =
    ((ns_St_7_Off_3 when false(ns_St_7_Off_1)) when true(ns_St_7_Off_2_0));
  ns_St_7_Off_3_0_0 =
    ((ns_St_7_Off_3 when false(ns_St_7_Off_1)) when false(ns_St_7_Off_2_0));
  ns_St_7_Off_2_0 = (ns_St_7_Off_2 when false(ns_St_7_Off_1));
  ns_St_7_Heat_3_1_1 =
    ((ns_St_7_Heat_3 when true(ns_St_7_Heat_1)) when true(ns_St_7_Heat_2_1));
  ns_St_7_Heat_3_1_0 =
    ((ns_St_7_Heat_3 when true(ns_St_7_Heat_1)) when false(ns_St_7_Heat_2_1));
  ns_St_7_Heat_2_1 = (ns_St_7_Heat_2 when true(ns_St_7_Heat_1));
  ns_St_7_Heat_3_0_1 =
    ((ns_St_7_Heat_3 when false(ns_St_7_Heat_1)) when true(ns_St_7_Heat_2_0));
  ns_St_7_Heat_3_0_0 =
    ((ns_St_7_Heat_3 when false(ns_St_7_Heat_1))
      when false(ns_St_7_Heat_2_0));
  ns_St_7_Heat_2_0 = (ns_St_7_Heat_2 when false(ns_St_7_Heat_1));
  ns_St_7_Maintain_3_1_1 =
    ((ns_St_7_Maintain_3 when true(ns_St_7_Maintain_1))
      when true(ns_St_7_Maintain_2_1));
  ns_St_7_Maintain_3_1_0 =
    ((ns_St_7_Maintain_3 when true(ns_St_7_Maintain_1))
      when false(ns_St_7_Maintain_2_1));
  ns_St_7_Maintain_2_1 = (ns_St_7_Maintain_2 when true(ns_St_7_Maintain_1));
  ns_St_7_Maintain_3_0_1 =
    ((ns_St_7_Maintain_3 when false(ns_St_7_Maintain_1))
      when true(ns_St_7_Maintain_2_0));
  ns_St_7_Maintain_3_0_0 =
    ((ns_St_7_Maintain_3 when false(ns_St_7_Maintain_1))
      when false(ns_St_7_Maintain_2_0));
  ns_St_7_Maintain_2_0 = (ns_St_7_Maintain_2 when false(ns_St_7_Maintain_1));
  ns_St_7_Reheat_3_1_1 =
    ((ns_St_7_Reheat_3 when true(ns_St_7_Reheat_1))
      when true(ns_St_7_Reheat_2_1));
  ns_St_7_Reheat_3_1_0 =
    ((ns_St_7_Reheat_3 when true(ns_St_7_Reheat_1))
      when false(ns_St_7_Reheat_2_1));
  ns_St_7_Reheat_2_1 = (ns_St_7_Reheat_2 when true(ns_St_7_Reheat_1));
  ns_St_7_Reheat_3_0_1 =
    ((ns_St_7_Reheat_3 when false(ns_St_7_Reheat_1))
      when true(ns_St_7_Reheat_2_0));
  ns_St_7_Reheat_3_0_0 =
    ((ns_St_7_Reheat_3 when false(ns_St_7_Reheat_1))
      when false(ns_St_7_Reheat_2_0));
  ns_St_7_Reheat_2_0 = (ns_St_7_Reheat_2 when false(ns_St_7_Reheat_1));
  ns_St_7_Standby_3_1_1 =
    ((ns_St_7_Standby_3 when true(ns_St_7_Standby_1))
      when true(ns_St_7_Standby_2_1));
  ns_St_7_Standby_3_1_0 =
    ((ns_St_7_Standby_3 when true(ns_St_7_Standby_1))
      when false(ns_St_7_Standby_2_1));
  ns_St_7_Standby_2_1 = (ns_St_7_Standby_2 when true(ns_St_7_Standby_1));
  ns_St_7_Standby_3_0_1 =
    ((ns_St_7_Standby_3 when false(ns_St_7_Standby_1))
      when true(ns_St_7_Standby_2_0));
  ns_St_7_Standby_3_0_0 =
    ((ns_St_7_Standby_3 when false(ns_St_7_Standby_1))
      when false(ns_St_7_Standby_2_0));
  ns_St_7_Standby_2_0 = (ns_St_7_Standby_2 when false(ns_St_7_Standby_1));
  v_208 = true fby ns_1;
  v_209 = false fby ns_2;
  v_210 = false fby ns_3;
  ck_1 = v_208;
  ck_2 = v_209;
  ck_3 = v_210;
  r_St_7_Off = if v_47 then true else v_51;
  s_St_7_Off_1 = if v_47 then true else v_50_1;
  s_St_7_Off_2 = if v_47 then true else v_50_2;
  s_St_7_Off_3 = if v_47 then true else v_50_3;
  v_51 =
    if v_49
    then true
    else (((pnr when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0));
  v_50_1 = if v_49 then false else true;
  v_50_2 = if v_49 then false else false;
  v_50_3 = if v_49 then false else false;
  v_49 =
    ((((start when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)) &
     v_48);
  v_48 =
    not((((c_oven when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)));
  v_47 =
    ((((start when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)) &
     (((c_oven when true(ck_1)) when false(ck_2_1)) when false(ck_3_1_0)));
  v_50_3_1_1 = ((v_50_3 when true(v_50_1)) when true(v_50_2_1));
  v_50_3_1_0 = ((v_50_3 when true(v_50_1)) when false(v_50_2_1));
  v_50_2_1 = (v_50_2 when true(v_50_1));
  v_50_3_0_1 = ((v_50_3 when false(v_50_1)) when true(v_50_2_0));
  v_50_3_0_0 = ((v_50_3 when false(v_50_1)) when false(v_50_2_0));
  v_50_2_0 = (v_50_2 when false(v_50_1));
  r_St_7_Heat =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else v_46;
  s_St_7_Heat_1 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else v_45_1;
  s_St_7_Heat_2 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else v_45_2;
  s_St_7_Heat_3 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else v_45_3;
  v_46 =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1));
  v_45_1 =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else true;
  v_45_2 =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then true
    else true;
  v_45_3 =
    if (((temp_ok when true(ck_1)) when true(ck_2_1)) when true(ck_3_1_1))
    then false
    else true;
  v_45_3_1_1 = ((v_45_3 when true(v_45_1)) when true(v_45_2_1));
  v_45_3_1_0 = ((v_45_3 when true(v_45_1)) when false(v_45_2_1));
  v_45_2_1 = (v_45_2 when true(v_45_1));
  v_45_3_0_1 = ((v_45_3 when false(v_45_1)) when true(v_45_2_0));
  v_45_3_0_0 = ((v_45_3 when false(v_45_1)) when false(v_45_2_0));
  v_45_2_0 = (v_45_2 when false(v_45_1));
  r_St_7_Maintain =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else v_44;
  s_St_7_Maintain_1 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then true
    else v_43_1;
  s_St_7_Maintain_2 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else v_43_2;
  s_St_7_Maintain_3 =
    if (((finish when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1))
    then false
    else v_43_3;
  v_44 =
    if v_42
    then true
    else (((pnr when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1));
  v_43_1 = if v_42 then false else true;
  v_43_2 = if v_42 then false else true;
  v_43_3 = if v_42 then true else false;
  v_42 =
    ((((cold when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1)) &
     (((c_oven when true(ck_1)) when true(ck_2_1)) when false(ck_3_1_1)));
  v_43_3_1_1 = ((v_43_3 when true(v_43_1)) when true(v_43_2_1));
  v_43_3_1_0 = ((v_43_3 when true(v_43_1)) when false(v_43_2_1));
  v_43_2_1 = (v_43_2 when true(v_43_1));
  v_43_3_0_1 = ((v_43_3 when false(v_43_1)) when true(v_43_2_0));
  v_43_3_0_0 = ((v_43_3 when false(v_43_1)) when false(v_43_2_0));
  v_43_2_0 = (v_43_2 when false(v_43_1));
  r_St_7_Reheat =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else v_41;
  s_St_7_Reheat_1 =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else v_1;
  s_St_7_Reheat_2 =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else v_2;
  s_St_7_Reheat_3 =
    if (((temp_ok when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then false
    else v_3;
  v_41 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else (((pnr when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0));
  v_1 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then true
    else false;
  v_2 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then false
    else false;
  v_3 =
    if (((finish when false(ck_1)) when false(ck_2_0)) when true(ck_3_0_0))
    then false
    else true;
  v_3_1_1 = ((v_3 when true(v_1)) when true(v_2_1));
  v_3_1_0 = ((v_3 when true(v_1)) when false(v_2_1));
  v_2_1 = (v_2 when true(v_1));
  v_3_0_1 = ((v_3 when false(v_1)) when true(v_2_0));
  v_3_0_0 = ((v_3 when false(v_1)) when false(v_2_0));
  v_2_0 = (v_2 when false(v_1));
  r_St_7_Standby =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else (((pnr when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0));
  s_St_7_Standby_1 =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else false;
  s_St_7_Standby_2 =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else false;
  s_St_7_Standby_3 =
    if (((c_oven when false(ck_1)) when false(ck_2_0)) when false(ck_3_0_0))
    then true
    else false;
  v_211 = merge ck_3_1_1 (true -> s_St_7_Heat_1)(false -> s_St_7_Maintain_1);
  v_212 = merge ck_3_1_1 (true -> s_St_7_Heat_2)(false -> s_St_7_Maintain_2);
  v_213 = merge ck_3_1_1 (true -> s_St_7_Heat_3)(false -> s_St_7_Maintain_3);
  v_214 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_7_Off_1);
  v_215 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_7_Off_2);
  v_216 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> s_St_7_Off_3);
  v_217 = merge ck_3_0_0 (true -> s_St_7_Reheat_1)(false -> s_St_7_Standby_1);
  v_218 = merge ck_3_0_0 (true -> s_St_7_Reheat_2)(false -> s_St_7_Standby_2);
  v_219 = merge ck_3_0_0 (true -> s_St_7_Reheat_3)(false -> s_St_7_Standby_3);
  v_220 = merge ck_2_1 (true -> v_211)(false -> v_214);
  v_221 = merge ck_2_1 (true -> v_212)(false -> v_215);
  v_222 = merge ck_2_1 (true -> v_213)(false -> v_216);
  v_223 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_217);
  v_224 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_218);
  v_225 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_219);
  s_1 = merge ck_1 (true -> v_220)(false -> v_223);
  s_2 = merge ck_1 (true -> v_221)(false -> v_224);
  s_3 = merge ck_1 (true -> v_222)(false -> v_225);
  v_226 = merge ck_3_1_1 (true -> r_St_7_Heat)(false -> r_St_7_Maintain);
  v_227 =
    merge ck_3_1_0
      (true -> 
        (((true when true(ck_1)) when false(ck_2_1)) when true(ck_3_1_0)))
      (false -> r_St_7_Off);
  v_228 = merge ck_2_1 (true -> v_226)(false -> v_227);
  v_229 = merge ck_3_0_0 (true -> r_St_7_Reheat)(false -> r_St_7_Standby);
  v_230 =
    merge ck_2_0
      (true -> ((true when false(ck_1)) when true(ck_2_0)))(false -> v_229);
  r = merge ck_1 (true -> v_228)(false -> v_230);
  ck_3_1_1 = ((ck_3 when true(ck_1)) when true(ck_2_1));
  ck_3_1_0 = ((ck_3 when true(ck_1)) when false(ck_2_1));
  ck_2_1 = (ck_2 when true(ck_1));
  ck_3_0_1 = ((ck_3 when false(ck_1)) when true(ck_2_0));
  ck_3_0_0 = ((ck_3 when false(ck_1)) when false(ck_2_0));
  ck_2_0 = (ck_2 when false(ck_1));
  s_St_7_Off_3_1_1 =
    ((s_St_7_Off_3 when true(s_St_7_Off_1)) when true(s_St_7_Off_2_1));
  s_St_7_Off_3_1_0 =
    ((s_St_7_Off_3 when true(s_St_7_Off_1)) when false(s_St_7_Off_2_1));
  s_St_7_Off_2_1 = (s_St_7_Off_2 when true(s_St_7_Off_1));
  s_St_7_Off_3_0_1 =
    ((s_St_7_Off_3 when false(s_St_7_Off_1)) when true(s_St_7_Off_2_0));
  s_St_7_Off_3_0_0 =
    ((s_St_7_Off_3 when false(s_St_7_Off_1)) when false(s_St_7_Off_2_0));
  s_St_7_Off_2_0 = (s_St_7_Off_2 when false(s_St_7_Off_1));
  s_St_7_Heat_3_1_1 =
    ((s_St_7_Heat_3 when true(s_St_7_Heat_1)) when true(s_St_7_Heat_2_1));
  s_St_7_Heat_3_1_0 =
    ((s_St_7_Heat_3 when true(s_St_7_Heat_1)) when false(s_St_7_Heat_2_1));
  s_St_7_Heat_2_1 = (s_St_7_Heat_2 when true(s_St_7_Heat_1));
  s_St_7_Heat_3_0_1 =
    ((s_St_7_Heat_3 when false(s_St_7_Heat_1)) when true(s_St_7_Heat_2_0));
  s_St_7_Heat_3_0_0 =
    ((s_St_7_Heat_3 when false(s_St_7_Heat_1)) when false(s_St_7_Heat_2_0));
  s_St_7_Heat_2_0 = (s_St_7_Heat_2 when false(s_St_7_Heat_1));
  s_St_7_Maintain_3_1_1 =
    ((s_St_7_Maintain_3 when true(s_St_7_Maintain_1))
      when true(s_St_7_Maintain_2_1));
  s_St_7_Maintain_3_1_0 =
    ((s_St_7_Maintain_3 when true(s_St_7_Maintain_1))
      when false(s_St_7_Maintain_2_1));
  s_St_7_Maintain_2_1 = (s_St_7_Maintain_2 when true(s_St_7_Maintain_1));
  s_St_7_Maintain_3_0_1 =
    ((s_St_7_Maintain_3 when false(s_St_7_Maintain_1))
      when true(s_St_7_Maintain_2_0));
  s_St_7_Maintain_3_0_0 =
    ((s_St_7_Maintain_3 when false(s_St_7_Maintain_1))
      when false(s_St_7_Maintain_2_0));
  s_St_7_Maintain_2_0 = (s_St_7_Maintain_2 when false(s_St_7_Maintain_1));
  s_St_7_Reheat_3_1_1 =
    ((s_St_7_Reheat_3 when true(s_St_7_Reheat_1))
      when true(s_St_7_Reheat_2_1));
  s_St_7_Reheat_3_1_0 =
    ((s_St_7_Reheat_3 when true(s_St_7_Reheat_1))
      when false(s_St_7_Reheat_2_1));
  s_St_7_Reheat_2_1 = (s_St_7_Reheat_2 when true(s_St_7_Reheat_1));
  s_St_7_Reheat_3_0_1 =
    ((s_St_7_Reheat_3 when false(s_St_7_Reheat_1))
      when true(s_St_7_Reheat_2_0));
  s_St_7_Reheat_3_0_0 =
    ((s_St_7_Reheat_3 when false(s_St_7_Reheat_1))
      when false(s_St_7_Reheat_2_0));
  s_St_7_Reheat_2_0 = (s_St_7_Reheat_2 when false(s_St_7_Reheat_1));
  s_St_7_Standby_3_1_1 =
    ((s_St_7_Standby_3 when true(s_St_7_Standby_1))
      when true(s_St_7_Standby_2_1));
  s_St_7_Standby_3_1_0 =
    ((s_St_7_Standby_3 when true(s_St_7_Standby_1))
      when false(s_St_7_Standby_2_1));
  s_St_7_Standby_2_1 = (s_St_7_Standby_2 when true(s_St_7_Standby_1));
  s_St_7_Standby_3_0_1 =
    ((s_St_7_Standby_3 when false(s_St_7_Standby_1))
      when true(s_St_7_Standby_2_0));
  s_St_7_Standby_3_0_0 =
    ((s_St_7_Standby_3 when false(s_St_7_Standby_1))
      when false(s_St_7_Standby_2_0));
  s_St_7_Standby_2_0 = (s_St_7_Standby_2 when false(s_St_7_Standby_1));
  ns_3_1_1 = ((ns_3 when true(ns_1)) when true(ns_2_1));
  ns_3_1_0 = ((ns_3 when true(ns_1)) when false(ns_2_1));
  ns_2_1 = (ns_2 when true(ns_1));
  ns_3_0_1 = ((ns_3 when false(ns_1)) when true(ns_2_0));
  ns_3_0_0 = ((ns_3 when false(ns_1)) when false(ns_2_0));
  ns_2_0 = (ns_2 when false(ns_1));
  s_3_1_1 = ((s_3 when true(s_1)) when true(s_2_1));
  s_3_1_0 = ((s_3 when true(s_1)) when false(s_2_1));
  s_2_1 = (s_2 when true(s_1));
  s_3_0_1 = ((s_3 when false(s_1)) when true(s_2_0));
  s_3_0_0 = ((s_3 when false(s_1)) when false(s_2_0));
  s_2_0 = (s_2 when false(s_1))
tel

node controller(presence1 : bool; push1 : bool; lamp_switch1 : bool;
                 tv_switch1 : bool)
returns (room_oc1 : bool; door_open1 : bool; lamp_on1 : bool; tv_on1 : bool)
contract
  var rule5 : bool; rule4 : bool; rule3 : bool; rule2 : bool; v : bool;
      v_52 : bool; v_53 : bool; v_54 : bool; v_55 : bool; v_56 : bool;
      v_57 : bool; v_58 : bool; v_59 : bool; v_60 : bool; v_61 : bool;
      v_62 : bool;
  let
    v = not(door_open1);
    rule5 = (room_oc1 & v);
    v_52 = not(presence1);
    v_53 = (lamp_on1 or tv_on1);
    v_54 = (v_52 & v_53);
    rule4 = not(v_54);
    v_55 = (lamp_on1 or tv_on1);
    v_56 = not(v_55);
    v_57 = (presence1 & v_56);
    rule3 = not(v_57);
    v_58 = not(room_oc1);
    v_59 = (v_58 & door_open1);
    rule2 = not(v_59);
    v_60 = (rule2 & rule3);
    v_61 = (v_60 & rule4);
    v_62 = (v_61 & rule5)
  tel
  assume true@ enforce v_62]
                 with (c_tv1_2 : bool; c_tv1_1 : bool; c_lamp2_1 : bool;
                        c_lamp1_1 : bool; c_door2_1 : bool; c_door1_1 : bool;
                        c2_1 : bool; c1_1 : bool)
                 var nr_St_8_On : bool; ns_St_8_On_1 : bool;
                     tv_on_St_8_On : bool; nr_St_8_Off : bool;
                     ns_St_8_Off_1 : bool; tv_on_St_8_Off : bool;
                     ck_15_1 : bool; v_76 : bool; v_75 : bool; v_74 : bool;
                     v_73 : bool; v_72 : bool; v_71 : bool; r_St_8_On : bool;
                     s_St_8_On_1 : bool; r_St_8_Off : bool;
                     s_St_8_Off_1 : bool; ck_14_1 : bool;
                     nr_1_St_9_On : bool; ns_1_St_9_On_1 : bool;
                     lamp_on_St_9_On : bool; nr_1_St_9_Off : bool;
                     ns_1_St_9_Off_1 : bool; lamp_on_St_9_Off : bool;
                     ck_13_1 : bool; v_70 : bool; v_69 : bool; v_68 : bool;
                     v_67 : bool; r_1_St_9_On : bool; s_1_St_9_On_1 : bool;
                     r_1_St_9_Off : bool; s_1_St_9_Off_1 : bool;
                     ck_12_1 : bool; nr_2_St_10_Open : bool;
                     ns_2_St_10_Open_1 : bool; door_open_St_10_Open : bool;
                     nr_2_St_10_Closed : bool; ns_2_St_10_Closed_1 : bool;
                     door_open_St_10_Closed : bool; ck_11_1 : bool;
                     v_66 : bool; v_65 : bool; v_64 : bool; v_63 : bool;
                     r_2_St_10_Open : bool; s_2_St_10_Open_1 : bool;
                     r_2_St_10_Closed : bool; s_2_St_10_Closed_1 : bool;
                     ck_10_1 : bool; nr_3_St_11_Occupied : bool;
                     ns_3_St_11_Occupied_1 : bool;
                     room_oc_St_11_Occupied : bool; nr_3_St_11_Empty : bool;
                     ns_3_St_11_Empty_1 : bool; room_oc_St_11_Empty : bool;
                     ck_9_1 : bool; r_3_St_11_Occupied : bool;
                     s_3_St_11_Occupied_1 : bool; r_3_St_11_Empty : bool;
                     s_3_St_11_Empty_1 : bool; ck_1 : bool; s_3_1 : bool;
                     ns_3_1 : bool; r_3 : bool; nr_3 : bool; pnr_3 : bool;
                     s_2_1 : bool; ns_2_1 : bool; r_2 : bool; nr_2 : bool;
                     pnr_2 : bool; s_1_1 : bool; ns_1_1 : bool; r_1 : bool;
                     nr_1 : bool; pnr_1 : bool; s_1_2 : bool; ns_1_2 : bool;
                     r : bool; nr : bool; pnr : bool; tv_switch : bool;
                     c_tv1 : bool; c_tv2 : bool; tv_on : bool;
                     lamp_switch : bool; c_lamp1 : bool; c_lamp2 : bool;
                     lamp_on : bool; push : bool; c_door1 : bool;
                     c_door2 : bool; door_open : bool; presence : bool;
                     room_oc : bool;
  let
    tv_switch = tv_switch1;
    c_tv1 = c_tv1_1;
    c_tv2 = c_tv1_2;
    pnr = false fby nr;
    ck_15_1 = s_1_2;
    tv_on_St_8_Off = false;
    nr_St_8_Off = false;
    ns_St_8_Off_1 = true;
    tv_on_St_8_On = true;
    nr_St_8_On = false;
    ns_St_8_On_1 = false;
    tv_on = merge ck_15_1 (true -> tv_on_St_8_Off)(false -> tv_on_St_8_On);
    ns_1_2 = merge ck_15_1 (true -> ns_St_8_Off_1)(false -> ns_St_8_On_1);
    nr = merge ck_15_1 (true -> nr_St_8_Off)(false -> nr_St_8_On);
    ck_14_1 = true fby ns_1_2;
    r_St_8_Off = if v_76 then true else (pnr when true(ck_14_1));
    s_St_8_Off_1 = if v_76 then false else true;
    v_76 = (v_75 & (c_tv2 when true(ck_14_1)));
    v_75 = ((tv_switch when true(ck_14_1)) or (c_tv1 when true(ck_14_1)));
    r_St_8_On = if v_74 then true else (pnr when false(ck_14_1));
    s_St_8_On_1 = if v_74 then true else false;
    v_74 = (v_72 & v_73);
    v_73 = not((c_tv2 when false(ck_14_1)));
    v_72 = ((tv_switch when false(ck_14_1)) or v_71);
    v_71 = not((c_tv1 when false(ck_14_1)));
    s_1_2 = merge ck_14_1 (true -> s_St_8_Off_1)(false -> s_St_8_On_1);
    r = merge ck_14_1 (true -> r_St_8_Off)(false -> r_St_8_On);
    lamp_switch = lamp_switch1;
    c_lamp1 = c_lamp1_1;
    c_lamp2 = c_lamp2_1;
    pnr_1 = false fby nr_1;
    ck_13_1 = s_1_1;
    lamp_on_St_9_Off = false;
    nr_1_St_9_Off = false;
    ns_1_St_9_Off_1 = true;
    lamp_on_St_9_On = true;
    nr_1_St_9_On = false;
    ns_1_St_9_On_1 = false;
    lamp_on =
      merge ck_13_1 (true -> lamp_on_St_9_Off)(false -> lamp_on_St_9_On);
    ns_1_1 = merge ck_13_1 (true -> ns_1_St_9_Off_1)(false -> ns_1_St_9_On_1);
    nr_1 = merge ck_13_1 (true -> nr_1_St_9_Off)(false -> nr_1_St_9_On);
    ck_12_1 = true fby ns_1_1;
    r_1_St_9_Off = if v_70 then true else (pnr_1 when true(ck_12_1));
    s_1_St_9_Off_1 = if v_70 then false else true;
    v_70 = (v_69 & (c_lamp2 when true(ck_12_1)));
    v_69 = ((lamp_switch when true(ck_12_1)) or (c_lamp1 when true(ck_12_1)));
    r_1_St_9_On = if v_68 then true else (pnr_1 when false(ck_12_1));
    s_1_St_9_On_1 = if v_68 then true else false;
    v_68 = (v_67 & (c_lamp2 when false(ck_12_1)));
    v_67 =
      ((lamp_switch when false(ck_12_1)) or (c_lamp1 when false(ck_12_1)));
    s_1_1 = merge ck_12_1 (true -> s_1_St_9_Off_1)(false -> s_1_St_9_On_1);
    r_1 = merge ck_12_1 (true -> r_1_St_9_Off)(false -> r_1_St_9_On);
    push = push1;
    c_door1 = c_door1_1;
    c_door2 = c_door2_1;
    pnr_2 = false fby nr_2;
    ck_11_1 = s_2_1;
    door_open_St_10_Closed = false;
    nr_2_St_10_Closed = false;
    ns_2_St_10_Closed_1 = true;
    door_open_St_10_Open = true;
    nr_2_St_10_Open = false;
    ns_2_St_10_Open_1 = false;
    door_open =
      merge ck_11_1
        (true -> door_open_St_10_Closed)(false -> door_open_St_10_Open);
    ns_2_1 =
      merge ck_11_1 (true -> ns_2_St_10_Closed_1)(false -> ns_2_St_10_Open_1);
    nr_2 =
      merge ck_11_1 (true -> nr_2_St_10_Closed)(false -> nr_2_St_10_Open);
    ck_10_1 = true fby ns_2_1;
    r_2_St_10_Closed = if v_66 then true else (pnr_2 when true(ck_10_1));
    s_2_St_10_Closed_1 = if v_66 then false else true;
    v_66 = (v_65 & (c_door2 when true(ck_10_1)));
    v_65 = ((push when true(ck_10_1)) or (c_door1 when true(ck_10_1)));
    r_2_St_10_Open = if v_64 then true else (pnr_2 when false(ck_10_1));
    s_2_St_10_Open_1 = if v_64 then true else false;
    v_64 = (v_63 & (c_door2 when false(ck_10_1)));
    v_63 = ((push when false(ck_10_1)) & (c_door1 when false(ck_10_1)));
    s_2_1 =
      merge ck_10_1 (true -> s_2_St_10_Closed_1)(false -> s_2_St_10_Open_1);
    r_2 = merge ck_10_1 (true -> r_2_St_10_Closed)(false -> r_2_St_10_Open);
    presence = presence1;
    pnr_3 = false fby nr_3;
    ck_9_1 = s_3_1;
    room_oc_St_11_Empty = false;
    nr_3_St_11_Empty = false;
    ns_3_St_11_Empty_1 = true;
    room_oc_St_11_Occupied = true;
    nr_3_St_11_Occupied = false;
    ns_3_St_11_Occupied_1 = false;
    room_oc =
      merge ck_9_1
        (true -> room_oc_St_11_Empty)(false -> room_oc_St_11_Occupied);
    ns_3_1 =
      merge ck_9_1
        (true -> ns_3_St_11_Empty_1)(false -> ns_3_St_11_Occupied_1);
    nr_3 =
      merge ck_9_1 (true -> nr_3_St_11_Empty)(false -> nr_3_St_11_Occupied);
    ck_1 = true fby ns_3_1;
    r_3_St_11_Empty =
      if (presence when true(ck_1)) then true else (pnr_3 when true(ck_1));
    s_3_St_11_Empty_1 = if (presence when true(ck_1)) then false else true;
    r_3_St_11_Occupied =
      if (presence when false(ck_1)) then true else (pnr_3 when false(ck_1));
    s_3_St_11_Occupied_1 =
      if (presence when false(ck_1)) then true else false;
    s_3_1 =
      merge ck_1 (true -> s_3_St_11_Empty_1)(false -> s_3_St_11_Occupied_1);
    r_3 = merge ck_1 (true -> r_3_St_11_Empty)(false -> r_3_St_11_Occupied);
    room_oc1 = room_oc;
    door_open1 = door_open;
    lamp_on1 = lamp_on;
    tv_on1 = tv_on
  tel

