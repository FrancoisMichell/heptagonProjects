% --- Generated the 20/5/2018 at 22:24 --- %
% --- heptagon compiler, version 1.03.00 (compiled fri. jan. 19 10:22:24 CET 2018) --- %
% --- Command line: /usr/local/bin/heptc -target c -target z3z -s controller system.ept --- %

set_reorder(2);read("Property.lib");read("Synthesis.lib");read("Verif_Determ.lib");read("Simul.lib");read("Synthesis_Partial_order.lib");read("Orbite.lib");
% -- dependencies --- %

% ---------- process controller ---------- %

declare(controller_presence1, controller_push1, controller_lamp_switch1,
        controller_tv_switch1, controller_c_tv1_2, controller_c_tv1_1,
        controller_c_lamp2_1, controller_c_lamp1_1, controller_c_door2_1,
        controller_c_door1_1, controller_c2_1, controller_c1_1,
        controller_ck_1, controller_pnr_3, controller_ck_10_1,
        controller_pnr_2, controller_ck_12_1, controller_pnr_1,
        controller_ck_14_1, controller_pnr, controller_error_state);
conditions : [controller_presence1, controller_push1,
              controller_lamp_switch1, controller_tv_switch1,
              controller_c_tv1_2, controller_c_tv1_1, controller_c_lamp2_1,
              controller_c_lamp1_1, controller_c_door2_1,
              controller_c_door1_1, controller_c2_1, controller_c1_1];
states : [controller_ck_1, controller_pnr_3, controller_ck_10_1,
          controller_pnr_2, controller_ck_12_1, controller_pnr_1,
          controller_ck_14_1, controller_pnr, controller_error_state];
controllables : [controller_c_tv1_2, controller_c_tv1_1,
                 controller_c_lamp2_1, controller_c_lamp1_1,
                 controller_c_door2_1, controller_c_door1_1, controller_c2_1,
                 controller_c1_1];
evolutions : [];
initialisations : [];
controller_presence : controller_presence1;
controller_c_door2 : controller_c_door2_1;
controller_c_door1 : controller_c_door1_1;
controller_push : controller_push1;
controller_c_lamp2 : controller_c_lamp2_1;
controller_c_lamp1 : controller_c_lamp1_1;
controller_lamp_switch : controller_lamp_switch1;
controller_c_tv2 : controller_c_tv1_2;
controller_c_tv1 : controller_c_tv1_1;
controller_tv_switch : controller_tv_switch1;
controller_s_3_St_11_Occupied_1 : ((1 when controller_presence) default -1);
controller_r_3_St_11_Occupied : ((1 when controller_presence)
  default controller_pnr_3);
controller_s_3_St_11_Empty_1 : ((-1 when controller_presence) default 1);
controller_s_3_1 : ((controller_s_3_St_11_Empty_1 when controller_ck_1)
  default controller_s_3_St_11_Occupied_1);
controller_r_3_St_11_Empty : ((1 when controller_presence)
  default controller_pnr_3);
controller_r_3 : ((controller_r_3_St_11_Empty when controller_ck_1)
  default controller_r_3_St_11_Occupied);
controller_ck_9_1 : controller_s_3_1;
controller_ns_3_St_11_Occupied_1 : -1;
controller_nr_3_St_11_Occupied : -1;
controller_room_oc_St_11_Occupied : 1;
controller_ns_3_St_11_Empty_1 : 1;
controller_ns_3_1 : ((controller_ns_3_St_11_Empty_1 when controller_ck_9_1)
  default controller_ns_3_St_11_Occupied_1);
controller_nr_3_St_11_Empty : -1;
controller_nr_3 : ((controller_nr_3_St_11_Empty when controller_ck_9_1)
  default controller_nr_3_St_11_Occupied);
controller_room_oc_St_11_Empty : -1;
controller_room_oc : ((controller_room_oc_St_11_Empty when controller_ck_9_1)
  default controller_room_oc_St_11_Occupied);
controller_room_oc1 : controller_room_oc;
controller_v_63 : (controller_push and controller_c_door1);
controller_v_64 : (controller_v_63 and controller_c_door2);
controller_s_2_St_10_Open_1 : ((1 when controller_v_64) default -1);
controller_r_2_St_10_Open : ((1 when controller_v_64)
  default controller_pnr_2);
controller_v_65 : (controller_push or controller_c_door1);
controller_v_66 : (controller_v_65 and controller_c_door2);
controller_s_2_St_10_Closed_1 : ((-1 when controller_v_66) default 1);
controller_s_2_1 : ((controller_s_2_St_10_Closed_1 when controller_ck_10_1)
  default controller_s_2_St_10_Open_1);
controller_r_2_St_10_Closed : ((1 when controller_v_66)
  default controller_pnr_2);
controller_r_2 : ((controller_r_2_St_10_Closed when controller_ck_10_1)
  default controller_r_2_St_10_Open);
controller_ck_11_1 : controller_s_2_1;
controller_ns_2_St_10_Open_1 : -1;
controller_nr_2_St_10_Open : -1;
controller_door_open_St_10_Open : 1;
controller_ns_2_St_10_Closed_1 : 1;
controller_ns_2_1 : ((controller_ns_2_St_10_Closed_1 when controller_ck_11_1)
  default controller_ns_2_St_10_Open_1);
controller_nr_2_St_10_Closed : -1;
controller_nr_2 : ((controller_nr_2_St_10_Closed when controller_ck_11_1)
  default controller_nr_2_St_10_Open);
controller_door_open_St_10_Closed : -1;
controller_door_open : ((controller_door_open_St_10_Closed
  when controller_ck_11_1) default controller_door_open_St_10_Open);
controller_door_open1 : controller_door_open;
controller_v_67 : (controller_lamp_switch or controller_c_lamp1);
controller_v_68 : (controller_v_67 and controller_c_lamp2);
controller_s_1_St_9_On_1 : ((1 when controller_v_68) default -1);
controller_r_1_St_9_On : ((1 when controller_v_68) default controller_pnr_1);
controller_v_69 : (controller_lamp_switch or controller_c_lamp1);
controller_v_70 : (controller_v_69 and controller_c_lamp2);
controller_s_1_St_9_Off_1 : ((-1 when controller_v_70) default 1);
controller_s_1_1 : ((controller_s_1_St_9_Off_1 when controller_ck_12_1)
  default controller_s_1_St_9_On_1);
controller_r_1_St_9_Off : ((1 when controller_v_70)
  default controller_pnr_1);
controller_r_1 : ((controller_r_1_St_9_Off when controller_ck_12_1)
  default controller_r_1_St_9_On);
controller_ck_13_1 : controller_s_1_1;
controller_ns_1_St_9_On_1 : -1;
controller_nr_1_St_9_On : -1;
controller_lamp_on_St_9_On : 1;
controller_ns_1_St_9_Off_1 : 1;
controller_ns_1_1 : ((controller_ns_1_St_9_Off_1 when controller_ck_13_1)
  default controller_ns_1_St_9_On_1);
controller_nr_1_St_9_Off : -1;
controller_nr_1 : ((controller_nr_1_St_9_Off when controller_ck_13_1)
  default controller_nr_1_St_9_On);
controller_lamp_on_St_9_Off : -1;
controller_lamp_on : ((controller_lamp_on_St_9_Off when controller_ck_13_1)
  default controller_lamp_on_St_9_On);
controller_lamp_on1 : controller_lamp_on;
controller_v_71 : (not controller_c_tv1);
controller_v_72 : (controller_tv_switch or controller_v_71);
controller_v_73 : (not controller_c_tv2);
controller_v_74 : (controller_v_72 and controller_v_73);
controller_s_St_8_On_1 : ((1 when controller_v_74) default -1);
controller_r_St_8_On : ((1 when controller_v_74) default controller_pnr);
controller_v_75 : (controller_tv_switch or controller_c_tv1);
controller_v_76 : (controller_v_75 and controller_c_tv2);
controller_s_St_8_Off_1 : ((-1 when controller_v_76) default 1);
controller_s_1_2 : ((controller_s_St_8_Off_1 when controller_ck_14_1)
  default controller_s_St_8_On_1);
controller_r_St_8_Off : ((1 when controller_v_76) default controller_pnr);
controller_r : ((controller_r_St_8_Off when controller_ck_14_1)
  default controller_r_St_8_On);
controller_ck_15_1 : controller_s_1_2;
controller_ns_St_8_On_1 : -1;
controller_nr_St_8_On : -1;
controller_tv_on_St_8_On : 1;
controller_ns_St_8_Off_1 : 1;
controller_ns_1_2 : ((controller_ns_St_8_Off_1 when controller_ck_15_1)
  default controller_ns_St_8_On_1);
controller_nr_St_8_Off : -1;
controller_nr : ((controller_nr_St_8_Off when controller_ck_15_1)
  default controller_nr_St_8_On);
controller_tv_on_St_8_Off : -1;
controller_tv_on : ((controller_tv_on_St_8_Off when controller_ck_15_1)
  default controller_tv_on_St_8_On);
controller_tv_on1 : controller_tv_on;
initialisations : concat(initialisations, [(controller_ck_1 = 1)]);
evolutions : concat(evolutions, [(controller_ns_3_1 default controller_ck_1)]);
initialisations : concat(initialisations, [(controller_pnr_3 = -1)]);
evolutions : concat(evolutions, [(controller_nr_3 default controller_pnr_3)]);
initialisations : concat(initialisations, [(controller_ck_10_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_2_1 default controller_ck_10_1)]);
initialisations : concat(initialisations, [(controller_pnr_2 = -1)]);
evolutions : concat(evolutions, [(controller_nr_2 default controller_pnr_2)]);
initialisations : concat(initialisations, [(controller_ck_12_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_1_1 default controller_ck_12_1)]);
initialisations : concat(initialisations, [(controller_pnr_1 = -1)]);
evolutions : concat(evolutions, [(controller_nr_1 default controller_pnr_1)]);
initialisations : concat(initialisations, [(controller_ck_14_1 = 1)]);
evolutions : concat(evolutions,
                    [(controller_ns_1_2 default controller_ck_14_1)]);
initialisations : concat(initialisations, [(controller_pnr = -1)]);
evolutions : concat(evolutions, [(controller_nr default controller_pnr)]);
controller_v_58 : (not controller_room_oc1);
controller_v_59 : (controller_v_58 and controller_door_open1);
controller_rule2 : (not controller_v_59);
controller_v_55 : (controller_lamp_on1 or controller_tv_on1);
controller_v_56 : (not controller_v_55);
controller_v_57 : (controller_presence1 and controller_v_56);
controller_rule3 : (not controller_v_57);
controller_v_60 : (controller_rule2 and controller_rule3);
controller_v_53 : (controller_lamp_on1 or controller_tv_on1);
controller_v_52 : (not controller_presence1);
controller_v_54 : (controller_v_52 and controller_v_53);
controller_rule4 : (not controller_v_54);
controller_v_61 : (controller_v_60 and controller_rule4);
controller_v : (not controller_door_open1);
controller_rule5 : (controller_room_oc1 and controller_v);
controller_v_62 : (controller_v_61 and controller_rule5);
controller_assume : 1;
controller_guarantee : controller_v_62;
initialisations : concat(initialisations, [(controller_error_state = 1)]);
evolutions : concat(evolutions, [controller_guarantee]);
constraints : [((controller_presence1^2) = 1), ((controller_push1^2) = 1),
               ((controller_lamp_switch1^2) = 1), ((controller_tv_switch1^2)
               = 1), ((controller_c_tv1_2^2) = 1), ((controller_c_tv1_1^2)
               = 1), ((controller_c_lamp2_1^2) = 1),
               ((controller_c_lamp1_1^2) = 1), ((controller_c_door2_1^2)
               = 1), ((controller_c_door1_1^2) = 1), ((controller_c2_1^2)
               = 1), ((controller_c1_1^2) = 1), (controller_assume = 1)];

% --- outputs : [controller_room_oc1, controller_door_open1,
                 controller_lamp_on1, controller_tv_on1] --- %
controller : processus(conditions, states, evolutions, initialisations,
                       [gen(constraints)], controllables);
controller_init : initial(controller);
controller : S_Security(controller,B_True(controller,controller_error_state));
dcs_result : equal(controller_init,initial(controller));
if dcs_result then
    print("controller: synthesis succeeded.")
else
    print("controller: synthesis failed.");

if dcs_result then
    print("Triangulation and controller generation...")
else
    quit(1);
declare(p_controller_c_tv1_2, p_controller_c_tv1_1, p_controller_c_lamp2_1,
        p_controller_c_lamp1_1, p_controller_c_door2_1,
        p_controller_c_door1_1, p_controller_c2_1, p_controller_c1_1);
phantom_vars : [p_controller_c_tv1_2, p_controller_c_tv1_1,
                p_controller_c_lamp2_1, p_controller_c_lamp1_1,
                p_controller_c_door2_1, p_controller_c_door1_1,
                p_controller_c2_1, p_controller_c1_1];
controller_triang : Triang(constraint(controller),controllables,phantom_vars);
controller_inputs : [controller_presence1, controller_push1,
                     controller_lamp_switch1, controller_tv_switch1,
                     controller_ck_1, controller_pnr_3, controller_ck_10_1,
                     controller_pnr_2, controller_ck_12_1, controller_pnr_1,
                     controller_ck_14_1, controller_pnr,
                     p_controller_c_tv1_2, p_controller_c_tv1_1,
                     p_controller_c_lamp2_1, p_controller_c_lamp1_1,
                     p_controller_c_door2_1, p_controller_c_door1_1,
                     p_controller_c2_1, p_controller_c1_1];
heptagon_controller("controller_controller.ept","controller",controller_inputs,controllables,controller_triang);

